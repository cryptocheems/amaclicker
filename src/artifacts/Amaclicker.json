{
  "contractName": "Amaclicker",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "cheemscoin",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "amacoin",
      "outputs": [
        {
          "internalType": "contract Amacoin",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "clickRewards",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "investments",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "redeemBlock",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "investmentsInfo",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "cost",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "reward",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "time",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "skins",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "skinsInfo",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "upgrades",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "upgradesInfo",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "cost",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "boost",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "click",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "upgradeIndex",
          "type": "uint256"
        }
      ],
      "name": "buyUpgrade",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "investmentIndex",
          "type": "uint256"
        }
      ],
      "name": "buyInvestment",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "skindex",
          "type": "uint256"
        }
      ],
      "name": "buySkin",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "redeem",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.3+commit.8d00100c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"cheemscoin\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"amacoin\",\"outputs\":[{\"internalType\":\"contract Amacoin\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"investmentIndex\",\"type\":\"uint256\"}],\"name\":\"buyInvestment\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"skindex\",\"type\":\"uint256\"}],\"name\":\"buySkin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"upgradeIndex\",\"type\":\"uint256\"}],\"name\":\"buyUpgrade\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"click\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"clickRewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"investments\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"redeemBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"investmentsInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"cost\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"redeem\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"skins\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"skinsInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"upgrades\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"upgradesInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"cost\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"boost\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/kaikurosawa/Desktop/code/amaclicker/contracts/Amaclicker.sol\":\"Amaclicker\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/kaikurosawa/Desktop/code/amaclicker/contracts/Amaclicker.sol\":{\"keccak256\":\"0x54917a063949101d3ca16a0ffbb98b6cd144d7dc1dbad9324ea313c780f1616c\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://d945b363d9e10b00a93c6c21fa9a8d74db1d445d85d34a45b8b7da0f4c63333e\",\"dweb:/ipfs/QmciAhKAvLbJcaH4Pqt4vMbmEmSrJE2952mpa3T9tVvuEb\"]},\"/Users/kaikurosawa/Desktop/code/amaclicker/contracts/Amacoin.sol\":{\"keccak256\":\"0x9fe4b451df5e61d66ffedfecfe08b9fb8b72c29e5cd6ca6115122abbefd627be\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://a9c5223abcb2cda690c54e11fe087b7d8cb521e11d28ef5c2c0a360b924de747\",\"dweb:/ipfs/QmSoufFmxTBoVftnmRsUVrFBoZaKAb5HywE3pcGPsru8Qi\"]},\"/Users/kaikurosawa/Desktop/code/amaclicker/contracts/Structs.sol\":{\"keccak256\":\"0xc00af344b9776a878e2fb5eb57127dac6fc110c38c490167d6d1419906bdcd39\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://538a30bfba13824604f95a137d2c169378a6a78b35362dd3097b4346cd842c70\",\"dweb:/ipfs/QmXJaM11Bx1ERSX1ka1ZsCWxuRppseUDmbuYiCmV5Zcz5P\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x1cae4f85f114ff17b90414f5da67365b1d00337abb5bce9bf944eb78a2c0673c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d5ff16b336ce8f906478d5f2eecc6435e00833bdc0b92f6b209cf9e92cb5b2b7\",\"dweb:/ipfs/QmRD1rAZEqQ73C33cdA3QoUyBDMEWnNKNMc6PNkAZWHeQQ\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xf8e8d118a7a8b2e134181f7da655f6266aa3a0f9134b2605747139fcb0c5d835\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9ec48567e7ad06acb670980d5cdf3fd7f3949bf12894f02d68c3bb43e75aa84f\",\"dweb:/ipfs/QmaG3R2J9cz92YT77vFjYrjMNU2wHp4ypwYD62HqDUqS5U\"]},\"@openzeppelin/contracts/token/ERC777/ERC777.sol\":{\"keccak256\":\"0xe4cdf1840b9130627d6db46d4544aa9dbd1e500255d0b46394e43d2ea18fd7fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9a422348fcf511266a8aa961f58475984ee41ee647ab4d82364c88b70fdb56c7\",\"dweb:/ipfs/Qmb4fm75Jmef8C8FRD2uCBhSGprbrXqHvFKdXYcJxBZeGE\"]},\"@openzeppelin/contracts/token/ERC777/IERC777.sol\":{\"keccak256\":\"0x180af7df8832ffcba53dae0c5450b062d2c571a8eaec22619fcaef5758503d7d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6232d44d9a11c9764c655bb481213a0a92afd27f6b5a1083343d512f04063735\",\"dweb:/ipfs/QmSfSAzCgcMMaXVc7EnoC98opUjizqx6svmJNotiBWaGbc\"]},\"@openzeppelin/contracts/token/ERC777/IERC777Recipient.sol\":{\"keccak256\":\"0x0fd59f83d16f090c27a8105db0f4ad05b0f5d127f9878b82ebf0ad2bbc4e3f03\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b0f20fa38853a7b046933b0c905b6e021b081712032ee395c3ecca01998047ff\",\"dweb:/ipfs/QmRDRgthGgc9XTfQKKN29KZF8BYanfcE5XP9cvAdh1E146\"]},\"@openzeppelin/contracts/token/ERC777/IERC777Sender.sol\":{\"keccak256\":\"0x54230ad917ef5075db47e57ac43655f1197ac913686d5ced13062c2da0cce857\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e198d3b0abb92a8ac98583349c07a653714a581dbd587f17ea7bff17b460e09\",\"dweb:/ipfs/QmR1TtTSFZkTAH6QdXj4eFCtfMnThmBKhroDqsWtzU65SJ\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x069b2631bb5b5193a58ccf7a06266c7361bd2c20095667af4402817605627f45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a4c96fafff76deda5697c3c5c98cade6e6e1b178254544c106bf360c079ce4e\",\"dweb:/ipfs/QmXmxubE3jnatFgZuN8ay1VV6hZ8WRmhvUjNpeVjki15HX\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xf930d2df426bfcfc1f7415be724f04081c96f4fb9ec8d0e3a521c07692dface0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc2bfdea0d2562c76fb3c4cf70a86c6ba25c5a30e8f8515c95aafdf8383f8395\",\"dweb:/ipfs/QmTbFya18786ckJfLYUoWau9jBTKfmWnWm5XSViWvB7PXN\"]},\"@openzeppelin/contracts/utils/introspection/IERC1820Registry.sol\":{\"keccak256\":\"0x49f0bb79f8a5c60b2a8779d0b501f16bd3110814b9e72498caad3bc339e33def\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fd70c7bf78e7ae03e35553620057e2c719e50f91b6bb657927c0544e76b37ff8\",\"dweb:/ipfs/QmYPvnkh3VqU3zgMNnoSVuUZjwmd7QrmjjoDc5QA5UPx16\"]}},\"version\":1}",
  "bytecode": "0x60806040526040518060600160405280600069ffffffffffffffffffff168152602001683635c9adc5dea0000069ffffffffffffffffffff16815260200169021e19e0c9bab240000069ffffffffffffffffffff16815250600790600362000069929190620003e0565b503480156200007757600080fd5b5060405162005e9338038062005e9383398181016040528101906200009d919062000484565b6000600167ffffffffffffffff811115620000e1577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051908082528060200260200182016040528015620001105781602001602082028036833780820191505090505b50905030816000815181106200014f577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250508082604051620001999062000440565b620001a692919062000584565b604051809103906000f080158015620001c3573d6000803e3d6000fd5b506000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f2fde38b336040518263ffffffff1660e01b81526004016200025e919062000567565b600060405180830381600087803b1580156200027957600080fd5b505af11580156200028e573d6000803e3d6000fd5b50505050600560405180604001604052806801156abf16a40f0000815260200167016345785d8a000081525090806001815401808255809150506001900390600052602060002090600202016000909190919091506000820151816000015560208201518160010155505060056040518060400160405280683635c9adc5dea000008152602001678ac7230489e8000081525090806001815401808255809150506001900390600052602060002090600202016000909190919091506000820151816000015560208201518160010155505060066040518060600160405280678ac7230489e80000815260200168022b1c8c1227a00000815260200160488152509080600181540180825580915050600190039060005260206000209060030201600090919091909150600082015181600001556020820151816001015560408201518160020155505050506200067b565b8280548282559060005260206000209081019282156200042d579160200282015b828111156200042c578251829069ffffffffffffffffffff1690559160200191906001019062000401565b5b5090506200043c91906200044e565b5090565b6143578062001b3c83390190565b5b80821115620004695760008160009055506001016200044f565b5090565b6000815190506200047e8162000661565b92915050565b6000602082840312156200049757600080fd5b6000620004a7848285016200046d565b91505092915050565b6000620004be8383620004ca565b60208301905092915050565b620004d581620005f1565b82525050565b620004e681620005f1565b82525050565b6000620004f982620005c8565b620005058185620005e0565b93506200051283620005b8565b8060005b83811015620005495781516200052d8882620004b0565b97506200053a83620005d3565b92505060018101905062000516565b5085935050505092915050565b620005618162000639565b82525050565b60006020820190506200057e6000830184620004db565b92915050565b60006040820190508181036000830152620005a08185620004ec565b9050620005b1602083018462000556565b9392505050565b6000819050602082019050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b6000620005fe8262000619565b9050919050565b60006200061282620005f1565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600062000646826200064d565b9050919050565b60006200065a8262000619565b9050919050565b6200066c8162000605565b81146200067857600080fd5b50565b6114b1806200068b6000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c80637ab682631161008c5780639d235de7116100665780639d235de71461023b578063a5a2cb1914610257578063b6b7d93314610273578063db006a75146102a4576100cf565b80637ab68263146101d15780637d55923d146102015780638a3e059a1461020b576100cf565b80632b0f1221146100d457806331629f78146101045780633e6d9770146101225780633eedd49b1461015357806357a1c389146101855780635d8e223c146101a1575b600080fd5b6100ee60048036038101906100e9919061102e565b6102c0565b6040516100fb91906111f4565b60405180910390f35b61010c610303565b604051610119919061120f565b60405180910390f35b61013c6004803603810190610137919061102e565b610327565b60405161014a929190611285565b60405180910390f35b61016d6004803603810190610168919061106a565b610368565b60405161017c939291906112ae565b60405180910390f35b61019f600480360381019061019a919061106a565b6103a2565b005b6101bb60048036038101906101b6919061102e565b610653565b6040516101c8919061126a565b60405180910390f35b6101eb60048036038101906101e69190611005565b610684565b6040516101f8919061126a565b60405180910390f35b61020961069c565b005b6102256004803603810190610220919061106a565b61077d565b604051610232919061126a565b60405180910390f35b6102556004803603810190610250919061106a565b6107a1565b005b610271600480360381019061026c919061106a565b610a04565b005b61028d6004803603810190610288919061106a565b610d2b565b60405161029b929190611285565b60405180910390f35b6102be60048036038101906102b9919061106a565b610d5f565b005b600460205281600052604060002081815481106102dc57600080fd5b9060005260206000209060209182820401919006915091509054906101000a900460ff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6003602052816000526040600020818154811061034357600080fd5b9060005260206000209060020201600091509150508060000154908060010154905082565b6006818154811061037857600080fd5b90600052602060002090600302016000915090508060000154908060010154908060020154905083565b600681815481106103dc577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000209060030201600001548060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b81526004016104489190611161565b60206040518083038186803b15801561046057600080fd5b505afa158015610474573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104989190611093565b10156104d9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d09061124a565b60405180910390fd5b600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060405180604001604052806006858154811061055d577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000209060030201600201544361057a9190611307565b81526020018481525090806001815401808255809150506001900390600052602060002090600202016000909190919091506000820151816000015560208201518160010155505060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663fc673c4f33836040518363ffffffff1660e01b815260040161061d9291906111a5565b600060405180830381600087803b15801561063757600080fd5b505af115801561064b573d6000803e3d6000fd5b505050505050565b6002602052816000526040600020818154811061066f57600080fd5b90600052602060002001600091509150505481565b60016020528060005260406000206000915090505481565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166340c10f1933670de0b6b3a7640000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461072c9190611307565b6040518363ffffffff1660e01b815260040161074992919061117c565b600060405180830381600087803b15801561076357600080fd5b505af1158015610777573d6000803e3d6000fd5b50505050565b6007818154811061078d57600080fd5b906000526020600020016000915090505481565b600781815481106107db577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002001548060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b81526004016108409190611161565b60206040518083038186803b15801561085857600080fd5b505afa15801561086c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108909190611093565b10156108d1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108c89061124a565b60405180910390fd5b6001600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020838154811061094a577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002090602091828204019190066101000a81548160ff02191690831515021790555060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663fc673c4f33836040518363ffffffff1660e01b81526004016109ce9291906111a5565b600060405180830381600087803b1580156109e857600080fd5b505af11580156109fc573d6000803e3d6000fd5b505050505050565b60058181548110610a3e577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000209060020201600001548060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b8152600401610aaa9190611161565b60206040518083038186803b158015610ac257600080fd5b505afa158015610ad6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610afa9190611093565b1015610b3b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b329061124a565b60405180910390fd5b600060058381548110610b77577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002090600202016040518060400160405290816000820154815260200160018201548152505090506001600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208481548110610c1f577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b906000526020600020016000828254610c389190611307565b925050819055508060200151600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610c929190611307565b925050819055505060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663fc673c4f33836040518363ffffffff1660e01b8152600401610cf59291906111a5565b600060405180830381600087803b158015610d0f57600080fd5b505af1158015610d23573d6000803e3d6000fd5b505050505050565b60058181548110610d3b57600080fd5b90600052602060002090600202016000915090508060000154908060010154905082565b6000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208281548110610dd8577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002090600202016040518060400160405290816000820154815260200160018201548152505090508060000151431015610e4e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e459061122a565b60405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166340c10f19336006846020015181548110610ec9577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000209060030201600101546040518363ffffffff1660e01b8152600401610ef892919061117c565b600060405180830381600087803b158015610f1257600080fd5b505af1158015610f26573d6000803e3d6000fd5b50505050600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208281548110610fa1577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000209060020201600080820160009055600182016000905550505050565b600081359050610fd58161144d565b92915050565b600081359050610fea81611464565b92915050565b600081519050610fff81611464565b92915050565b60006020828403121561101757600080fd5b600061102584828501610fc6565b91505092915050565b6000806040838503121561104157600080fd5b600061104f85828601610fc6565b925050602061106085828601610fdb565b9150509250929050565b60006020828403121561107c57600080fd5b600061108a84828501610fdb565b91505092915050565b6000602082840312156110a557600080fd5b60006110b384828501610ff0565b91505092915050565b6110c58161135d565b82525050565b6110d48161136f565b82525050565b6110e3816113a5565b82525050565b60006110f66016836112f6565b9150611101826113f8565b602082019050919050565b60006111196000836112e5565b915061112482611421565b600082019050919050565b600061113c6013836112f6565b915061114782611424565b602082019050919050565b61115b8161139b565b82525050565b600060208201905061117660008301846110bc565b92915050565b600060408201905061119160008301856110bc565b61119e6020830184611152565b9392505050565b60006080820190506111ba60008301856110bc565b6111c76020830184611152565b81810360408301526111d88161110c565b905081810360608301526111eb8161110c565b90509392505050565b600060208201905061120960008301846110cb565b92915050565b600060208201905061122460008301846110da565b92915050565b60006020820190508181036000830152611243816110e9565b9050919050565b600060208201905081810360008301526112638161112f565b9050919050565b600060208201905061127f6000830184611152565b92915050565b600060408201905061129a6000830185611152565b6112a76020830184611152565b9392505050565b60006060820190506112c36000830186611152565b6112d06020830185611152565b6112dd6040830184611152565b949350505050565b600082825260208201905092915050565b600082825260208201905092915050565b60006113128261139b565b915061131d8361139b565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611352576113516113c9565b5b828201905092915050565b60006113688261137b565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006113b0826113b7565b9050919050565b60006113c28261137b565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f496e766573746d656e74206e6f74206d61747572656400000000000000000000600082015250565b50565b7f4e6f7420656e6f75676820616d61636f696e7300000000000000000000000000600082015250565b6114568161135d565b811461146157600080fd5b50565b61146d8161139b565b811461147857600080fd5b5056fea2646970667358221220ed2eaa56f5116b625e624b8e60c46f5903f8ed2d70c4a4e08219217dd66ca34164736f6c634300080300336080604052670de0b6b3a7640000600c553480156200001d57600080fd5b50604051620043573803806200435783398181016040528101906200004391906200069d565b6040518060400160405280600c81526020017f4265746120416d61636f696e00000000000000000000000000000000000000008152506040518060400160405280600581526020017f62414d4143000000000000000000000000000000000000000000000000000000815250838260029080519060200190620000c89291906200048e565b508160039080519060200190620000e19291906200048e565b508060049080519060200190620000fa9291906200051f565b5060005b8151811015620001b75760016005600084848151811062000148577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508080620001ae9062000876565b915050620000fe565b50731820a4b7618bde71dce8cdc73aab6c95905fad2473ffffffffffffffffffffffffffffffffffffffff166329965a1d307fac7fbab5f54a3ca8194167523c6753bfeb96a445279294b6125b68cce2177054306040518463ffffffff1660e01b81526004016200022b9392919062000719565b600060405180830381600087803b1580156200024657600080fd5b505af11580156200025b573d6000803e3d6000fd5b50505050731820a4b7618bde71dce8cdc73aab6c95905fad2473ffffffffffffffffffffffffffffffffffffffff166329965a1d307faea199e31a596269b42cdafd93407f14436db6e4cad65417994c2eb37381e05a306040518463ffffffff1660e01b8152600401620002d29392919062000719565b600060405180830381600087803b158015620002ed57600080fd5b505af115801562000302573d6000803e3d6000fd5b5050505050505060006200031b6200048660201b60201c565b905080600960006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35081600081518110620003f5577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020026020010151600a60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600b60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505062000996565b600033905090565b8280546200049c906200080a565b90600052602060002090601f016020900481019282620004c057600085556200050c565b82601f10620004db57805160ff19168380011785556200050c565b828001600101855582156200050c579182015b828111156200050b578251825591602001919060010190620004ee565b5b5090506200051b9190620005ae565b5090565b8280548282559060005260206000209081019282156200059b579160200282015b828111156200059a5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509160200191906001019062000540565b5b509050620005aa9190620005ae565b5090565b5b80821115620005c9576000816000905550600101620005af565b5090565b6000620005e4620005de846200077f565b62000756565b905080838252602082019050828560208602820111156200060457600080fd5b60005b858110156200063857816200061d888262000642565b84526020840193506020830192505060018101905062000607565b5050509392505050565b600081519050620006538162000962565b92915050565b600082601f8301126200066b57600080fd5b81516200067d848260208601620005cd565b91505092915050565b60008151905062000697816200097c565b92915050565b60008060408385031215620006b157600080fd5b600083015167ffffffffffffffff811115620006cc57600080fd5b620006da8582860162000659565b9250506020620006ed8582860162000686565b9150509250929050565b6200070281620007ae565b82525050565b6200071381620007c2565b82525050565b6000606082019050620007306000830186620006f7565b6200073f602083018562000708565b6200074e6040830184620006f7565b949350505050565b60006200076262000775565b905062000770828262000840565b919050565b6000604051905090565b600067ffffffffffffffff8211156200079d576200079c62000922565b5b602082029050602081019050919050565b6000620007bb82620007e0565b9050919050565b6000819050919050565b6000620007d982620007ae565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060028204905060018216806200082357607f821691505b602082108114156200083a5762000839620008f3565b5b50919050565b6200084b8262000951565b810181811067ffffffffffffffff821117156200086d576200086c62000922565b5b80604052505050565b6000620008838262000800565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415620008b957620008b8620008c4565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b6200096d81620007ae565b81146200097957600080fd5b50565b6200098781620007cc565b81146200099357600080fd5b50565b6139b180620009a66000396000f3fe608060405234801561001057600080fd5b506004361061018e5760003560e01c80638da5cb5b116100de578063d95b637111610097578063f2fde38b11610071578063f2fde38b14610473578063fad8b32a1461048f578063fc673c4f146104ab578063fe9d9303146104c75761018e565b8063d95b6371146103f7578063dd62ed3e14610427578063e11279d5146104575761018e565b80638da5cb5b1461033557806390bc225014610353578063959b8c3f1461037157806395d89b411461038d5780639bd9bbc6146103ab578063a9059cbb146103c75761018e565b806340c10f191161014b57806362ad1b831161012557806362ad1b83146102c357806368e65d09146102df57806370a08231146102fb578063715018a61461032b5761018e565b806340c10f191461026b578063556f0dc7146102875780635c97fd3b146102a55761018e565b806306e485381461019357806306fdde03146101b1578063095ea7b3146101cf57806318160ddd146101ff57806323b872dd1461021d578063313ce5671461024d575b600080fd5b61019b6104e3565b6040516101a89190612db5565b60405180910390f35b6101b9610571565b6040516101c69190612df2565b60405180910390f35b6101e960048036038101906101e4919061274b565b610603565b6040516101f69190612dd7565b60405180910390f35b610207610626565b6040516102149190613074565b60405180910390f35b61023760048036038101906102329190612655565b610630565b6040516102449190612dd7565b60405180910390f35b61025561088a565b60405161026291906130d4565b60405180910390f35b6102856004803603810190610280919061274b565b610893565b005b61028f610a3f565b60405161029c9190613074565b60405180910390f35b6102ad610a48565b6040516102ba9190612d02565b60405180910390f35b6102dd60048036038101906102d891906126a4565b610a6e565b005b6102f960048036038101906102f491906125c7565b610ad4565b005b610315600480360381019061031091906125c7565b610b94565b6040516103229190613074565b60405180910390f35b610333610bdc565b005b61033d610d19565b60405161034a9190612d02565b60405180910390f35b61035b610d43565b6040516103689190613074565b60405180910390f35b61038b600480360381019061038691906125c7565b610d49565b005b610395610faa565b6040516103a29190612df2565b60405180910390f35b6103c560048036038101906103c09190612787565b61103c565b005b6103e160048036038101906103dc919061274b565b611066565b6040516103ee9190612dd7565b60405180910390f35b610411600480360381019061040c9190612619565b611174565b60405161041e9190612dd7565b60405180910390f35b610441600480360381019061043c9190612619565b611325565b60405161044e9190613074565b60405180910390f35b610471600480360381019061046c9190612881565b6113ac565b005b61048d600480360381019061048891906125c7565b6113b6565b005b6104a960048036038101906104a491906125c7565b611562565b005b6104c560048036038101906104c091906127ee565b6117c3565b005b6104e160048036038101906104dc91906128d3565b611825565b005b6060600480548060200260200160405190810160405280929190818152602001828054801561056757602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831161051d575b5050505050905090565b606060028054610580906132e1565b80601f01602080910402602001604051908101604052809291908181526020018280546105ac906132e1565b80156105f95780601f106105ce576101008083540402835291602001916105f9565b820191906000526020600020905b8154815290600101906020018083116105dc57829003601f168201915b5050505050905090565b60008061060e61184b565b905061061b818585611853565b600191505092915050565b6000600154905090565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156106a1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161069890612f94565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161415610711576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161070890612ff4565b60405180910390fd5b600061071b61184b565b9050610749818686866040518060200160405280600081525060405180602001604052806000815250611a1e565b610775818686866040518060200160405280600081525060405180602001604052806000815250611b94565b6000600860008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905083811015610839576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161083090612fd4565b60405180910390fd5b61084f8683868461084a919061320c565b611853565b61087d8287878760405180602001604052806000815250604051806020016040528060008152506000611db7565b6001925050509392505050565b60006012905090565b600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610923576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161091a90612f34565b60405180910390fd5b600c54600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231846040518263ffffffff1660e01b81526004016109819190612d02565b60206040518083038186803b15801561099957600080fd5b505afa1580156109ad573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109d191906128aa565b11610a11576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a0890612e14565b60405180910390fd5b610a3b82826040518060200160405280600081525060405180602001604052806000815250611f98565b5050565b60006001905090565b600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610a7f610a7961184b565b86611174565b610abe576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ab590612fb4565b60405180910390fd5b610acd85858585856001612176565b5050505050565b610adc61184b565b73ffffffffffffffffffffffffffffffffffffffff16610afa610d19565b73ffffffffffffffffffffffffffffffffffffffff1614610b50576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b4790612f54565b60405180910390fd5b80600a60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b610be461184b565b73ffffffffffffffffffffffffffffffffffffffff16610c02610d19565b73ffffffffffffffffffffffffffffffffffffffff1614610c58576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c4f90612f54565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a36000600960006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600c5481565b8073ffffffffffffffffffffffffffffffffffffffff16610d6861184b565b73ffffffffffffffffffffffffffffffffffffffff161415610dbf576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610db690612ed4565b60405180910390fd5b600560008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615610ea95760076000610e1d61184b565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81549060ff0219169055610f46565b600160066000610eb761184b565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505b610f4e61184b565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167ff4caeb2d6ca8932a215a353d0703c326ec2d81fc68170f320eb2ab49e9df61f960405160405180910390a350565b606060038054610fb9906132e1565b80601f0160208091040260200160405190810160405280929190818152602001828054610fe5906132e1565b80156110325780601f1061100757610100808354040283529160200191611032565b820191906000526020600020905b81548152906001019060200180831161101557829003601f168201915b5050505050905090565b61106161104761184b565b848484604051806020016040528060008152506001612176565b505050565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156110d7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110ce90612f94565b60405180910390fd5b60006110e161184b565b905061110f818286866040518060200160405280600081525060405180602001604052806000815250611a1e565b61113b818286866040518060200160405280600081525060405180602001604052806000815250611b94565b6111698182868660405180602001604052806000815250604051806020016040528060008152506000611db7565b600191505092915050565b60008173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16148061128c5750600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16801561128b5750600760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16155b5b8061131d5750600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff165b905092915050565b6000600860008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b80600c8190555050565b6113be61184b565b73ffffffffffffffffffffffffffffffffffffffff166113dc610d19565b73ffffffffffffffffffffffffffffffffffffffff1614611432576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161142990612f54565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156114a2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161149990612e94565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380600960006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b61156a61184b565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156115d8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115cf90612ef4565b60405180910390fd5b600560008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16156116cb5760016007600061163861184b565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555061175f565b600660006116d761184b565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81549060ff02191690555b61176761184b565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f50546e66e5f44d728365dc3908c63bc5cfeeab470722c1677e3073a6ac294aa160405160405180910390a350565b6117d46117ce61184b565b85611174565b611813576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161180a90612fb4565b60405180910390fd5b61181f84848484612296565b50505050565b61184761183061184b565b838360405180602001604052806000815250612296565b5050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156118c3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016118ba90612e34565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611933576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161192a90613054565b60405180910390fd5b80600860008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92583604051611a119190613074565b60405180910390a3505050565b6000731820a4b7618bde71dce8cdc73aab6c95905fad2473ffffffffffffffffffffffffffffffffffffffff1663aabbb8ca877f29ddb589b1fb5fc7cf394961c1adf5f8c6454761adf795e67fe149f658abe8956040518363ffffffff1660e01b8152600401611a8f929190612d8c565b60206040518083038186803b158015611aa757600080fd5b505afa158015611abb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611adf91906125f0565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614611b8b578073ffffffffffffffffffffffffffffffffffffffff166375ab97828888888888886040518763ffffffff1660e01b8152600401611b5896959493929190612d1d565b600060405180830381600087803b158015611b7257600080fd5b505af1158015611b86573d6000803e3d6000fd5b505050505b50505050505050565b611ba0868686866124f2565b60008060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905083811015611c26576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611c1d90612e74565b60405180910390fd5b8381611c32919061320c565b6000808873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550836000808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254611cc291906131b6565b925050819055508473ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff167f06b541ddaa720db2b10a4d0cdac39b8d360425fc073085fac19bc82614677987878787604051611d419392919061308f565b60405180910390a48473ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef86604051611da69190613074565b60405180910390a350505050505050565b6000731820a4b7618bde71dce8cdc73aab6c95905fad2473ffffffffffffffffffffffffffffffffffffffff1663aabbb8ca877fb281fc8c12954d22544db45de3159a39272895b169a852b314f9cc762e44c53b6040518363ffffffff1660e01b8152600401611e28929190612d8c565b60206040518083038186803b158015611e4057600080fd5b505afa158015611e54573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e7891906125f0565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614611f27578073ffffffffffffffffffffffffffffffffffffffff166223de298989898989896040518763ffffffff1660e01b8152600401611ef096959493929190612d1d565b600060405180830381600087803b158015611f0a57600080fd5b505af1158015611f1e573d6000803e3d6000fd5b50505050611f8e565b8115611f8d57611f4c8673ffffffffffffffffffffffffffffffffffffffff166124f8565b15611f8c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611f8390612f74565b60405180910390fd5b5b5b5050505050505050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161415612008576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611fff90612f14565b60405180910390fd5b600061201261184b565b905061202181600087876124f2565b836001600082825461203391906131b6565b92505081905550836000808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461208891906131b6565b925050819055506120a0816000878787876001611db7565b8473ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f2fe5be0146f74c5bce36c0b80911af6c7d86ff27e89d5cfa61fc681327954e5d8686866040516121019392919061308f565b60405180910390a38473ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef866040516121679190613074565b60405180910390a35050505050565b600073ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff1614156121e6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016121dd90612e54565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff161415612256576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161224d90613034565b60405180910390fd5b600061226061184b565b9050612270818888888888611a1e565b61227e818888888888611b94565b61228d81888888888888611db7565b50505050505050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161415612306576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016122fd90612eb4565b60405180910390fd5b600061231061184b565b905061232181866000878787611a1e565b61232e81866000876124f2565b60008060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050848110156123b4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016123ab90613014565b60405180910390fd5b84816123c0919061320c565b6000808873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508460016000828254612414919061320c565b925050819055508573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fa78a9be3a7b862d26933ad85fb11d80ef66b8f972d7cbba06621d583943a409887878760405161247c9392919061308f565b60405180910390a3600073ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef876040516124e29190613074565b60405180910390a3505050505050565b50505050565b600080823b905060008111915050919050565b600061251e61251984613114565b6130ef565b90508281526020810184848401111561253657600080fd5b61254184828561329f565b509392505050565b6000813590506125588161394d565b92915050565b60008151905061256d8161394d565b92915050565b600082601f83011261258457600080fd5b813561259484826020860161250b565b91505092915050565b6000813590506125ac81613964565b92915050565b6000815190506125c181613964565b92915050565b6000602082840312156125d957600080fd5b60006125e784828501612549565b91505092915050565b60006020828403121561260257600080fd5b60006126108482850161255e565b91505092915050565b6000806040838503121561262c57600080fd5b600061263a85828601612549565b925050602061264b85828601612549565b9150509250929050565b60008060006060848603121561266a57600080fd5b600061267886828701612549565b935050602061268986828701612549565b925050604061269a8682870161259d565b9150509250925092565b600080600080600060a086880312156126bc57600080fd5b60006126ca88828901612549565b95505060206126db88828901612549565b94505060406126ec8882890161259d565b935050606086013567ffffffffffffffff81111561270957600080fd5b61271588828901612573565b925050608086013567ffffffffffffffff81111561273257600080fd5b61273e88828901612573565b9150509295509295909350565b6000806040838503121561275e57600080fd5b600061276c85828601612549565b925050602061277d8582860161259d565b9150509250929050565b60008060006060848603121561279c57600080fd5b60006127aa86828701612549565b93505060206127bb8682870161259d565b925050604084013567ffffffffffffffff8111156127d857600080fd5b6127e486828701612573565b9150509250925092565b6000806000806080858703121561280457600080fd5b600061281287828801612549565b94505060206128238782880161259d565b935050604085013567ffffffffffffffff81111561284057600080fd5b61284c87828801612573565b925050606085013567ffffffffffffffff81111561286957600080fd5b61287587828801612573565b91505092959194509250565b60006020828403121561289357600080fd5b60006128a18482850161259d565b91505092915050565b6000602082840312156128bc57600080fd5b60006128ca848285016125b2565b91505092915050565b600080604083850312156128e657600080fd5b60006128f48582860161259d565b925050602083013567ffffffffffffffff81111561291157600080fd5b61291d85828601612573565b9150509250929050565b6000612933838361293f565b60208301905092915050565b61294881613240565b82525050565b61295781613240565b82525050565b600061296882613155565b6129728185613183565b935061297d83613145565b8060005b838110156129ae5781516129958882612927565b97506129a083613176565b925050600181019050612981565b5085935050505092915050565b6129c481613252565b82525050565b6129d38161325e565b82525050565b60006129e482613160565b6129ee8185613194565b93506129fe8185602086016132ae565b612a07816133d1565b840191505092915050565b6000612a1d8261316b565b612a2781856131a5565b9350612a378185602086016132ae565b612a40816133d1565b840191505092915050565b6000612a586014836131a5565b9150612a63826133e2565b602082019050919050565b6000612a7b6025836131a5565b9150612a868261340b565b604082019050919050565b6000612a9e6022836131a5565b9150612aa98261345a565b604082019050919050565b6000612ac16027836131a5565b9150612acc826134a9565b604082019050919050565b6000612ae46026836131a5565b9150612aef826134f8565b604082019050919050565b6000612b076022836131a5565b9150612b1282613547565b604082019050919050565b6000612b2a6024836131a5565b9150612b3582613596565b604082019050919050565b6000612b4d6021836131a5565b9150612b58826135e5565b604082019050919050565b6000612b706020836131a5565b9150612b7b82613634565b602082019050919050565b6000612b936021836131a5565b9150612b9e8261365d565b604082019050919050565b6000612bb66020836131a5565b9150612bc1826136ac565b602082019050919050565b6000612bd9604d836131a5565b9150612be4826136d5565b606082019050919050565b6000612bfc6024836131a5565b9150612c078261374a565b604082019050919050565b6000612c1f602c836131a5565b9150612c2a82613799565b604082019050919050565b6000612c426029836131a5565b9150612c4d826137e8565b604082019050919050565b6000612c656026836131a5565b9150612c7082613837565b604082019050919050565b6000612c886023836131a5565b9150612c9382613886565b604082019050919050565b6000612cab6020836131a5565b9150612cb6826138d5565b602082019050919050565b6000612cce6023836131a5565b9150612cd9826138fe565b604082019050919050565b612ced81613288565b82525050565b612cfc81613292565b82525050565b6000602082019050612d17600083018461294e565b92915050565b600060c082019050612d32600083018961294e565b612d3f602083018861294e565b612d4c604083018761294e565b612d596060830186612ce4565b8181036080830152612d6b81856129d9565b905081810360a0830152612d7f81846129d9565b9050979650505050505050565b6000604082019050612da1600083018561294e565b612dae60208301846129ca565b9392505050565b60006020820190508181036000830152612dcf818461295d565b905092915050565b6000602082019050612dec60008301846129bb565b92915050565b60006020820190508181036000830152612e0c8184612a12565b905092915050565b60006020820190508181036000830152612e2d81612a4b565b9050919050565b60006020820190508181036000830152612e4d81612a6e565b9050919050565b60006020820190508181036000830152612e6d81612a91565b9050919050565b60006020820190508181036000830152612e8d81612ab4565b9050919050565b60006020820190508181036000830152612ead81612ad7565b9050919050565b60006020820190508181036000830152612ecd81612afa565b9050919050565b60006020820190508181036000830152612eed81612b1d565b9050919050565b60006020820190508181036000830152612f0d81612b40565b9050919050565b60006020820190508181036000830152612f2d81612b63565b9050919050565b60006020820190508181036000830152612f4d81612b86565b9050919050565b60006020820190508181036000830152612f6d81612ba9565b9050919050565b60006020820190508181036000830152612f8d81612bcc565b9050919050565b60006020820190508181036000830152612fad81612bef565b9050919050565b60006020820190508181036000830152612fcd81612c12565b9050919050565b60006020820190508181036000830152612fed81612c35565b9050919050565b6000602082019050818103600083015261300d81612c58565b9050919050565b6000602082019050818103600083015261302d81612c7b565b9050919050565b6000602082019050818103600083015261304d81612c9e565b9050919050565b6000602082019050818103600083015261306d81612cc1565b9050919050565b60006020820190506130896000830184612ce4565b92915050565b60006060820190506130a46000830186612ce4565b81810360208301526130b681856129d9565b905081810360408301526130ca81846129d9565b9050949350505050565b60006020820190506130e96000830184612cf3565b92915050565b60006130f961310a565b90506131058282613313565b919050565b6000604051905090565b600067ffffffffffffffff82111561312f5761312e6133a2565b5b613138826133d1565b9050602081019050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b60006131c182613288565b91506131cc83613288565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561320157613200613344565b5b828201905092915050565b600061321782613288565b915061322283613288565b92508282101561323557613234613344565b5b828203905092915050565b600061324b82613268565b9050919050565b60008115159050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b82818337600083830152505050565b60005b838110156132cc5780820151818401526020810190506132b1565b838111156132db576000848401525b50505050565b600060028204905060018216806132f957607f821691505b6020821081141561330d5761330c613373565b5b50919050565b61331c826133d1565b810181811067ffffffffffffffff8211171561333b5761333a6133a2565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b7f4d757374206861766520436865656d73636f696e000000000000000000000000600082015250565b7f4552433737373a20617070726f76652066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b7f4552433737373a2073656e642066726f6d20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b7f4552433737373a207472616e7366657220616d6f756e7420657863656564732060008201527f62616c616e636500000000000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f4552433737373a206275726e2066726f6d20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b7f4552433737373a20617574686f72697a696e672073656c66206173206f70657260008201527f61746f7200000000000000000000000000000000000000000000000000000000602082015250565b7f4552433737373a207265766f6b696e672073656c66206173206f70657261746f60008201527f7200000000000000000000000000000000000000000000000000000000000000602082015250565b7f4552433737373a206d696e7420746f20746865207a65726f2061646472657373600082015250565b7f4f6e6c7920416d61636c69636b657220636f6e74726163742063616e206d696e60008201527f7400000000000000000000000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f4552433737373a20746f6b656e20726563697069656e7420636f6e747261637460008201527f20686173206e6f20696d706c656d656e74657220666f7220455243373737546f60208201527f6b656e73526563697069656e7400000000000000000000000000000000000000604082015250565b7f4552433737373a207472616e7366657220746f20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b7f4552433737373a2063616c6c6572206973206e6f7420616e206f70657261746f60008201527f7220666f7220686f6c6465720000000000000000000000000000000000000000602082015250565b7f4552433737373a207472616e7366657220616d6f756e7420657863656564732060008201527f616c6c6f77616e63650000000000000000000000000000000000000000000000602082015250565b7f4552433737373a207472616e736665722066726f6d20746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f4552433737373a206275726e20616d6f756e7420657863656564732062616c6160008201527f6e63650000000000000000000000000000000000000000000000000000000000602082015250565b7f4552433737373a2073656e6420746f20746865207a65726f2061646472657373600082015250565b7f4552433737373a20617070726f766520746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b61395681613240565b811461396157600080fd5b50565b61396d81613288565b811461397857600080fd5b5056fea2646970667358221220f69e5670607e57225970e8646e86b34b18a2b1613993ee34e04a332c04bd73e664736f6c63430008030033",
  "deployedBytecode": "",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:3966:13",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "84:94:13",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "94:22:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "109:6:13"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "103:5:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "103:13:13"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "94:5:13"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "166:5:13"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_contract$_IERC20_$660",
                      "nodeType": "YulIdentifier",
                      "src": "125:40:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "125:47:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "125:47:13"
                }
              ]
            },
            "name": "abi_decode_t_contract$_IERC20_$660_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "62:6:13",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "70:3:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "78:5:13",
                "type": ""
              }
            ],
            "src": "7:171:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "275:221:13",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "321:16:13",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "330:1:13",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "333:1:13",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "323:6:13"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "323:12:13"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "323:12:13"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "296:7:13"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "305:9:13"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "292:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "292:23:13"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "317:2:13",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "288:3:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "288:32:13"
                  },
                  "nodeType": "YulIf",
                  "src": "285:2:13"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "347:142:13",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "362:15:13",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "376:1:13",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "366:6:13",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "391:88:13",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "451:9:13"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "462:6:13"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "447:3:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "447:22:13"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "471:7:13"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_contract$_IERC20_$660_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "401:45:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "401:78:13"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "391:6:13"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_contract$_IERC20_$660_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "245:9:13",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "256:7:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "268:6:13",
                "type": ""
              }
            ],
            "src": "184:312:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "582:99:13",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "626:6:13"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "634:3:13"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "592:33:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "592:46:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "592:46:13"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "647:28:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "665:3:13"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "670:4:13",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "661:3:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "661:14:13"
                  },
                  "variableNames": [
                    {
                      "name": "updatedPos",
                      "nodeType": "YulIdentifier",
                      "src": "647:10:13"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encodeUpdatedPos_t_address_to_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "555:6:13",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "563:3:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updatedPos",
                "nodeType": "YulTypedName",
                "src": "571:10:13",
                "type": ""
              }
            ],
            "src": "502:179:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "742:53:13",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "759:3:13"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "782:5:13"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "764:17:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "764:24:13"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "752:6:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "752:37:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "752:37:13"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "730:5:13",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "737:3:13",
                "type": ""
              }
            ],
            "src": "687:108:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "866:53:13",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "883:3:13"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "906:5:13"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "888:17:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "888:24:13"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "876:6:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "876:37:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "876:37:13"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "854:5:13",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "861:3:13",
                "type": ""
              }
            ],
            "src": "801:118:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1079:608:13",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1089:68:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1151:5:13"
                      }
                    ],
                    "functionName": {
                      "name": "array_length_t_array$_t_address_$dyn_memory_ptr",
                      "nodeType": "YulIdentifier",
                      "src": "1103:47:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1103:54:13"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "1093:6:13",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1166:93:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1247:3:13"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "1252:6:13"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1173:73:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1173:86:13"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "1166:3:13"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1268:71:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1333:5:13"
                      }
                    ],
                    "functionName": {
                      "name": "array_dataslot_t_array$_t_address_$dyn_memory_ptr",
                      "nodeType": "YulIdentifier",
                      "src": "1283:49:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1283:56:13"
                  },
                  "variables": [
                    {
                      "name": "baseRef",
                      "nodeType": "YulTypedName",
                      "src": "1272:7:13",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1348:21:13",
                  "value": {
                    "name": "baseRef",
                    "nodeType": "YulIdentifier",
                    "src": "1362:7:13"
                  },
                  "variables": [
                    {
                      "name": "srcPtr",
                      "nodeType": "YulTypedName",
                      "src": "1352:6:13",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1438:224:13",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "1452:34:13",
                        "value": {
                          "arguments": [
                            {
                              "name": "srcPtr",
                              "nodeType": "YulIdentifier",
                              "src": "1479:6:13"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "1473:5:13"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1473:13:13"
                        },
                        "variables": [
                          {
                            "name": "elementValue0",
                            "nodeType": "YulTypedName",
                            "src": "1456:13:13",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "1499:70:13",
                        "value": {
                          "arguments": [
                            {
                              "name": "elementValue0",
                              "nodeType": "YulIdentifier",
                              "src": "1550:13:13"
                            },
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "1565:3:13"
                            }
                          ],
                          "functionName": {
                            "name": "abi_encodeUpdatedPos_t_address_to_t_address",
                            "nodeType": "YulIdentifier",
                            "src": "1506:43:13"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1506:63:13"
                        },
                        "variableNames": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "1499:3:13"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "1582:70:13",
                        "value": {
                          "arguments": [
                            {
                              "name": "srcPtr",
                              "nodeType": "YulIdentifier",
                              "src": "1645:6:13"
                            }
                          ],
                          "functionName": {
                            "name": "array_nextElement_t_array$_t_address_$dyn_memory_ptr",
                            "nodeType": "YulIdentifier",
                            "src": "1592:52:13"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1592:60:13"
                        },
                        "variableNames": [
                          {
                            "name": "srcPtr",
                            "nodeType": "YulIdentifier",
                            "src": "1582:6:13"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "1400:1:13"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "1403:6:13"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "1397:2:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1397:13:13"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "1411:18:13",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "1413:14:13",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "1422:1:13"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1425:1:13",
                              "type": "",
                              "value": "1"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "1418:3:13"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1418:9:13"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "1413:1:13"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "1382:14:13",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "1384:10:13",
                        "value": {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "1393:1:13",
                          "type": "",
                          "value": "0"
                        },
                        "variables": [
                          {
                            "name": "i",
                            "nodeType": "YulTypedName",
                            "src": "1388:1:13",
                            "type": ""
                          }
                        ]
                      }
                    ]
                  },
                  "src": "1378:284:13"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1671:10:13",
                  "value": {
                    "name": "pos",
                    "nodeType": "YulIdentifier",
                    "src": "1678:3:13"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "1671:3:13"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1058:5:13",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1065:3:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "1074:3:13",
                "type": ""
              }
            ],
            "src": "955:732:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1772:80:13",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1789:3:13"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1839:5:13"
                          }
                        ],
                        "functionName": {
                          "name": "convert_t_contract$_IERC20_$660_to_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "1794:44:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1794:51:13"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1782:6:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1782:64:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1782:64:13"
                }
              ]
            },
            "name": "abi_encode_t_contract$_IERC20_$660_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1760:5:13",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1767:3:13",
                "type": ""
              }
            ],
            "src": "1693:159:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1956:124:13",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1966:26:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1978:9:13"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1989:2:13",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1974:3:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1974:18:13"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1966:4:13"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "2046:6:13"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2059:9:13"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2070:1:13",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2055:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2055:17:13"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2002:43:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2002:71:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2002:71:13"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1928:9:13",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1940:6:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1951:4:13",
                "type": ""
              }
            ],
            "src": "1858:222:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2276:321:13",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2286:26:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2298:9:13"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2309:2:13",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2294:3:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2294:18:13"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2286:4:13"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2333:9:13"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2344:1:13",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2329:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2329:17:13"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "2352:4:13"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2358:9:13"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2348:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2348:20:13"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2322:6:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2322:47:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2322:47:13"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2378:116:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "2480:6:13"
                      },
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "2489:4:13"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2386:93:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2386:108:13"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2378:4:13"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "2562:6:13"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2575:9:13"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2586:2:13",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2571:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2571:18:13"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_contract$_IERC20_$660_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2504:57:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2504:86:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2504:86:13"
                }
              ]
            },
            "name": "abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr_t_contract$_IERC20_$660__to_t_array$_t_address_$dyn_memory_ptr_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2240:9:13",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2252:6:13",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2260:6:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2271:4:13",
                "type": ""
              }
            ],
            "src": "2086:511:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2675:60:13",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2685:11:13",
                  "value": {
                    "name": "ptr",
                    "nodeType": "YulIdentifier",
                    "src": "2693:3:13"
                  },
                  "variableNames": [
                    {
                      "name": "data",
                      "nodeType": "YulIdentifier",
                      "src": "2685:4:13"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2706:22:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "ptr",
                        "nodeType": "YulIdentifier",
                        "src": "2718:3:13"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2723:4:13",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2714:3:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2714:14:13"
                  },
                  "variableNames": [
                    {
                      "name": "data",
                      "nodeType": "YulIdentifier",
                      "src": "2706:4:13"
                    }
                  ]
                }
              ]
            },
            "name": "array_dataslot_t_array$_t_address_$dyn_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "ptr",
                "nodeType": "YulTypedName",
                "src": "2662:3:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "data",
                "nodeType": "YulTypedName",
                "src": "2670:4:13",
                "type": ""
              }
            ],
            "src": "2603:132:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2815:40:13",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2826:22:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2842:5:13"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "2836:5:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2836:12:13"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "2826:6:13"
                    }
                  ]
                }
              ]
            },
            "name": "array_length_t_array$_t_address_$dyn_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2798:5:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "2808:6:13",
                "type": ""
              }
            ],
            "src": "2741:114:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2936:38:13",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2946:22:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "ptr",
                        "nodeType": "YulIdentifier",
                        "src": "2958:3:13"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2963:4:13",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2954:3:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2954:14:13"
                  },
                  "variableNames": [
                    {
                      "name": "next",
                      "nodeType": "YulIdentifier",
                      "src": "2946:4:13"
                    }
                  ]
                }
              ]
            },
            "name": "array_nextElement_t_array$_t_address_$dyn_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "ptr",
                "nodeType": "YulTypedName",
                "src": "2923:3:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "next",
                "nodeType": "YulTypedName",
                "src": "2931:4:13",
                "type": ""
              }
            ],
            "src": "2861:113:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3091:73:13",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3108:3:13"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "3113:6:13"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3101:6:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3101:19:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3101:19:13"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3129:29:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3148:3:13"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3153:4:13",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3144:3:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3144:14:13"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "3129:11:13"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3063:3:13",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "3068:6:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "3079:11:13",
                "type": ""
              }
            ],
            "src": "2980:184:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3215:51:13",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3225:35:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "3254:5:13"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "3236:17:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3236:24:13"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "3225:7:13"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3197:5:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "3207:7:13",
                "type": ""
              }
            ],
            "src": "3170:96:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3331:51:13",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3341:35:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "3370:5:13"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "3352:17:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3352:24:13"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "3341:7:13"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_contract$_IERC20_$660",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3313:5:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "3323:7:13",
                "type": ""
              }
            ],
            "src": "3272:110:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3433:81:13",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3443:65:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "3458:5:13"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3465:42:13",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "3454:3:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3454:54:13"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "3443:7:13"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3415:5:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "3425:7:13",
                "type": ""
              }
            ],
            "src": "3388:126:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3594:80:13",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3604:64:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "3662:5:13"
                      }
                    ],
                    "functionName": {
                      "name": "convert_t_contract$_IERC20_$660_to_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "3617:44:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3617:51:13"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "3604:9:13"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_contract$_IERC20_$660_to_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3574:5:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "3584:9:13",
                "type": ""
              }
            ],
            "src": "3520:154:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3754:53:13",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3764:37:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "3795:5:13"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "3777:17:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3777:24:13"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "3764:9:13"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_contract$_IERC20_$660_to_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3734:5:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "3744:9:13",
                "type": ""
              }
            ],
            "src": "3680:127:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3870:93:13",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3941:16:13",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3950:1:13",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3953:1:13",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3943:6:13"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3943:12:13"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3943:12:13"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3893:5:13"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "3932:5:13"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_contract$_IERC20_$660",
                              "nodeType": "YulIdentifier",
                              "src": "3900:31:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3900:38:13"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "3890:2:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3890:49:13"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "3883:6:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3883:57:13"
                  },
                  "nodeType": "YulIf",
                  "src": "3880:2:13"
                }
              ]
            },
            "name": "validator_revert_t_contract$_IERC20_$660",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3863:5:13",
                "type": ""
              }
            ],
            "src": "3813:150:13"
          }
        ]
      },
      "contents": "{\n\n    function abi_decode_t_contract$_IERC20_$660_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_contract$_IERC20_$660(value)\n    }\n\n    function abi_decode_tuple_t_contract$_IERC20_$660_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_IERC20_$660_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encodeUpdatedPos_t_address_to_t_address(value0, pos) -> updatedPos {\n        abi_encode_t_address_to_t_address(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_address_to_t_address(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    // address[] -> address[]\n    function abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_address_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_address_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_address_to_t_address(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_address_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_t_contract$_IERC20_$660_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$660_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr_t_contract$_IERC20_$660__to_t_array$_t_address_$dyn_memory_ptr_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack(value0,  tail)\n\n        abi_encode_t_contract$_IERC20_$660_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function array_dataslot_t_array$_t_address_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function array_length_t_array$_t_address_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_nextElement_t_array$_t_address_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_contract$_IERC20_$660(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function convert_t_contract$_IERC20_$660_to_t_address(value) -> converted {\n        converted := convert_t_contract$_IERC20_$660_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IERC20_$660_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_contract$_IERC20_$660(value) {\n        if iszero(eq(value, cleanup_t_contract$_IERC20_$660(value))) { revert(0, 0) }\n    }\n\n}\n",
      "id": 13,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:9461:13",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "59:87:13",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "69:29:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "91:6:13"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "78:12:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "78:20:13"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "69:5:13"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "134:5:13"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "107:26:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "107:33:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "107:33:13"
                }
              ]
            },
            "name": "abi_decode_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "37:6:13",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "45:3:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "53:5:13",
                "type": ""
              }
            ],
            "src": "7:139:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "204:87:13",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "214:29:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "236:6:13"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "223:12:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "223:20:13"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "214:5:13"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "279:5:13"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "252:26:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "252:33:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "252:33:13"
                }
              ]
            },
            "name": "abi_decode_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "182:6:13",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "190:3:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "198:5:13",
                "type": ""
              }
            ],
            "src": "152:139:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "360:80:13",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "370:22:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "385:6:13"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "379:5:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "379:13:13"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "370:5:13"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "428:5:13"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "401:26:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "401:33:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "401:33:13"
                }
              ]
            },
            "name": "abi_decode_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "338:6:13",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "346:3:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "354:5:13",
                "type": ""
              }
            ],
            "src": "297:143:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "512:196:13",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "558:16:13",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "567:1:13",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "570:1:13",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "560:6:13"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "560:12:13"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "560:12:13"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "533:7:13"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "542:9:13"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "529:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "529:23:13"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "554:2:13",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "525:3:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "525:32:13"
                  },
                  "nodeType": "YulIf",
                  "src": "522:2:13"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "584:117:13",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "599:15:13",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "613:1:13",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "603:6:13",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "628:63:13",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "663:9:13"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "674:6:13"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "659:3:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "659:22:13"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "683:7:13"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "638:20:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "638:53:13"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "628:6:13"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "482:9:13",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "493:7:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "505:6:13",
                "type": ""
              }
            ],
            "src": "446:262:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "797:324:13",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "843:16:13",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "852:1:13",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "855:1:13",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "845:6:13"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "845:12:13"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "845:12:13"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "818:7:13"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "827:9:13"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "814:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "814:23:13"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "839:2:13",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "810:3:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "810:32:13"
                  },
                  "nodeType": "YulIf",
                  "src": "807:2:13"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "869:117:13",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "884:15:13",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "898:1:13",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "888:6:13",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "913:63:13",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "948:9:13"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "959:6:13"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "944:3:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "944:22:13"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "968:7:13"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "923:20:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "923:53:13"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "913:6:13"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "996:118:13",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1011:16:13",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1025:2:13",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1015:6:13",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1041:63:13",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1076:9:13"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1087:6:13"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1072:3:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1072:22:13"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1096:7:13"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "1051:20:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1051:53:13"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "1041:6:13"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "759:9:13",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "770:7:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "782:6:13",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "790:6:13",
                "type": ""
              }
            ],
            "src": "714:407:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1193:196:13",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1239:16:13",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1248:1:13",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1251:1:13",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1241:6:13"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1241:12:13"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1241:12:13"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1214:7:13"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1223:9:13"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1210:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1210:23:13"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1235:2:13",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1206:3:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1206:32:13"
                  },
                  "nodeType": "YulIf",
                  "src": "1203:2:13"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1265:117:13",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1280:15:13",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1294:1:13",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1284:6:13",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1309:63:13",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1344:9:13"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1355:6:13"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1340:3:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1340:22:13"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1364:7:13"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "1319:20:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1319:53:13"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1309:6:13"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1163:9:13",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1174:7:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1186:6:13",
                "type": ""
              }
            ],
            "src": "1127:262:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1472:207:13",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1518:16:13",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1527:1:13",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1530:1:13",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1520:6:13"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1520:12:13"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1520:12:13"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1493:7:13"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1502:9:13"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1489:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1489:23:13"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1514:2:13",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1485:3:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1485:32:13"
                  },
                  "nodeType": "YulIf",
                  "src": "1482:2:13"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1544:128:13",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1559:15:13",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1573:1:13",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1563:6:13",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1588:74:13",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1634:9:13"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1645:6:13"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1630:3:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1630:22:13"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1654:7:13"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "1598:31:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1598:64:13"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1588:6:13"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1442:9:13",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1453:7:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1465:6:13",
                "type": ""
              }
            ],
            "src": "1395:284:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1750:53:13",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1767:3:13"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1790:5:13"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "1772:17:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1772:24:13"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1760:6:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1760:37:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1760:37:13"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1738:5:13",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1745:3:13",
                "type": ""
              }
            ],
            "src": "1685:118:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1868:50:13",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1885:3:13"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1905:5:13"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_bool",
                          "nodeType": "YulIdentifier",
                          "src": "1890:14:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1890:21:13"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1878:6:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1878:34:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1878:34:13"
                }
              ]
            },
            "name": "abi_encode_t_bool_to_t_bool_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1856:5:13",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1863:3:13",
                "type": ""
              }
            ],
            "src": "1809:109:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2004:81:13",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2021:3:13"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2072:5:13"
                          }
                        ],
                        "functionName": {
                          "name": "convert_t_contract$_Amacoin_$420_to_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "2026:45:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2026:52:13"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2014:6:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2014:65:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2014:65:13"
                }
              ]
            },
            "name": "abi_encode_t_contract$_Amacoin_$420_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1992:5:13",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1999:3:13",
                "type": ""
              }
            ],
            "src": "1924:161:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2237:220:13",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2247:74:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2313:3:13"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2318:2:13",
                        "type": "",
                        "value": "22"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2254:58:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2254:67:13"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "2247:3:13"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2419:3:13"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_09cf4c7ecd8bf22d3034c0b6865c6c197e12741e4aa02e3bcf0a28539a3fe580",
                      "nodeType": "YulIdentifier",
                      "src": "2330:88:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2330:93:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2330:93:13"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2432:19:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2443:3:13"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2448:2:13",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2439:3:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2439:12:13"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "2432:3:13"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_09cf4c7ecd8bf22d3034c0b6865c6c197e12741e4aa02e3bcf0a28539a3fe580_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2225:3:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "2233:3:13",
                "type": ""
              }
            ],
            "src": "2091:366:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2608:217:13",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2618:72:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2683:3:13"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2688:1:13",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2625:57:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2625:65:13"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "2618:3:13"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2788:3:13"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                      "nodeType": "YulIdentifier",
                      "src": "2699:88:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2699:93:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2699:93:13"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2801:18:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2812:3:13"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2817:1:13",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2808:3:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2808:11:13"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "2801:3:13"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2596:3:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "2604:3:13",
                "type": ""
              }
            ],
            "src": "2463:362:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2977:220:13",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2987:74:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3053:3:13"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3058:2:13",
                        "type": "",
                        "value": "19"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2994:58:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2994:67:13"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "2987:3:13"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3159:3:13"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_e789fa5da66c520babfe6647147fb3f2218ada4a0bc389f7b31e5ca1f5cdb6d0",
                      "nodeType": "YulIdentifier",
                      "src": "3070:88:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3070:93:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3070:93:13"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3172:19:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3183:3:13"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3188:2:13",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3179:3:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3179:12:13"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "3172:3:13"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_e789fa5da66c520babfe6647147fb3f2218ada4a0bc389f7b31e5ca1f5cdb6d0_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2965:3:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "2973:3:13",
                "type": ""
              }
            ],
            "src": "2831:366:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3268:53:13",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3285:3:13"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3308:5:13"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "3290:17:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3290:24:13"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3278:6:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3278:37:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3278:37:13"
                }
              ]
            },
            "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3256:5:13",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3263:3:13",
                "type": ""
              }
            ],
            "src": "3203:118:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3425:124:13",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3435:26:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3447:9:13"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3458:2:13",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3443:3:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3443:18:13"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3435:4:13"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "3515:6:13"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3528:9:13"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3539:1:13",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3524:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3524:17:13"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3471:43:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3471:71:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3471:71:13"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3397:9:13",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3409:6:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3420:4:13",
                "type": ""
              }
            ],
            "src": "3327:222:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3681:206:13",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3691:26:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3703:9:13"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3714:2:13",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3699:3:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3699:18:13"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3691:4:13"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "3771:6:13"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3784:9:13"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3795:1:13",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3780:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3780:17:13"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3727:43:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3727:71:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3727:71:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "3852:6:13"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3865:9:13"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3876:2:13",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3861:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3861:18:13"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3808:43:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3808:72:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3808:72:13"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3645:9:13",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "3657:6:13",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3665:6:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3676:4:13",
                "type": ""
              }
            ],
            "src": "3555:332:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4219:617:13",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4229:27:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4241:9:13"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4252:3:13",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4237:3:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4237:19:13"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4229:4:13"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "4310:6:13"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4323:9:13"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4334:1:13",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4319:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4319:17:13"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4266:43:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4266:71:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4266:71:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "4391:6:13"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4404:9:13"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4415:2:13",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4400:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4400:18:13"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4347:43:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4347:72:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4347:72:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4440:9:13"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4451:2:13",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4436:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4436:18:13"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "4460:4:13"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4466:9:13"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4456:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4456:20:13"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4429:6:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4429:48:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4429:48:13"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4486:138:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "4619:4:13"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4494:123:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4494:130:13"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4486:4:13"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4645:9:13"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4656:2:13",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4641:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4641:18:13"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "4665:4:13"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4671:9:13"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4661:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4661:20:13"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4634:6:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4634:48:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4634:48:13"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4691:138:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "4824:4:13"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4699:123:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4699:130:13"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4691:4:13"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_address_t_uint256_t_bytes_memory_ptr_t_bytes_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4183:9:13",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "4195:6:13",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4203:6:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4214:4:13",
                "type": ""
              }
            ],
            "src": "3893:943:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4934:118:13",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4944:26:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4956:9:13"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4967:2:13",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4952:3:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4952:18:13"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4944:4:13"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "5018:6:13"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5031:9:13"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5042:1:13",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5027:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5027:17:13"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_bool_to_t_bool_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4980:37:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4980:65:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4980:65:13"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4906:9:13",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4918:6:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4929:4:13",
                "type": ""
              }
            ],
            "src": "4842:210:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5171:139:13",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5181:26:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5193:9:13"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5204:2:13",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5189:3:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5189:18:13"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5181:4:13"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "5276:6:13"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5289:9:13"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5300:1:13",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5285:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5285:17:13"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_contract$_Amacoin_$420_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5217:58:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5217:86:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5217:86:13"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_Amacoin_$420__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5143:9:13",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5155:6:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5166:4:13",
                "type": ""
              }
            ],
            "src": "5058:252:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5487:248:13",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5497:26:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5509:9:13"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5520:2:13",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5505:3:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5505:18:13"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5497:4:13"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5544:9:13"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5555:1:13",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5540:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5540:17:13"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "5563:4:13"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5569:9:13"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "5559:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5559:20:13"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5533:6:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5533:47:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5533:47:13"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5589:139:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "5723:4:13"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_09cf4c7ecd8bf22d3034c0b6865c6c197e12741e4aa02e3bcf0a28539a3fe580_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5597:124:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5597:131:13"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5589:4:13"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_09cf4c7ecd8bf22d3034c0b6865c6c197e12741e4aa02e3bcf0a28539a3fe580__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5467:9:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5482:4:13",
                "type": ""
              }
            ],
            "src": "5316:419:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5912:248:13",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5922:26:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5934:9:13"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5945:2:13",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5930:3:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5930:18:13"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5922:4:13"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5969:9:13"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5980:1:13",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5965:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5965:17:13"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "5988:4:13"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5994:9:13"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "5984:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5984:20:13"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5958:6:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5958:47:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5958:47:13"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6014:139:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "6148:4:13"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_e789fa5da66c520babfe6647147fb3f2218ada4a0bc389f7b31e5ca1f5cdb6d0_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6022:124:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6022:131:13"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6014:4:13"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_e789fa5da66c520babfe6647147fb3f2218ada4a0bc389f7b31e5ca1f5cdb6d0__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5892:9:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5907:4:13",
                "type": ""
              }
            ],
            "src": "5741:419:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6264:124:13",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6274:26:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6286:9:13"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6297:2:13",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6282:3:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6282:18:13"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6274:4:13"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "6354:6:13"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6367:9:13"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6378:1:13",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6363:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6363:17:13"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6310:43:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6310:71:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6310:71:13"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6236:9:13",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6248:6:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6259:4:13",
                "type": ""
              }
            ],
            "src": "6166:222:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6520:206:13",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6530:26:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6542:9:13"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6553:2:13",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6538:3:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6538:18:13"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6530:4:13"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "6610:6:13"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6623:9:13"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6634:1:13",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6619:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6619:17:13"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6566:43:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6566:71:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6566:71:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "6691:6:13"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6704:9:13"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6715:2:13",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6700:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6700:18:13"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6647:43:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6647:72:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6647:72:13"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6484:9:13",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "6496:6:13",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6504:6:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6515:4:13",
                "type": ""
              }
            ],
            "src": "6394:332:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6886:288:13",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6896:26:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6908:9:13"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6919:2:13",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6904:3:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6904:18:13"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6896:4:13"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "6976:6:13"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6989:9:13"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7000:1:13",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6985:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6985:17:13"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6932:43:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6932:71:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6932:71:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "7057:6:13"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7070:9:13"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7081:2:13",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7066:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7066:18:13"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7013:43:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7013:72:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7013:72:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "7139:6:13"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7152:9:13"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7163:2:13",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7148:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7148:18:13"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7095:43:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7095:72:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7095:72:13"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6842:9:13",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "6854:6:13",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "6862:6:13",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6870:6:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6881:4:13",
                "type": ""
              }
            ],
            "src": "6732:442:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7275:73:13",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "7292:3:13"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "7297:6:13"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7285:6:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7285:19:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7285:19:13"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7313:29:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "7332:3:13"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7337:4:13",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7328:3:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7328:14:13"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "7313:11:13"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "7247:3:13",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "7252:6:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "7263:11:13",
                "type": ""
              }
            ],
            "src": "7180:168:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7450:73:13",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "7467:3:13"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "7472:6:13"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7460:6:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7460:19:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7460:19:13"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7488:29:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "7507:3:13"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7512:4:13",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7503:3:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7503:14:13"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "7488:11:13"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "7422:3:13",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "7427:6:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "7438:11:13",
                "type": ""
              }
            ],
            "src": "7354:169:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7573:261:13",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7583:25:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "7606:1:13"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "7588:17:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7588:20:13"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "7583:1:13"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7617:25:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "7640:1:13"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "7622:17:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7622:20:13"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "7617:1:13"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7780:22:13",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "7782:16:13"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7782:18:13"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7782:18:13"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "7701:1:13"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7708:66:13",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                          },
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "7776:1:13"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "7704:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7704:74:13"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "7698:2:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7698:81:13"
                  },
                  "nodeType": "YulIf",
                  "src": "7695:2:13"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7812:16:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "7823:1:13"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "7826:1:13"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7819:3:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7819:9:13"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "7812:3:13"
                    }
                  ]
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "7560:1:13",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "7563:1:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "7569:3:13",
                "type": ""
              }
            ],
            "src": "7529:305:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7885:51:13",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7895:35:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "7924:5:13"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "7906:17:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7906:24:13"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "7895:7:13"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "7867:5:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "7877:7:13",
                "type": ""
              }
            ],
            "src": "7840:96:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7984:48:13",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7994:32:13",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "8019:5:13"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "8012:6:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8012:13:13"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "8005:6:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8005:21:13"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "7994:7:13"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "7966:5:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "7976:7:13",
                "type": ""
              }
            ],
            "src": "7942:90:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8083:81:13",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8093:65:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "8108:5:13"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8115:42:13",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "8104:3:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8104:54:13"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "8093:7:13"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "8065:5:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "8075:7:13",
                "type": ""
              }
            ],
            "src": "8038:126:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8215:32:13",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8225:16:13",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "8236:5:13"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "8225:7:13"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "8197:5:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "8207:7:13",
                "type": ""
              }
            ],
            "src": "8170:77:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8328:81:13",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8338:65:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "8397:5:13"
                      }
                    ],
                    "functionName": {
                      "name": "convert_t_contract$_Amacoin_$420_to_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "8351:45:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8351:52:13"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "8338:9:13"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_contract$_Amacoin_$420_to_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "8308:5:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "8318:9:13",
                "type": ""
              }
            ],
            "src": "8253:156:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8490:53:13",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8500:37:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "8531:5:13"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "8513:17:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8513:24:13"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "8500:9:13"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_contract$_Amacoin_$420_to_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "8470:5:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "8480:9:13",
                "type": ""
              }
            ],
            "src": "8415:128:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8577:152:13",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8594:1:13",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8597:77:13",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8587:6:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8587:88:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8587:88:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8691:1:13",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8694:4:13",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8684:6:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8684:15:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8684:15:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8715:1:13",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8718:4:13",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "8708:6:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8708:15:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8708:15:13"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "8549:180:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8841:66:13",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "8863:6:13"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8871:1:13",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8859:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8859:14:13"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8875:24:13",
                        "type": "",
                        "value": "Investment not matured"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8852:6:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8852:48:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8852:48:13"
                }
              ]
            },
            "name": "store_literal_in_memory_09cf4c7ecd8bf22d3034c0b6865c6c197e12741e4aa02e3bcf0a28539a3fe580",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "8833:6:13",
                "type": ""
              }
            ],
            "src": "8735:172:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9019:8:13",
              "statements": []
            },
            "name": "store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "9011:6:13",
                "type": ""
              }
            ],
            "src": "8913:114:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9139:63:13",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "9161:6:13"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9169:1:13",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9157:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9157:14:13"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9173:21:13",
                        "type": "",
                        "value": "Not enough amacoins"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9150:6:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9150:45:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9150:45:13"
                }
              ]
            },
            "name": "store_literal_in_memory_e789fa5da66c520babfe6647147fb3f2218ada4a0bc389f7b31e5ca1f5cdb6d0",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "9131:6:13",
                "type": ""
              }
            ],
            "src": "9033:169:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9251:79:13",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "9308:16:13",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9317:1:13",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9320:1:13",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "9310:6:13"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9310:12:13"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "9310:12:13"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "9274:5:13"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "9299:5:13"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "9281:17:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9281:24:13"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "9271:2:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9271:35:13"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "9264:6:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9264:43:13"
                  },
                  "nodeType": "YulIf",
                  "src": "9261:2:13"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "9244:5:13",
                "type": ""
              }
            ],
            "src": "9208:122:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9379:79:13",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "9436:16:13",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9445:1:13",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9448:1:13",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "9438:6:13"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9438:12:13"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "9438:12:13"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "9402:5:13"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "9427:5:13"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint256",
                              "nodeType": "YulIdentifier",
                              "src": "9409:17:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9409:24:13"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "9399:2:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9399:35:13"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "9392:6:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9392:43:13"
                  },
                  "nodeType": "YulIf",
                  "src": "9389:2:13"
                }
              ]
            },
            "name": "validator_revert_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "9372:5:13",
                "type": ""
              }
            ],
            "src": "9336:122:13"
          }
        ]
      },
      "contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_contract$_Amacoin_$420_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_Amacoin_$420_to_t_address(value))\n    }\n\n    function abi_encode_t_stringliteral_09cf4c7ecd8bf22d3034c0b6865c6c197e12741e4aa02e3bcf0a28539a3fe580_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_09cf4c7ecd8bf22d3034c0b6865c6c197e12741e4aa02e3bcf0a28539a3fe580(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, 0)\n        store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(pos)\n        end := add(pos, 0)\n    }\n\n    function abi_encode_t_stringliteral_e789fa5da66c520babfe6647147fb3f2218ada4a0bc389f7b31e5ca1f5cdb6d0_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 19)\n        store_literal_in_memory_e789fa5da66c520babfe6647147fb3f2218ada4a0bc389f7b31e5ca1f5cdb6d0(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_address_t_uint256_t_bytes_memory_ptr_t_bytes_memory_ptr__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_fromStack( tail)\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_contract$_Amacoin_$420__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_Amacoin_$420_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_09cf4c7ecd8bf22d3034c0b6865c6c197e12741e4aa02e3bcf0a28539a3fe580__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_09cf4c7ecd8bf22d3034c0b6865c6c197e12741e4aa02e3bcf0a28539a3fe580_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_e789fa5da66c520babfe6647147fb3f2218ada4a0bc389f7b31e5ca1f5cdb6d0__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e789fa5da66c520babfe6647147fb3f2218ada4a0bc389f7b31e5ca1f5cdb6d0_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function convert_t_contract$_Amacoin_$420_to_t_address(value) -> converted {\n        converted := convert_t_contract$_Amacoin_$420_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_Amacoin_$420_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(value)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function store_literal_in_memory_09cf4c7ecd8bf22d3034c0b6865c6c197e12741e4aa02e3bcf0a28539a3fe580(memPtr) {\n\n        mstore(add(memPtr, 0), \"Investment not matured\")\n\n    }\n\n    function store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(memPtr) {\n\n    }\n\n    function store_literal_in_memory_e789fa5da66c520babfe6647147fb3f2218ada4a0bc389f7b31e5ca1f5cdb6d0(memPtr) {\n\n        mstore(add(memPtr, 0), \"Not enough amacoins\")\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
      "id": 13,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "119:2120:0:-:0;;;502:63;;;;;;;;532:1;502:63;;;;;;535:13;502:63;;;;;;550:14;502:63;;;;;;;;;;;;;:::i;:::-;;570:455;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;607:33;657:1;643:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;607:52;;695:4;665:16;682:1;665:19;;;;;;;;;;;;;;;;;;;;;:35;;;;;;;;;;;728:16;746:10;716:41;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;706:7;;:51;;;;;;;;;;;;;;;;;;763:7;;;;;;;;;;:25;;;789:10;763:37;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;836:12;854:37;;;;;;;;862:14;854:37;;;;878:12;854:37;;;836:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;898:12;916:35;;;;;;;;924:13;916:35;;;;939:11;916:35;;;898:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;958:15;979:40;;;;;;;;990:11;979:40;;;;1003:11;979:40;;;;1016:2;979:40;;;958:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;570:455;;119:2120;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:171:13:-;;109:6;103:13;94:22;;125:47;166:5;125:47;:::i;:::-;84:94;;;;:::o;184:312::-;;317:2;305:9;296:7;292:23;288:32;285:2;;;333:1;330;323:12;285:2;376:1;401:78;471:7;462:6;451:9;447:22;401:78;:::i;:::-;391:88;;347:142;275:221;;;;:::o;502:179::-;;592:46;634:3;626:6;592:46;:::i;:::-;670:4;665:3;661:14;647:28;;582:99;;;;:::o;687:108::-;764:24;782:5;764:24;:::i;:::-;759:3;752:37;742:53;;:::o;801:118::-;888:24;906:5;888:24;:::i;:::-;883:3;876:37;866:53;;:::o;955:732::-;;1103:54;1151:5;1103:54;:::i;:::-;1173:86;1252:6;1247:3;1173:86;:::i;:::-;1166:93;;1283:56;1333:5;1283:56;:::i;:::-;1362:7;1393:1;1378:284;1403:6;1400:1;1397:13;1378:284;;;1479:6;1473:13;1506:63;1565:3;1550:13;1506:63;:::i;:::-;1499:70;;1592:60;1645:6;1592:60;:::i;:::-;1582:70;;1438:224;1425:1;1422;1418:9;1413:14;;1378:284;;;1382:14;1678:3;1671:10;;1079:608;;;;;;;:::o;1693:159::-;1794:51;1839:5;1794:51;:::i;:::-;1789:3;1782:64;1772:80;;:::o;1858:222::-;;1989:2;1978:9;1974:18;1966:26;;2002:71;2070:1;2059:9;2055:17;2046:6;2002:71;:::i;:::-;1956:124;;;;:::o;2086:511::-;;2309:2;2298:9;2294:18;2286:26;;2358:9;2352:4;2348:20;2344:1;2333:9;2329:17;2322:47;2386:108;2489:4;2480:6;2386:108;:::i;:::-;2378:116;;2504:86;2586:2;2575:9;2571:18;2562:6;2504:86;:::i;:::-;2276:321;;;;;:::o;2603:132::-;;2693:3;2685:11;;2723:4;2718:3;2714:14;2706:22;;2675:60;;;:::o;2741:114::-;;2842:5;2836:12;2826:22;;2815:40;;;:::o;2861:113::-;;2963:4;2958:3;2954:14;2946:22;;2936:38;;;:::o;2980:184::-;;3113:6;3108:3;3101:19;3153:4;3148:3;3144:14;3129:29;;3091:73;;;;:::o;3170:96::-;;3236:24;3254:5;3236:24;:::i;:::-;3225:35;;3215:51;;;:::o;3272:110::-;;3352:24;3370:5;3352:24;:::i;:::-;3341:35;;3331:51;;;:::o;3388:126::-;;3465:42;3458:5;3454:54;3443:65;;3433:81;;;:::o;3520:154::-;;3617:51;3662:5;3617:51;:::i;:::-;3604:64;;3594:80;;;:::o;3680:127::-;;3777:24;3795:5;3777:24;:::i;:::-;3764:37;;3754:53;;;:::o;3813:150::-;3900:38;3932:5;3900:38;:::i;:::-;3893:5;3890:49;3880:2;;3953:1;3950;3943:12;3880:2;3870:93;:::o;119:2120:0:-;;;;;;;",
  "deployedSourceMap": "119:2120:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;346:39;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;143:22;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;285:57;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;463:35;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;1546:255;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;236:45;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;185:47;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1029:96;;;:::i;:::-;;502:63;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1805:116;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1304:238;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;430:29;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;1948:289;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;346:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;143:22::-;;;;;;;;;;;;:::o;285:57::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;463:35::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1546:255::-;1620:15;1636;1620:32;;;;;;;;;;;;;;;;;;;;;;;;;;:37;;;1208:4;1175:7;;;;;;;;;;:17;;;1193:10;1175:29;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:37;;1167:69;;;;;;;;;;;;:::i;:::-;;;;;;;;;1667:11:::1;:23;1679:10;1667:23;;;;;;;;;;;;;;;1703:87;;;;;;;;1735:15;1751;1735:32;;;;;;;;;;;;;;;;;;;;;;;;;;:37;;;1720:12;:52;;;;:::i;:::-;1703:87;;;;1774:15;1703:87;;::::0;1667:129:::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1249:7:::0;;;;;;;;;;:20;;;1270:10;1282:4;1249:46;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1546:255;;:::o;236:45::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;185:47::-;;;;;;;;;;;;;;;;;:::o;1029:96::-;1061:7;;;;;;;;;;:12;;;1074:10;1113:6;1086:12;:24;1099:10;1086:24;;;;;;;;;;;;;;;;:33;;;;:::i;:::-;1061:59;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1029:96::o;502:63::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1805:116::-;1857:9;1867:7;1857:18;;;;;;;;;;;;;;;;;;;;;;;;1208:4;1175:7;;;;;;;;;;:17;;;1193:10;1175:29;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:37;;1167:69;;;;;;;;;;;;:::i;:::-;;;;;;;;;1912:4:::1;1883:5;:17;1889:10;1883:17;;;;;;;;;;;;;;;1901:7;1883:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:33;;;;;;;;;;;;;;;;;;1249:7:::0;;;;;;;;;;:20;;;1270:10;1282:4;1249:46;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1805:116;;:::o;1304:238::-;1364:12;1377;1364:26;;;;;;;;;;;;;;;;;;;;;;;;;;:31;;;1208:4;1175:7;;;;;;;;;;:17;;;1193:10;1175:29;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:37;;1167:69;;;;;;;;;;;;:::i;:::-;;;;;;;;;1403:17:::1;1423:12;1436;1423:26;;;;;;;;;;;;;;;;;;;;;;;;;;1403:46;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;1494:1;1456:8;:20;1465:10;1456:20;;;;;;;;;;;;;;;1477:12;1456:34;;;;;;;;;;;;;;;;;;;;;;;;:39;;;;;;;:::i;:::-;;;;;;;;1529:2;:8;;;1501:12;:24;1514:10;1501:24;;;;;;;;;;;;;;;;:36;;;;;;;:::i;:::-;;;;;;;;1242:1;1249:7:::0;;;;;;;;;;:20;;;1270:10;1282:4;1249:46;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1304:238;;:::o;430:29::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1948:289::-;1994:27;2024:11;:23;2036:10;2024:23;;;;;;;;;;;;;;;2048:5;2024:30;;;;;;;;;;;;;;;;;;;;;;;;;;1994:60;;;;;;;;;;;;;;;;;;;;;;;;;;;2084:3;:15;;;2068:12;:31;;2060:66;;;;;;;;;;;;:::i;:::-;;;;;;;;;2133:7;;;;;;;;;;:12;;;2146:10;2158:15;2174:3;:6;;;2158:23;;;;;;;;;;;;;;;;;;;;;;;;;;:30;;;2133:56;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2202:11;:23;2214:10;2202:23;;;;;;;;;;;;;;;2226:5;2202:30;;;;;;;;;;;;;;;;;;;;;;;;;;;2195:37;;;;;;;;;;;;;;1948:289;;:::o;7:139:13:-;;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;59:87;;;;:::o;152:139::-;;236:6;223:20;214:29;;252:33;279:5;252:33;:::i;:::-;204:87;;;;:::o;297:143::-;;385:6;379:13;370:22;;401:33;428:5;401:33;:::i;:::-;360:80;;;;:::o;446:262::-;;554:2;542:9;533:7;529:23;525:32;522:2;;;570:1;567;560:12;522:2;613:1;638:53;683:7;674:6;663:9;659:22;638:53;:::i;:::-;628:63;;584:117;512:196;;;;:::o;714:407::-;;;839:2;827:9;818:7;814:23;810:32;807:2;;;855:1;852;845:12;807:2;898:1;923:53;968:7;959:6;948:9;944:22;923:53;:::i;:::-;913:63;;869:117;1025:2;1051:53;1096:7;1087:6;1076:9;1072:22;1051:53;:::i;:::-;1041:63;;996:118;797:324;;;;;:::o;1127:262::-;;1235:2;1223:9;1214:7;1210:23;1206:32;1203:2;;;1251:1;1248;1241:12;1203:2;1294:1;1319:53;1364:7;1355:6;1344:9;1340:22;1319:53;:::i;:::-;1309:63;;1265:117;1193:196;;;;:::o;1395:284::-;;1514:2;1502:9;1493:7;1489:23;1485:32;1482:2;;;1530:1;1527;1520:12;1482:2;1573:1;1598:64;1654:7;1645:6;1634:9;1630:22;1598:64;:::i;:::-;1588:74;;1544:128;1472:207;;;;:::o;1685:118::-;1772:24;1790:5;1772:24;:::i;:::-;1767:3;1760:37;1750:53;;:::o;1809:109::-;1890:21;1905:5;1890:21;:::i;:::-;1885:3;1878:34;1868:50;;:::o;1924:161::-;2026:52;2072:5;2026:52;:::i;:::-;2021:3;2014:65;2004:81;;:::o;2091:366::-;;2254:67;2318:2;2313:3;2254:67;:::i;:::-;2247:74;;2330:93;2419:3;2330:93;:::i;:::-;2448:2;2443:3;2439:12;2432:19;;2237:220;;;:::o;2463:362::-;;2625:65;2688:1;2683:3;2625:65;:::i;:::-;2618:72;;2699:93;2788:3;2699:93;:::i;:::-;2817:1;2812:3;2808:11;2801:18;;2608:217;;;:::o;2831:366::-;;2994:67;3058:2;3053:3;2994:67;:::i;:::-;2987:74;;3070:93;3159:3;3070:93;:::i;:::-;3188:2;3183:3;3179:12;3172:19;;2977:220;;;:::o;3203:118::-;3290:24;3308:5;3290:24;:::i;:::-;3285:3;3278:37;3268:53;;:::o;3327:222::-;;3458:2;3447:9;3443:18;3435:26;;3471:71;3539:1;3528:9;3524:17;3515:6;3471:71;:::i;:::-;3425:124;;;;:::o;3555:332::-;;3714:2;3703:9;3699:18;3691:26;;3727:71;3795:1;3784:9;3780:17;3771:6;3727:71;:::i;:::-;3808:72;3876:2;3865:9;3861:18;3852:6;3808:72;:::i;:::-;3681:206;;;;;:::o;3893:943::-;;4252:3;4241:9;4237:19;4229:27;;4266:71;4334:1;4323:9;4319:17;4310:6;4266:71;:::i;:::-;4347:72;4415:2;4404:9;4400:18;4391:6;4347:72;:::i;:::-;4466:9;4460:4;4456:20;4451:2;4440:9;4436:18;4429:48;4494:130;4619:4;4494:130;:::i;:::-;4486:138;;4671:9;4665:4;4661:20;4656:2;4645:9;4641:18;4634:48;4699:130;4824:4;4699:130;:::i;:::-;4691:138;;4219:617;;;;;:::o;4842:210::-;;4967:2;4956:9;4952:18;4944:26;;4980:65;5042:1;5031:9;5027:17;5018:6;4980:65;:::i;:::-;4934:118;;;;:::o;5058:252::-;;5204:2;5193:9;5189:18;5181:26;;5217:86;5300:1;5289:9;5285:17;5276:6;5217:86;:::i;:::-;5171:139;;;;:::o;5316:419::-;;5520:2;5509:9;5505:18;5497:26;;5569:9;5563:4;5559:20;5555:1;5544:9;5540:17;5533:47;5597:131;5723:4;5597:131;:::i;:::-;5589:139;;5487:248;;;:::o;5741:419::-;;5945:2;5934:9;5930:18;5922:26;;5994:9;5988:4;5984:20;5980:1;5969:9;5965:17;5958:47;6022:131;6148:4;6022:131;:::i;:::-;6014:139;;5912:248;;;:::o;6166:222::-;;6297:2;6286:9;6282:18;6274:26;;6310:71;6378:1;6367:9;6363:17;6354:6;6310:71;:::i;:::-;6264:124;;;;:::o;6394:332::-;;6553:2;6542:9;6538:18;6530:26;;6566:71;6634:1;6623:9;6619:17;6610:6;6566:71;:::i;:::-;6647:72;6715:2;6704:9;6700:18;6691:6;6647:72;:::i;:::-;6520:206;;;;;:::o;6732:442::-;;6919:2;6908:9;6904:18;6896:26;;6932:71;7000:1;6989:9;6985:17;6976:6;6932:71;:::i;:::-;7013:72;7081:2;7070:9;7066:18;7057:6;7013:72;:::i;:::-;7095;7163:2;7152:9;7148:18;7139:6;7095:72;:::i;:::-;6886:288;;;;;;:::o;7180:168::-;;7297:6;7292:3;7285:19;7337:4;7332:3;7328:14;7313:29;;7275:73;;;;:::o;7354:169::-;;7472:6;7467:3;7460:19;7512:4;7507:3;7503:14;7488:29;;7450:73;;;;:::o;7529:305::-;;7588:20;7606:1;7588:20;:::i;:::-;7583:25;;7622:20;7640:1;7622:20;:::i;:::-;7617:25;;7776:1;7708:66;7704:74;7701:1;7698:81;7695:2;;;7782:18;;:::i;:::-;7695:2;7826:1;7823;7819:9;7812:16;;7573:261;;;;:::o;7840:96::-;;7906:24;7924:5;7906:24;:::i;:::-;7895:35;;7885:51;;;:::o;7942:90::-;;8019:5;8012:13;8005:21;7994:32;;7984:48;;;:::o;8038:126::-;;8115:42;8108:5;8104:54;8093:65;;8083:81;;;:::o;8170:77::-;;8236:5;8225:16;;8215:32;;;:::o;8253:156::-;;8351:52;8397:5;8351:52;:::i;:::-;8338:65;;8328:81;;;:::o;8415:128::-;;8513:24;8531:5;8513:24;:::i;:::-;8500:37;;8490:53;;;:::o;8549:180::-;8597:77;8594:1;8587:88;8694:4;8691:1;8684:15;8718:4;8715:1;8708:15;8735:172;8875:24;8871:1;8863:6;8859:14;8852:48;8841:66;:::o;8913:114::-;9019:8;:::o;9033:169::-;9173:21;9169:1;9161:6;9157:14;9150:45;9139:63;:::o;9208:122::-;9281:24;9299:5;9281:24;:::i;:::-;9274:5;9271:35;9261:2;;9320:1;9317;9310:12;9261:2;9251:79;:::o;9336:122::-;9409:24;9427:5;9409:24;:::i;:::-;9402:5;9399:35;9389:2;;9448:1;9445;9438:12;9389:2;9379:79;:::o",
  "source": "// SPDX-License-Identifier: GPL-3.0-or-later\npragma solidity ^0.8.3;\n\nimport \"./Amacoin.sol\";\nimport \"./Structs.sol\";\n\ncontract Amaclicker {\n  Amacoin public amacoin;\n\n  // User info\n  mapping(address => uint256) public clickRewards;\n  mapping(address => uint256[]) public upgrades;\n  mapping(address => boughtInvestment[]) public investments;\n  mapping(address => bool[]) public skins;\n\n  // TODO: Finish these\n  // Items info\n  upgrade[] public upgradesInfo;\n  investment[] public investmentsInfo;\n  uint256[] public skinsInfo = [0, 1000 * 10**18, 10000 * 10**18];\n\n  constructor(IERC20 cheemscoin) {\n    address[] memory defaultOperators = new address[](1);\n    defaultOperators[0] = address(this);\n    amacoin = new Amacoin(defaultOperators, cheemscoin);\n    amacoin.transferOwnership(msg.sender);\n\n    // Initialise items info\n    upgradesInfo.push(upgrade(19.99 * 10**18, 0.1 * 10**18));\n    upgradesInfo.push(upgrade(1000 * 10**18, 10 * 10**18));\n    investmentsInfo.push(investment(10 * 10**18, 40 * 10**18, 72));\n  }\n\n  function click() external {\n    amacoin.mint(msg.sender, clickRewards[msg.sender] + 10**18);\n  }\n\n  modifier purchase(uint256 cost) {\n    require(amacoin.balanceOf(msg.sender) >= cost, \"Not enough amacoins\");\n    _;\n    amacoin.operatorBurn(msg.sender, cost, \"\", \"\");\n  }\n\n  function buyUpgrade(uint256 upgradeIndex) external purchase(upgradesInfo[upgradeIndex].cost) {\n    upgrade memory up = upgradesInfo[upgradeIndex];\n\n    upgrades[msg.sender][upgradeIndex] += 1;\n    clickRewards[msg.sender] += up.boost;\n  }\n\n  function buyInvestment(uint256 investmentIndex)\n    external\n    purchase(investmentsInfo[investmentIndex].cost)\n  {\n    investments[msg.sender].push(\n      boughtInvestment(block.number + investmentsInfo[investmentIndex].time, investmentIndex)\n    );\n  }\n\n  function buySkin(uint256 skindex) external purchase(skinsInfo[skindex]) {\n    skins[msg.sender][skindex] = true;\n  }\n\n  // boughtInvestments\n  function redeem(uint256 index) external {\n    boughtInvestment memory inv = investments[msg.sender][index];\n    require(block.number >= inv.redeemBlock, \"Investment not matured\");\n\n    amacoin.mint(msg.sender, investmentsInfo[inv.id].reward);\n    delete investments[msg.sender][index];\n  }\n}\n",
  "sourcePath": "/Users/kaikurosawa/Desktop/code/amaclicker/contracts/Amaclicker.sol",
  "ast": {
    "absolutePath": "/Users/kaikurosawa/Desktop/code/amaclicker/contracts/Amaclicker.sol",
    "exportedSymbols": {
      "Address": [
        2267
      ],
      "Amaclicker": [
        321
      ],
      "Amacoin": [
        420
      ],
      "Context": [
        2290
      ],
      "ERC777": [
        1772
      ],
      "IERC1820Registry": [
        2380
      ],
      "IERC20": [
        660
      ],
      "IERC777": [
        1931
      ],
      "IERC777Recipient": [
        1951
      ],
      "IERC777Sender": [
        1971
      ],
      "Ownable": [
        582
      ],
      "boughtInvestment": [
        472
      ],
      "investment": [
        467
      ],
      "upgrade": [
        460
      ]
    },
    "id": 322,
    "license": "GPL-3.0-or-later",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".3"
        ],
        "nodeType": "PragmaDirective",
        "src": "45:23:0"
      },
      {
        "absolutePath": "/Users/kaikurosawa/Desktop/code/amaclicker/contracts/Amacoin.sol",
        "file": "./Amacoin.sol",
        "id": 2,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 322,
        "sourceUnit": 421,
        "src": "70:23:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/kaikurosawa/Desktop/code/amaclicker/contracts/Structs.sol",
        "file": "./Structs.sol",
        "id": 3,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 322,
        "sourceUnit": 473,
        "src": "94:23:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [
          420
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 321,
        "linearizedBaseContracts": [
          321
        ],
        "name": "Amaclicker",
        "nameLocation": "128:10:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "31629f78",
            "id": 6,
            "mutability": "mutable",
            "name": "amacoin",
            "nameLocation": "158:7:0",
            "nodeType": "VariableDeclaration",
            "scope": 321,
            "src": "143:22:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Amacoin_$420",
              "typeString": "contract Amacoin"
            },
            "typeName": {
              "id": 5,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 4,
                "name": "Amacoin",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 420,
                "src": "143:7:0"
              },
              "referencedDeclaration": 420,
              "src": "143:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Amacoin_$420",
                "typeString": "contract Amacoin"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "7ab68263",
            "id": 10,
            "mutability": "mutable",
            "name": "clickRewards",
            "nameLocation": "220:12:0",
            "nodeType": "VariableDeclaration",
            "scope": 321,
            "src": "185:47:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 9,
              "keyType": {
                "id": 7,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "193:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "185:27:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 8,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "204:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "5d8e223c",
            "id": 15,
            "mutability": "mutable",
            "name": "upgrades",
            "nameLocation": "273:8:0",
            "nodeType": "VariableDeclaration",
            "scope": 321,
            "src": "236:45:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
              "typeString": "mapping(address => uint256[])"
            },
            "typeName": {
              "id": 14,
              "keyType": {
                "id": 11,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "244:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "236:29:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
                "typeString": "mapping(address => uint256[])"
              },
              "valueType": {
                "baseType": {
                  "id": 12,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "255:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "id": 13,
                "nodeType": "ArrayTypeName",
                "src": "255:9:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                  "typeString": "uint256[]"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "3e6d9770",
            "id": 21,
            "mutability": "mutable",
            "name": "investments",
            "nameLocation": "331:11:0",
            "nodeType": "VariableDeclaration",
            "scope": 321,
            "src": "285:57:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_boughtInvestment_$472_storage_$dyn_storage_$",
              "typeString": "mapping(address => struct boughtInvestment[])"
            },
            "typeName": {
              "id": 20,
              "keyType": {
                "id": 16,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "293:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "285:38:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_boughtInvestment_$472_storage_$dyn_storage_$",
                "typeString": "mapping(address => struct boughtInvestment[])"
              },
              "valueType": {
                "baseType": {
                  "id": 18,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 17,
                    "name": "boughtInvestment",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 472,
                    "src": "304:16:0"
                  },
                  "referencedDeclaration": 472,
                  "src": "304:16:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_boughtInvestment_$472_storage_ptr",
                    "typeString": "struct boughtInvestment"
                  }
                },
                "id": 19,
                "nodeType": "ArrayTypeName",
                "src": "304:18:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_struct$_boughtInvestment_$472_storage_$dyn_storage_ptr",
                  "typeString": "struct boughtInvestment[]"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "2b0f1221",
            "id": 26,
            "mutability": "mutable",
            "name": "skins",
            "nameLocation": "380:5:0",
            "nodeType": "VariableDeclaration",
            "scope": 321,
            "src": "346:39:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_bool_$dyn_storage_$",
              "typeString": "mapping(address => bool[])"
            },
            "typeName": {
              "id": 25,
              "keyType": {
                "id": 22,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "354:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "346:26:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_bool_$dyn_storage_$",
                "typeString": "mapping(address => bool[])"
              },
              "valueType": {
                "baseType": {
                  "id": 23,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "365:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "id": 24,
                "nodeType": "ArrayTypeName",
                "src": "365:6:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_bool_$dyn_storage_ptr",
                  "typeString": "bool[]"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "b6b7d933",
            "id": 30,
            "mutability": "mutable",
            "name": "upgradesInfo",
            "nameLocation": "447:12:0",
            "nodeType": "VariableDeclaration",
            "scope": 321,
            "src": "430:29:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_struct$_upgrade_$460_storage_$dyn_storage",
              "typeString": "struct upgrade[]"
            },
            "typeName": {
              "baseType": {
                "id": 28,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 27,
                  "name": "upgrade",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 460,
                  "src": "430:7:0"
                },
                "referencedDeclaration": 460,
                "src": "430:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_upgrade_$460_storage_ptr",
                  "typeString": "struct upgrade"
                }
              },
              "id": 29,
              "nodeType": "ArrayTypeName",
              "src": "430:9:0",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_upgrade_$460_storage_$dyn_storage_ptr",
                "typeString": "struct upgrade[]"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "3eedd49b",
            "id": 34,
            "mutability": "mutable",
            "name": "investmentsInfo",
            "nameLocation": "483:15:0",
            "nodeType": "VariableDeclaration",
            "scope": 321,
            "src": "463:35:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_struct$_investment_$467_storage_$dyn_storage",
              "typeString": "struct investment[]"
            },
            "typeName": {
              "baseType": {
                "id": 32,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 31,
                  "name": "investment",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 467,
                  "src": "463:10:0"
                },
                "referencedDeclaration": 467,
                "src": "463:10:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_investment_$467_storage_ptr",
                  "typeString": "struct investment"
                }
              },
              "id": 33,
              "nodeType": "ArrayTypeName",
              "src": "463:12:0",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_investment_$467_storage_$dyn_storage_ptr",
                "typeString": "struct investment[]"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "8a3e059a",
            "id": 49,
            "mutability": "mutable",
            "name": "skinsInfo",
            "nameLocation": "519:9:0",
            "nodeType": "VariableDeclaration",
            "scope": 321,
            "src": "502:63:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
              "typeString": "uint256[]"
            },
            "typeName": {
              "baseType": {
                "id": 35,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "502:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "id": 36,
              "nodeType": "ArrayTypeName",
              "src": "502:9:0",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                "typeString": "uint256[]"
              }
            },
            "value": {
              "components": [
                {
                  "hexValue": "30",
                  "id": 37,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "532:1:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_0_by_1",
                    "typeString": "int_const 0"
                  },
                  "value": "0"
                },
                {
                  "commonType": {
                    "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                    "typeString": "int_const 1000000000000000000000"
                  },
                  "id": 42,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "lValueRequested": false,
                  "leftExpression": {
                    "hexValue": "31303030",
                    "id": 38,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "535:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1000_by_1",
                      "typeString": "int_const 1000"
                    },
                    "value": "1000"
                  },
                  "nodeType": "BinaryOperation",
                  "operator": "*",
                  "rightExpression": {
                    "commonType": {
                      "typeIdentifier": "t_rational_1000000000000000000_by_1",
                      "typeString": "int_const 1000000000000000000"
                    },
                    "id": 41,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "leftExpression": {
                      "hexValue": "3130",
                      "id": 39,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "542:2:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_10_by_1",
                        "typeString": "int_const 10"
                      },
                      "value": "10"
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "**",
                    "rightExpression": {
                      "hexValue": "3138",
                      "id": 40,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "546:2:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_18_by_1",
                        "typeString": "int_const 18"
                      },
                      "value": "18"
                    },
                    "src": "542:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1000000000000000000_by_1",
                      "typeString": "int_const 1000000000000000000"
                    }
                  },
                  "src": "535:13:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                    "typeString": "int_const 1000000000000000000000"
                  }
                },
                {
                  "commonType": {
                    "typeIdentifier": "t_rational_10000000000000000000000_by_1",
                    "typeString": "int_const 10000000000000000000000"
                  },
                  "id": 47,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "lValueRequested": false,
                  "leftExpression": {
                    "hexValue": "3130303030",
                    "id": 43,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "550:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_10000_by_1",
                      "typeString": "int_const 10000"
                    },
                    "value": "10000"
                  },
                  "nodeType": "BinaryOperation",
                  "operator": "*",
                  "rightExpression": {
                    "commonType": {
                      "typeIdentifier": "t_rational_1000000000000000000_by_1",
                      "typeString": "int_const 1000000000000000000"
                    },
                    "id": 46,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "leftExpression": {
                      "hexValue": "3130",
                      "id": 44,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "558:2:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_10_by_1",
                        "typeString": "int_const 10"
                      },
                      "value": "10"
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "**",
                    "rightExpression": {
                      "hexValue": "3138",
                      "id": 45,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "562:2:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_18_by_1",
                        "typeString": "int_const 18"
                      },
                      "value": "18"
                    },
                    "src": "558:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1000000000000000000_by_1",
                      "typeString": "int_const 1000000000000000000"
                    }
                  },
                  "src": "550:14:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_10000000000000000000000_by_1",
                    "typeString": "int_const 10000000000000000000000"
                  }
                }
              ],
              "id": 48,
              "isConstant": false,
              "isInlineArray": true,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "nodeType": "TupleExpression",
              "src": "531:34:0",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_uint80_$3_memory_ptr",
                "typeString": "uint80[3] memory"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 143,
              "nodeType": "Block",
              "src": "601:424:0",
              "statements": [
                {
                  "assignments": [
                    59
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 59,
                      "mutability": "mutable",
                      "name": "defaultOperators",
                      "nameLocation": "624:16:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 143,
                      "src": "607:33:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 57,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "607:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 58,
                        "nodeType": "ArrayTypeName",
                        "src": "607:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 65,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 63,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "657:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 62,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "643:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (address[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 60,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "647:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 61,
                        "nodeType": "ArrayTypeName",
                        "src": "647:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      }
                    },
                    "id": 64,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "643:16:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                      "typeString": "address[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "607:52:0"
                },
                {
                  "expression": {
                    "id": 73,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 66,
                        "name": "defaultOperators",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59,
                        "src": "665:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 68,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 67,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "682:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "665:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 71,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967268,
                          "src": "695:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Amaclicker_$321",
                            "typeString": "contract Amaclicker"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_Amaclicker_$321",
                            "typeString": "contract Amaclicker"
                          }
                        ],
                        "id": 70,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "687:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 69,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "687:7:0",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 72,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "687:13:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "665:35:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 74,
                  "nodeType": "ExpressionStatement",
                  "src": "665:35:0"
                },
                {
                  "expression": {
                    "id": 82,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 75,
                      "name": "amacoin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6,
                      "src": "706:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Amacoin_$420",
                        "typeString": "contract Amacoin"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 79,
                          "name": "defaultOperators",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 59,
                          "src": "728:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        },
                        {
                          "id": 80,
                          "name": "cheemscoin",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 52,
                          "src": "746:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$660",
                            "typeString": "contract IERC20"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          },
                          {
                            "typeIdentifier": "t_contract$_IERC20_$660",
                            "typeString": "contract IERC20"
                          }
                        ],
                        "id": 78,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "716:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_array$_t_address_$dyn_memory_ptr_$_t_contract$_IERC20_$660_$returns$_t_contract$_Amacoin_$420_$",
                          "typeString": "function (address[] memory,contract IERC20) returns (contract Amacoin)"
                        },
                        "typeName": {
                          "id": 77,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 76,
                            "name": "Amacoin",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 420,
                            "src": "720:7:0"
                          },
                          "referencedDeclaration": 420,
                          "src": "720:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Amacoin_$420",
                            "typeString": "contract Amacoin"
                          }
                        }
                      },
                      "id": 81,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "716:41:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Amacoin_$420",
                        "typeString": "contract Amacoin"
                      }
                    },
                    "src": "706:51:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Amacoin_$420",
                      "typeString": "contract Amacoin"
                    }
                  },
                  "id": 83,
                  "nodeType": "ExpressionStatement",
                  "src": "706:51:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 87,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "789:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 88,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "789:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 84,
                        "name": "amacoin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6,
                        "src": "763:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Amacoin_$420",
                          "typeString": "contract Amacoin"
                        }
                      },
                      "id": 86,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferOwnership",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 581,
                      "src": "763:25:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 89,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "763:37:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 90,
                  "nodeType": "ExpressionStatement",
                  "src": "763:37:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_rational_19990000000000000000_by_1",
                              "typeString": "int_const 19990000000000000000"
                            },
                            "id": 99,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "leftExpression": {
                              "hexValue": "31392e3939",
                              "id": 95,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "862:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1999_by_100",
                                "typeString": "rational_const 1999 / 100"
                              },
                              "value": "19.99"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "commonType": {
                                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                "typeString": "int_const 1000000000000000000"
                              },
                              "id": 98,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "leftExpression": {
                                "hexValue": "3130",
                                "id": 96,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "870:2:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_10_by_1",
                                  "typeString": "int_const 10"
                                },
                                "value": "10"
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "**",
                              "rightExpression": {
                                "hexValue": "3138",
                                "id": 97,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "874:2:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_18_by_1",
                                  "typeString": "int_const 18"
                                },
                                "value": "18"
                              },
                              "src": "870:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                "typeString": "int_const 1000000000000000000"
                              }
                            },
                            "src": "862:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_19990000000000000000_by_1",
                              "typeString": "int_const 19990000000000000000"
                            }
                          },
                          {
                            "commonType": {
                              "typeIdentifier": "t_rational_100000000000000000_by_1",
                              "typeString": "int_const 100000000000000000"
                            },
                            "id": 104,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "leftExpression": {
                              "hexValue": "302e31",
                              "id": 100,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "878:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_10",
                                "typeString": "rational_const 1 / 10"
                              },
                              "value": "0.1"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "commonType": {
                                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                "typeString": "int_const 1000000000000000000"
                              },
                              "id": 103,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "leftExpression": {
                                "hexValue": "3130",
                                "id": 101,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "884:2:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_10_by_1",
                                  "typeString": "int_const 10"
                                },
                                "value": "10"
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "**",
                              "rightExpression": {
                                "hexValue": "3138",
                                "id": 102,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "888:2:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_18_by_1",
                                  "typeString": "int_const 18"
                                },
                                "value": "18"
                              },
                              "src": "884:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                "typeString": "int_const 1000000000000000000"
                              }
                            },
                            "src": "878:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_100000000000000000_by_1",
                              "typeString": "int_const 100000000000000000"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_19990000000000000000_by_1",
                              "typeString": "int_const 19990000000000000000"
                            },
                            {
                              "typeIdentifier": "t_rational_100000000000000000_by_1",
                              "typeString": "int_const 100000000000000000"
                            }
                          ],
                          "id": 94,
                          "name": "upgrade",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 460,
                          "src": "854:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_upgrade_$460_storage_ptr_$",
                            "typeString": "type(struct upgrade storage pointer)"
                          }
                        },
                        "id": 105,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "854:37:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_upgrade_$460_memory_ptr",
                          "typeString": "struct upgrade memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_upgrade_$460_memory_ptr",
                          "typeString": "struct upgrade memory"
                        }
                      ],
                      "expression": {
                        "id": 91,
                        "name": "upgradesInfo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30,
                        "src": "836:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_upgrade_$460_storage_$dyn_storage",
                          "typeString": "struct upgrade storage ref[] storage ref"
                        }
                      },
                      "id": 93,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "836:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_upgrade_$460_storage_$dyn_storage_ptr_$_t_struct$_upgrade_$460_storage_$returns$__$bound_to$_t_array$_t_struct$_upgrade_$460_storage_$dyn_storage_ptr_$",
                        "typeString": "function (struct upgrade storage ref[] storage pointer,struct upgrade storage ref)"
                      }
                    },
                    "id": 106,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "836:56:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 107,
                  "nodeType": "ExpressionStatement",
                  "src": "836:56:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000000"
                            },
                            "id": 116,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "leftExpression": {
                              "hexValue": "31303030",
                              "id": 112,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "924:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1000_by_1",
                                "typeString": "int_const 1000"
                              },
                              "value": "1000"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "commonType": {
                                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                "typeString": "int_const 1000000000000000000"
                              },
                              "id": 115,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "leftExpression": {
                                "hexValue": "3130",
                                "id": 113,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "931:2:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_10_by_1",
                                  "typeString": "int_const 10"
                                },
                                "value": "10"
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "**",
                              "rightExpression": {
                                "hexValue": "3138",
                                "id": 114,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "935:2:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_18_by_1",
                                  "typeString": "int_const 18"
                                },
                                "value": "18"
                              },
                              "src": "931:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                "typeString": "int_const 1000000000000000000"
                              }
                            },
                            "src": "924:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000000"
                            }
                          },
                          {
                            "commonType": {
                              "typeIdentifier": "t_rational_10000000000000000000_by_1",
                              "typeString": "int_const 10000000000000000000"
                            },
                            "id": 121,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "leftExpression": {
                              "hexValue": "3130",
                              "id": 117,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "939:2:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_10_by_1",
                                "typeString": "int_const 10"
                              },
                              "value": "10"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "commonType": {
                                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                "typeString": "int_const 1000000000000000000"
                              },
                              "id": 120,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "leftExpression": {
                                "hexValue": "3130",
                                "id": 118,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "944:2:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_10_by_1",
                                  "typeString": "int_const 10"
                                },
                                "value": "10"
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "**",
                              "rightExpression": {
                                "hexValue": "3138",
                                "id": 119,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "948:2:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_18_by_1",
                                  "typeString": "int_const 18"
                                },
                                "value": "18"
                              },
                              "src": "944:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                "typeString": "int_const 1000000000000000000"
                              }
                            },
                            "src": "939:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10000000000000000000_by_1",
                              "typeString": "int_const 10000000000000000000"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000000"
                            },
                            {
                              "typeIdentifier": "t_rational_10000000000000000000_by_1",
                              "typeString": "int_const 10000000000000000000"
                            }
                          ],
                          "id": 111,
                          "name": "upgrade",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 460,
                          "src": "916:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_upgrade_$460_storage_ptr_$",
                            "typeString": "type(struct upgrade storage pointer)"
                          }
                        },
                        "id": 122,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "916:35:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_upgrade_$460_memory_ptr",
                          "typeString": "struct upgrade memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_upgrade_$460_memory_ptr",
                          "typeString": "struct upgrade memory"
                        }
                      ],
                      "expression": {
                        "id": 108,
                        "name": "upgradesInfo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30,
                        "src": "898:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_upgrade_$460_storage_$dyn_storage",
                          "typeString": "struct upgrade storage ref[] storage ref"
                        }
                      },
                      "id": 110,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "898:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_upgrade_$460_storage_$dyn_storage_ptr_$_t_struct$_upgrade_$460_storage_$returns$__$bound_to$_t_array$_t_struct$_upgrade_$460_storage_$dyn_storage_ptr_$",
                        "typeString": "function (struct upgrade storage ref[] storage pointer,struct upgrade storage ref)"
                      }
                    },
                    "id": 123,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "898:54:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 124,
                  "nodeType": "ExpressionStatement",
                  "src": "898:54:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_rational_10000000000000000000_by_1",
                              "typeString": "int_const 10000000000000000000"
                            },
                            "id": 133,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "leftExpression": {
                              "hexValue": "3130",
                              "id": 129,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "990:2:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_10_by_1",
                                "typeString": "int_const 10"
                              },
                              "value": "10"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "commonType": {
                                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                "typeString": "int_const 1000000000000000000"
                              },
                              "id": 132,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "leftExpression": {
                                "hexValue": "3130",
                                "id": 130,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "995:2:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_10_by_1",
                                  "typeString": "int_const 10"
                                },
                                "value": "10"
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "**",
                              "rightExpression": {
                                "hexValue": "3138",
                                "id": 131,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "999:2:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_18_by_1",
                                  "typeString": "int_const 18"
                                },
                                "value": "18"
                              },
                              "src": "995:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                "typeString": "int_const 1000000000000000000"
                              }
                            },
                            "src": "990:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10000000000000000000_by_1",
                              "typeString": "int_const 10000000000000000000"
                            }
                          },
                          {
                            "commonType": {
                              "typeIdentifier": "t_rational_40000000000000000000_by_1",
                              "typeString": "int_const 40000000000000000000"
                            },
                            "id": 138,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "leftExpression": {
                              "hexValue": "3430",
                              "id": 134,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1003:2:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_40_by_1",
                                "typeString": "int_const 40"
                              },
                              "value": "40"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "commonType": {
                                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                "typeString": "int_const 1000000000000000000"
                              },
                              "id": 137,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "leftExpression": {
                                "hexValue": "3130",
                                "id": 135,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1008:2:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_10_by_1",
                                  "typeString": "int_const 10"
                                },
                                "value": "10"
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "**",
                              "rightExpression": {
                                "hexValue": "3138",
                                "id": 136,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1012:2:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_18_by_1",
                                  "typeString": "int_const 18"
                                },
                                "value": "18"
                              },
                              "src": "1008:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                "typeString": "int_const 1000000000000000000"
                              }
                            },
                            "src": "1003:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_40000000000000000000_by_1",
                              "typeString": "int_const 40000000000000000000"
                            }
                          },
                          {
                            "hexValue": "3732",
                            "id": 139,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1016:2:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_72_by_1",
                              "typeString": "int_const 72"
                            },
                            "value": "72"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_10000000000000000000_by_1",
                              "typeString": "int_const 10000000000000000000"
                            },
                            {
                              "typeIdentifier": "t_rational_40000000000000000000_by_1",
                              "typeString": "int_const 40000000000000000000"
                            },
                            {
                              "typeIdentifier": "t_rational_72_by_1",
                              "typeString": "int_const 72"
                            }
                          ],
                          "id": 128,
                          "name": "investment",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 467,
                          "src": "979:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_investment_$467_storage_ptr_$",
                            "typeString": "type(struct investment storage pointer)"
                          }
                        },
                        "id": 140,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "979:40:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_investment_$467_memory_ptr",
                          "typeString": "struct investment memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_investment_$467_memory_ptr",
                          "typeString": "struct investment memory"
                        }
                      ],
                      "expression": {
                        "id": 125,
                        "name": "investmentsInfo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34,
                        "src": "958:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_investment_$467_storage_$dyn_storage",
                          "typeString": "struct investment storage ref[] storage ref"
                        }
                      },
                      "id": 127,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "958:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_investment_$467_storage_$dyn_storage_ptr_$_t_struct$_investment_$467_storage_$returns$__$bound_to$_t_array$_t_struct$_investment_$467_storage_$dyn_storage_ptr_$",
                        "typeString": "function (struct investment storage ref[] storage pointer,struct investment storage ref)"
                      }
                    },
                    "id": 141,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "958:62:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 142,
                  "nodeType": "ExpressionStatement",
                  "src": "958:62:0"
                }
              ]
            },
            "id": 144,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 53,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 52,
                  "mutability": "mutable",
                  "name": "cheemscoin",
                  "nameLocation": "589:10:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 144,
                  "src": "582:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$660",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 51,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 50,
                      "name": "IERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 660,
                      "src": "582:6:0"
                    },
                    "referencedDeclaration": 660,
                    "src": "582:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$660",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "581:19:0"
            },
            "returnParameters": {
              "id": 54,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "601:0:0"
            },
            "scope": 321,
            "src": "570:455:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 162,
              "nodeType": "Block",
              "src": "1055:70:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 150,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1074:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 151,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1074:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 159,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 152,
                            "name": "clickRewards",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10,
                            "src": "1086:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 155,
                          "indexExpression": {
                            "expression": {
                              "id": 153,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "1099:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 154,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "1099:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1086:24:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "id": 158,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "3130",
                            "id": 156,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1113:2:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10_by_1",
                              "typeString": "int_const 10"
                            },
                            "value": "10"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "**",
                          "rightExpression": {
                            "hexValue": "3138",
                            "id": 157,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1117:2:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_18_by_1",
                              "typeString": "int_const 18"
                            },
                            "value": "18"
                          },
                          "src": "1113:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          }
                        },
                        "src": "1086:33:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 147,
                        "name": "amacoin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6,
                        "src": "1061:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Amacoin_$420",
                          "typeString": "contract Amacoin"
                        }
                      },
                      "id": 149,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 397,
                      "src": "1061:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 160,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1061:59:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 161,
                  "nodeType": "ExpressionStatement",
                  "src": "1061:59:0"
                }
              ]
            },
            "functionSelector": "7d55923d",
            "id": 163,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "click",
            "nameLocation": "1038:5:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 145,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1043:2:0"
            },
            "returnParameters": {
              "id": 146,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1055:0:0"
            },
            "scope": 321,
            "src": "1029:96:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 189,
              "nodeType": "Block",
              "src": "1161:139:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 174,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 170,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "1193:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 171,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "1193:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 168,
                              "name": "amacoin",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6,
                              "src": "1175:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Amacoin_$420",
                                "typeString": "contract Amacoin"
                              }
                            },
                            "id": 169,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 874,
                            "src": "1175:17:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 172,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1175:29:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 173,
                          "name": "cost",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 165,
                          "src": "1208:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1175:37:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420656e6f75676820616d61636f696e73",
                        "id": 175,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1214:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e789fa5da66c520babfe6647147fb3f2218ada4a0bc389f7b31e5ca1f5cdb6d0",
                          "typeString": "literal_string \"Not enough amacoins\""
                        },
                        "value": "Not enough amacoins"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e789fa5da66c520babfe6647147fb3f2218ada4a0bc389f7b31e5ca1f5cdb6d0",
                          "typeString": "literal_string \"Not enough amacoins\""
                        }
                      ],
                      "id": 167,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1167:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 176,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1167:69:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 177,
                  "nodeType": "ExpressionStatement",
                  "src": "1167:69:0"
                },
                {
                  "id": 178,
                  "nodeType": "PlaceholderStatement",
                  "src": "1242:1:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 182,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1270:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 183,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1270:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 184,
                        "name": "cost",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 165,
                        "src": "1282:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "",
                        "id": 185,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1288:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      },
                      {
                        "hexValue": "",
                        "id": 186,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1292:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "expression": {
                        "id": 179,
                        "name": "amacoin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6,
                        "src": "1249:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Amacoin_$420",
                          "typeString": "contract Amacoin"
                        }
                      },
                      "id": 181,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "operatorBurn",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1170,
                      "src": "1249:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256,bytes memory,bytes memory) external"
                      }
                    },
                    "id": 187,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1249:46:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 188,
                  "nodeType": "ExpressionStatement",
                  "src": "1249:46:0"
                }
              ]
            },
            "id": 190,
            "name": "purchase",
            "nameLocation": "1138:8:0",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 166,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 165,
                  "mutability": "mutable",
                  "name": "cost",
                  "nameLocation": "1155:4:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 190,
                  "src": "1147:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 164,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1147:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1146:14:0"
            },
            "src": "1129:171:0",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 225,
              "nodeType": "Block",
              "src": "1397:145:0",
              "statements": [
                {
                  "assignments": [
                    203
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 203,
                      "mutability": "mutable",
                      "name": "up",
                      "nameLocation": "1418:2:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 225,
                      "src": "1403:17:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_upgrade_$460_memory_ptr",
                        "typeString": "struct upgrade"
                      },
                      "typeName": {
                        "id": 202,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 201,
                          "name": "upgrade",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 460,
                          "src": "1403:7:0"
                        },
                        "referencedDeclaration": 460,
                        "src": "1403:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_upgrade_$460_storage_ptr",
                          "typeString": "struct upgrade"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 207,
                  "initialValue": {
                    "baseExpression": {
                      "id": 204,
                      "name": "upgradesInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30,
                      "src": "1423:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_upgrade_$460_storage_$dyn_storage",
                        "typeString": "struct upgrade storage ref[] storage ref"
                      }
                    },
                    "id": 206,
                    "indexExpression": {
                      "id": 205,
                      "name": "upgradeIndex",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 192,
                      "src": "1436:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1423:26:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_upgrade_$460_storage",
                      "typeString": "struct upgrade storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1403:46:0"
                },
                {
                  "expression": {
                    "id": 215,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 208,
                          "name": "upgrades",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15,
                          "src": "1456:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
                            "typeString": "mapping(address => uint256[] storage ref)"
                          }
                        },
                        "id": 212,
                        "indexExpression": {
                          "expression": {
                            "id": 209,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1465:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 210,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1465:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1456:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                          "typeString": "uint256[] storage ref"
                        }
                      },
                      "id": 213,
                      "indexExpression": {
                        "id": 211,
                        "name": "upgradeIndex",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 192,
                        "src": "1477:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1456:34:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 214,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1494:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "1456:39:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 216,
                  "nodeType": "ExpressionStatement",
                  "src": "1456:39:0"
                },
                {
                  "expression": {
                    "id": 223,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 217,
                        "name": "clickRewards",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10,
                        "src": "1501:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 220,
                      "indexExpression": {
                        "expression": {
                          "id": 218,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1514:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 219,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1514:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1501:24:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "expression": {
                        "id": 221,
                        "name": "up",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 203,
                        "src": "1529:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_upgrade_$460_memory_ptr",
                          "typeString": "struct upgrade memory"
                        }
                      },
                      "id": 222,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "boost",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 459,
                      "src": "1529:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1501:36:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 224,
                  "nodeType": "ExpressionStatement",
                  "src": "1501:36:0"
                }
              ]
            },
            "functionSelector": "a5a2cb19",
            "id": 226,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "expression": {
                      "baseExpression": {
                        "id": 195,
                        "name": "upgradesInfo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30,
                        "src": "1364:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_upgrade_$460_storage_$dyn_storage",
                          "typeString": "struct upgrade storage ref[] storage ref"
                        }
                      },
                      "id": 197,
                      "indexExpression": {
                        "id": 196,
                        "name": "upgradeIndex",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 192,
                        "src": "1377:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "1364:26:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_upgrade_$460_storage",
                        "typeString": "struct upgrade storage ref"
                      }
                    },
                    "id": 198,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "cost",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 457,
                    "src": "1364:31:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 199,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 194,
                  "name": "purchase",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 190,
                  "src": "1355:8:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "1355:41:0"
              }
            ],
            "name": "buyUpgrade",
            "nameLocation": "1313:10:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 193,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 192,
                  "mutability": "mutable",
                  "name": "upgradeIndex",
                  "nameLocation": "1332:12:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 226,
                  "src": "1324:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 191,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1324:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1323:22:0"
            },
            "returnParameters": {
              "id": 200,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1397:0:0"
            },
            "scope": 321,
            "src": "1304:238:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 254,
              "nodeType": "Block",
              "src": "1661:140:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 249,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 243,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967292,
                                "src": "1720:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 244,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "number",
                              "nodeType": "MemberAccess",
                              "src": "1720:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "expression": {
                                "baseExpression": {
                                  "id": 245,
                                  "name": "investmentsInfo",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 34,
                                  "src": "1735:15:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_investment_$467_storage_$dyn_storage",
                                    "typeString": "struct investment storage ref[] storage ref"
                                  }
                                },
                                "id": 247,
                                "indexExpression": {
                                  "id": 246,
                                  "name": "investmentIndex",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 228,
                                  "src": "1751:15:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "1735:32:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_investment_$467_storage",
                                  "typeString": "struct investment storage ref"
                                }
                              },
                              "id": 248,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "time",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 466,
                              "src": "1735:37:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "1720:52:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 250,
                            "name": "investmentIndex",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 228,
                            "src": "1774:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 242,
                          "name": "boughtInvestment",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 472,
                          "src": "1703:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_boughtInvestment_$472_storage_ptr_$",
                            "typeString": "type(struct boughtInvestment storage pointer)"
                          }
                        },
                        "id": 251,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1703:87:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_boughtInvestment_$472_memory_ptr",
                          "typeString": "struct boughtInvestment memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_boughtInvestment_$472_memory_ptr",
                          "typeString": "struct boughtInvestment memory"
                        }
                      ],
                      "expression": {
                        "baseExpression": {
                          "id": 237,
                          "name": "investments",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 21,
                          "src": "1667:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_boughtInvestment_$472_storage_$dyn_storage_$",
                            "typeString": "mapping(address => struct boughtInvestment storage ref[] storage ref)"
                          }
                        },
                        "id": 240,
                        "indexExpression": {
                          "expression": {
                            "id": 238,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1679:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 239,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1679:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1667:23:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_boughtInvestment_$472_storage_$dyn_storage",
                          "typeString": "struct boughtInvestment storage ref[] storage ref"
                        }
                      },
                      "id": 241,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "1667:28:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_boughtInvestment_$472_storage_$dyn_storage_ptr_$_t_struct$_boughtInvestment_$472_storage_$returns$__$bound_to$_t_array$_t_struct$_boughtInvestment_$472_storage_$dyn_storage_ptr_$",
                        "typeString": "function (struct boughtInvestment storage ref[] storage pointer,struct boughtInvestment storage ref)"
                      }
                    },
                    "id": 252,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1667:129:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 253,
                  "nodeType": "ExpressionStatement",
                  "src": "1667:129:0"
                }
              ]
            },
            "functionSelector": "57a1c389",
            "id": 255,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "expression": {
                      "baseExpression": {
                        "id": 231,
                        "name": "investmentsInfo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34,
                        "src": "1620:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_investment_$467_storage_$dyn_storage",
                          "typeString": "struct investment storage ref[] storage ref"
                        }
                      },
                      "id": 233,
                      "indexExpression": {
                        "id": 232,
                        "name": "investmentIndex",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 228,
                        "src": "1636:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "1620:32:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_investment_$467_storage",
                        "typeString": "struct investment storage ref"
                      }
                    },
                    "id": 234,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "cost",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 462,
                    "src": "1620:37:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 235,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 230,
                  "name": "purchase",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 190,
                  "src": "1611:8:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "1611:47:0"
              }
            ],
            "name": "buyInvestment",
            "nameLocation": "1555:13:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 229,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 228,
                  "mutability": "mutable",
                  "name": "investmentIndex",
                  "nameLocation": "1577:15:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 255,
                  "src": "1569:23:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 227,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1569:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1568:25:0"
            },
            "returnParameters": {
              "id": 236,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1661:0:0"
            },
            "scope": 321,
            "src": "1546:255:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 274,
              "nodeType": "Block",
              "src": "1877:44:0",
              "statements": [
                {
                  "expression": {
                    "id": 272,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 265,
                          "name": "skins",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 26,
                          "src": "1883:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_bool_$dyn_storage_$",
                            "typeString": "mapping(address => bool[] storage ref)"
                          }
                        },
                        "id": 269,
                        "indexExpression": {
                          "expression": {
                            "id": 266,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1889:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 267,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1889:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1883:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bool_$dyn_storage",
                          "typeString": "bool[] storage ref"
                        }
                      },
                      "id": 270,
                      "indexExpression": {
                        "id": 268,
                        "name": "skindex",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 257,
                        "src": "1901:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1883:26:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 271,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1912:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1883:33:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 273,
                  "nodeType": "ExpressionStatement",
                  "src": "1883:33:0"
                }
              ]
            },
            "functionSelector": "9d235de7",
            "id": 275,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "baseExpression": {
                      "id": 260,
                      "name": "skinsInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 49,
                      "src": "1857:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                        "typeString": "uint256[] storage ref"
                      }
                    },
                    "id": 262,
                    "indexExpression": {
                      "id": 261,
                      "name": "skindex",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 257,
                      "src": "1867:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1857:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 263,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 259,
                  "name": "purchase",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 190,
                  "src": "1848:8:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "1848:28:0"
              }
            ],
            "name": "buySkin",
            "nameLocation": "1814:7:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 258,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 257,
                  "mutability": "mutable",
                  "name": "skindex",
                  "nameLocation": "1830:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 275,
                  "src": "1822:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 256,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1822:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1821:17:0"
            },
            "returnParameters": {
              "id": 264,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1877:0:0"
            },
            "scope": 321,
            "src": "1805:116:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 319,
              "nodeType": "Block",
              "src": "1988:249:0",
              "statements": [
                {
                  "assignments": [
                    282
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 282,
                      "mutability": "mutable",
                      "name": "inv",
                      "nameLocation": "2018:3:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 319,
                      "src": "1994:27:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_boughtInvestment_$472_memory_ptr",
                        "typeString": "struct boughtInvestment"
                      },
                      "typeName": {
                        "id": 281,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 280,
                          "name": "boughtInvestment",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 472,
                          "src": "1994:16:0"
                        },
                        "referencedDeclaration": 472,
                        "src": "1994:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_boughtInvestment_$472_storage_ptr",
                          "typeString": "struct boughtInvestment"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 289,
                  "initialValue": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 283,
                        "name": "investments",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21,
                        "src": "2024:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_boughtInvestment_$472_storage_$dyn_storage_$",
                          "typeString": "mapping(address => struct boughtInvestment storage ref[] storage ref)"
                        }
                      },
                      "id": 286,
                      "indexExpression": {
                        "expression": {
                          "id": 284,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2036:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 285,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2036:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "2024:23:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_boughtInvestment_$472_storage_$dyn_storage",
                        "typeString": "struct boughtInvestment storage ref[] storage ref"
                      }
                    },
                    "id": 288,
                    "indexExpression": {
                      "id": 287,
                      "name": "index",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 277,
                      "src": "2048:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2024:30:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_boughtInvestment_$472_storage",
                      "typeString": "struct boughtInvestment storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1994:60:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 295,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 291,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967292,
                            "src": "2068:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 292,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "number",
                          "nodeType": "MemberAccess",
                          "src": "2068:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "expression": {
                            "id": 293,
                            "name": "inv",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 282,
                            "src": "2084:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_boughtInvestment_$472_memory_ptr",
                              "typeString": "struct boughtInvestment memory"
                            }
                          },
                          "id": 294,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "redeemBlock",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 469,
                          "src": "2084:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2068:31:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e766573746d656e74206e6f74206d617475726564",
                        "id": 296,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2101:24:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_09cf4c7ecd8bf22d3034c0b6865c6c197e12741e4aa02e3bcf0a28539a3fe580",
                          "typeString": "literal_string \"Investment not matured\""
                        },
                        "value": "Investment not matured"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_09cf4c7ecd8bf22d3034c0b6865c6c197e12741e4aa02e3bcf0a28539a3fe580",
                          "typeString": "literal_string \"Investment not matured\""
                        }
                      ],
                      "id": 290,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2060:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 297,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2060:66:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 298,
                  "nodeType": "ExpressionStatement",
                  "src": "2060:66:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 302,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2146:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 303,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2146:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 304,
                            "name": "investmentsInfo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34,
                            "src": "2158:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_investment_$467_storage_$dyn_storage",
                              "typeString": "struct investment storage ref[] storage ref"
                            }
                          },
                          "id": 307,
                          "indexExpression": {
                            "expression": {
                              "id": 305,
                              "name": "inv",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 282,
                              "src": "2174:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_boughtInvestment_$472_memory_ptr",
                                "typeString": "struct boughtInvestment memory"
                              }
                            },
                            "id": 306,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "id",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 471,
                            "src": "2174:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2158:23:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_investment_$467_storage",
                            "typeString": "struct investment storage ref"
                          }
                        },
                        "id": 308,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "reward",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 464,
                        "src": "2158:30:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 299,
                        "name": "amacoin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6,
                        "src": "2133:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Amacoin_$420",
                          "typeString": "contract Amacoin"
                        }
                      },
                      "id": 301,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 397,
                      "src": "2133:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 309,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2133:56:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 310,
                  "nodeType": "ExpressionStatement",
                  "src": "2133:56:0"
                },
                {
                  "expression": {
                    "id": 317,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "2195:37:0",
                    "subExpression": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 311,
                          "name": "investments",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 21,
                          "src": "2202:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_boughtInvestment_$472_storage_$dyn_storage_$",
                            "typeString": "mapping(address => struct boughtInvestment storage ref[] storage ref)"
                          }
                        },
                        "id": 314,
                        "indexExpression": {
                          "expression": {
                            "id": 312,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "2214:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 313,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2214:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2202:23:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_boughtInvestment_$472_storage_$dyn_storage",
                          "typeString": "struct boughtInvestment storage ref[] storage ref"
                        }
                      },
                      "id": 316,
                      "indexExpression": {
                        "id": 315,
                        "name": "index",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 277,
                        "src": "2226:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2202:30:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_boughtInvestment_$472_storage",
                        "typeString": "struct boughtInvestment storage ref"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 318,
                  "nodeType": "ExpressionStatement",
                  "src": "2195:37:0"
                }
              ]
            },
            "functionSelector": "db006a75",
            "id": 320,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "redeem",
            "nameLocation": "1957:6:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 278,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 277,
                  "mutability": "mutable",
                  "name": "index",
                  "nameLocation": "1972:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 320,
                  "src": "1964:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 276,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1964:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1963:15:0"
            },
            "returnParameters": {
              "id": 279,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1988:0:0"
            },
            "scope": 321,
            "src": "1948:289:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 322,
        "src": "119:2120:0"
      }
    ],
    "src": "45:2195:0"
  },
  "legacyAST": {
    "absolutePath": "/Users/kaikurosawa/Desktop/code/amaclicker/contracts/Amaclicker.sol",
    "exportedSymbols": {
      "Address": [
        2267
      ],
      "Amaclicker": [
        321
      ],
      "Amacoin": [
        420
      ],
      "Context": [
        2290
      ],
      "ERC777": [
        1772
      ],
      "IERC1820Registry": [
        2380
      ],
      "IERC20": [
        660
      ],
      "IERC777": [
        1931
      ],
      "IERC777Recipient": [
        1951
      ],
      "IERC777Sender": [
        1971
      ],
      "Ownable": [
        582
      ],
      "boughtInvestment": [
        472
      ],
      "investment": [
        467
      ],
      "upgrade": [
        460
      ]
    },
    "id": 322,
    "license": "GPL-3.0-or-later",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".3"
        ],
        "nodeType": "PragmaDirective",
        "src": "45:23:0"
      },
      {
        "absolutePath": "/Users/kaikurosawa/Desktop/code/amaclicker/contracts/Amacoin.sol",
        "file": "./Amacoin.sol",
        "id": 2,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 322,
        "sourceUnit": 421,
        "src": "70:23:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/kaikurosawa/Desktop/code/amaclicker/contracts/Structs.sol",
        "file": "./Structs.sol",
        "id": 3,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 322,
        "sourceUnit": 473,
        "src": "94:23:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [
          420
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 321,
        "linearizedBaseContracts": [
          321
        ],
        "name": "Amaclicker",
        "nameLocation": "128:10:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "31629f78",
            "id": 6,
            "mutability": "mutable",
            "name": "amacoin",
            "nameLocation": "158:7:0",
            "nodeType": "VariableDeclaration",
            "scope": 321,
            "src": "143:22:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Amacoin_$420",
              "typeString": "contract Amacoin"
            },
            "typeName": {
              "id": 5,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 4,
                "name": "Amacoin",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 420,
                "src": "143:7:0"
              },
              "referencedDeclaration": 420,
              "src": "143:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Amacoin_$420",
                "typeString": "contract Amacoin"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "7ab68263",
            "id": 10,
            "mutability": "mutable",
            "name": "clickRewards",
            "nameLocation": "220:12:0",
            "nodeType": "VariableDeclaration",
            "scope": 321,
            "src": "185:47:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 9,
              "keyType": {
                "id": 7,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "193:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "185:27:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 8,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "204:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "5d8e223c",
            "id": 15,
            "mutability": "mutable",
            "name": "upgrades",
            "nameLocation": "273:8:0",
            "nodeType": "VariableDeclaration",
            "scope": 321,
            "src": "236:45:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
              "typeString": "mapping(address => uint256[])"
            },
            "typeName": {
              "id": 14,
              "keyType": {
                "id": 11,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "244:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "236:29:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
                "typeString": "mapping(address => uint256[])"
              },
              "valueType": {
                "baseType": {
                  "id": 12,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "255:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "id": 13,
                "nodeType": "ArrayTypeName",
                "src": "255:9:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                  "typeString": "uint256[]"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "3e6d9770",
            "id": 21,
            "mutability": "mutable",
            "name": "investments",
            "nameLocation": "331:11:0",
            "nodeType": "VariableDeclaration",
            "scope": 321,
            "src": "285:57:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_boughtInvestment_$472_storage_$dyn_storage_$",
              "typeString": "mapping(address => struct boughtInvestment[])"
            },
            "typeName": {
              "id": 20,
              "keyType": {
                "id": 16,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "293:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "285:38:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_boughtInvestment_$472_storage_$dyn_storage_$",
                "typeString": "mapping(address => struct boughtInvestment[])"
              },
              "valueType": {
                "baseType": {
                  "id": 18,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 17,
                    "name": "boughtInvestment",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 472,
                    "src": "304:16:0"
                  },
                  "referencedDeclaration": 472,
                  "src": "304:16:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_boughtInvestment_$472_storage_ptr",
                    "typeString": "struct boughtInvestment"
                  }
                },
                "id": 19,
                "nodeType": "ArrayTypeName",
                "src": "304:18:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_struct$_boughtInvestment_$472_storage_$dyn_storage_ptr",
                  "typeString": "struct boughtInvestment[]"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "2b0f1221",
            "id": 26,
            "mutability": "mutable",
            "name": "skins",
            "nameLocation": "380:5:0",
            "nodeType": "VariableDeclaration",
            "scope": 321,
            "src": "346:39:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_bool_$dyn_storage_$",
              "typeString": "mapping(address => bool[])"
            },
            "typeName": {
              "id": 25,
              "keyType": {
                "id": 22,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "354:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "346:26:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_bool_$dyn_storage_$",
                "typeString": "mapping(address => bool[])"
              },
              "valueType": {
                "baseType": {
                  "id": 23,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "365:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "id": 24,
                "nodeType": "ArrayTypeName",
                "src": "365:6:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_bool_$dyn_storage_ptr",
                  "typeString": "bool[]"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "b6b7d933",
            "id": 30,
            "mutability": "mutable",
            "name": "upgradesInfo",
            "nameLocation": "447:12:0",
            "nodeType": "VariableDeclaration",
            "scope": 321,
            "src": "430:29:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_struct$_upgrade_$460_storage_$dyn_storage",
              "typeString": "struct upgrade[]"
            },
            "typeName": {
              "baseType": {
                "id": 28,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 27,
                  "name": "upgrade",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 460,
                  "src": "430:7:0"
                },
                "referencedDeclaration": 460,
                "src": "430:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_upgrade_$460_storage_ptr",
                  "typeString": "struct upgrade"
                }
              },
              "id": 29,
              "nodeType": "ArrayTypeName",
              "src": "430:9:0",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_upgrade_$460_storage_$dyn_storage_ptr",
                "typeString": "struct upgrade[]"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "3eedd49b",
            "id": 34,
            "mutability": "mutable",
            "name": "investmentsInfo",
            "nameLocation": "483:15:0",
            "nodeType": "VariableDeclaration",
            "scope": 321,
            "src": "463:35:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_struct$_investment_$467_storage_$dyn_storage",
              "typeString": "struct investment[]"
            },
            "typeName": {
              "baseType": {
                "id": 32,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 31,
                  "name": "investment",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 467,
                  "src": "463:10:0"
                },
                "referencedDeclaration": 467,
                "src": "463:10:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_investment_$467_storage_ptr",
                  "typeString": "struct investment"
                }
              },
              "id": 33,
              "nodeType": "ArrayTypeName",
              "src": "463:12:0",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_investment_$467_storage_$dyn_storage_ptr",
                "typeString": "struct investment[]"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "8a3e059a",
            "id": 49,
            "mutability": "mutable",
            "name": "skinsInfo",
            "nameLocation": "519:9:0",
            "nodeType": "VariableDeclaration",
            "scope": 321,
            "src": "502:63:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
              "typeString": "uint256[]"
            },
            "typeName": {
              "baseType": {
                "id": 35,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "502:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "id": 36,
              "nodeType": "ArrayTypeName",
              "src": "502:9:0",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                "typeString": "uint256[]"
              }
            },
            "value": {
              "components": [
                {
                  "hexValue": "30",
                  "id": 37,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "532:1:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_0_by_1",
                    "typeString": "int_const 0"
                  },
                  "value": "0"
                },
                {
                  "commonType": {
                    "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                    "typeString": "int_const 1000000000000000000000"
                  },
                  "id": 42,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "lValueRequested": false,
                  "leftExpression": {
                    "hexValue": "31303030",
                    "id": 38,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "535:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1000_by_1",
                      "typeString": "int_const 1000"
                    },
                    "value": "1000"
                  },
                  "nodeType": "BinaryOperation",
                  "operator": "*",
                  "rightExpression": {
                    "commonType": {
                      "typeIdentifier": "t_rational_1000000000000000000_by_1",
                      "typeString": "int_const 1000000000000000000"
                    },
                    "id": 41,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "leftExpression": {
                      "hexValue": "3130",
                      "id": 39,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "542:2:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_10_by_1",
                        "typeString": "int_const 10"
                      },
                      "value": "10"
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "**",
                    "rightExpression": {
                      "hexValue": "3138",
                      "id": 40,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "546:2:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_18_by_1",
                        "typeString": "int_const 18"
                      },
                      "value": "18"
                    },
                    "src": "542:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1000000000000000000_by_1",
                      "typeString": "int_const 1000000000000000000"
                    }
                  },
                  "src": "535:13:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                    "typeString": "int_const 1000000000000000000000"
                  }
                },
                {
                  "commonType": {
                    "typeIdentifier": "t_rational_10000000000000000000000_by_1",
                    "typeString": "int_const 10000000000000000000000"
                  },
                  "id": 47,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "lValueRequested": false,
                  "leftExpression": {
                    "hexValue": "3130303030",
                    "id": 43,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "550:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_10000_by_1",
                      "typeString": "int_const 10000"
                    },
                    "value": "10000"
                  },
                  "nodeType": "BinaryOperation",
                  "operator": "*",
                  "rightExpression": {
                    "commonType": {
                      "typeIdentifier": "t_rational_1000000000000000000_by_1",
                      "typeString": "int_const 1000000000000000000"
                    },
                    "id": 46,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "leftExpression": {
                      "hexValue": "3130",
                      "id": 44,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "558:2:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_10_by_1",
                        "typeString": "int_const 10"
                      },
                      "value": "10"
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "**",
                    "rightExpression": {
                      "hexValue": "3138",
                      "id": 45,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "562:2:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_18_by_1",
                        "typeString": "int_const 18"
                      },
                      "value": "18"
                    },
                    "src": "558:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1000000000000000000_by_1",
                      "typeString": "int_const 1000000000000000000"
                    }
                  },
                  "src": "550:14:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_10000000000000000000000_by_1",
                    "typeString": "int_const 10000000000000000000000"
                  }
                }
              ],
              "id": 48,
              "isConstant": false,
              "isInlineArray": true,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "nodeType": "TupleExpression",
              "src": "531:34:0",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_uint80_$3_memory_ptr",
                "typeString": "uint80[3] memory"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 143,
              "nodeType": "Block",
              "src": "601:424:0",
              "statements": [
                {
                  "assignments": [
                    59
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 59,
                      "mutability": "mutable",
                      "name": "defaultOperators",
                      "nameLocation": "624:16:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 143,
                      "src": "607:33:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 57,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "607:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 58,
                        "nodeType": "ArrayTypeName",
                        "src": "607:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 65,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 63,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "657:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 62,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "643:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (address[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 60,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "647:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 61,
                        "nodeType": "ArrayTypeName",
                        "src": "647:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      }
                    },
                    "id": 64,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "643:16:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                      "typeString": "address[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "607:52:0"
                },
                {
                  "expression": {
                    "id": 73,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 66,
                        "name": "defaultOperators",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59,
                        "src": "665:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 68,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 67,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "682:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "665:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 71,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967268,
                          "src": "695:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Amaclicker_$321",
                            "typeString": "contract Amaclicker"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_Amaclicker_$321",
                            "typeString": "contract Amaclicker"
                          }
                        ],
                        "id": 70,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "687:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 69,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "687:7:0",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 72,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "687:13:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "665:35:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 74,
                  "nodeType": "ExpressionStatement",
                  "src": "665:35:0"
                },
                {
                  "expression": {
                    "id": 82,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 75,
                      "name": "amacoin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6,
                      "src": "706:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Amacoin_$420",
                        "typeString": "contract Amacoin"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 79,
                          "name": "defaultOperators",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 59,
                          "src": "728:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        },
                        {
                          "id": 80,
                          "name": "cheemscoin",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 52,
                          "src": "746:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$660",
                            "typeString": "contract IERC20"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          },
                          {
                            "typeIdentifier": "t_contract$_IERC20_$660",
                            "typeString": "contract IERC20"
                          }
                        ],
                        "id": 78,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "716:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_array$_t_address_$dyn_memory_ptr_$_t_contract$_IERC20_$660_$returns$_t_contract$_Amacoin_$420_$",
                          "typeString": "function (address[] memory,contract IERC20) returns (contract Amacoin)"
                        },
                        "typeName": {
                          "id": 77,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 76,
                            "name": "Amacoin",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 420,
                            "src": "720:7:0"
                          },
                          "referencedDeclaration": 420,
                          "src": "720:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Amacoin_$420",
                            "typeString": "contract Amacoin"
                          }
                        }
                      },
                      "id": 81,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "716:41:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Amacoin_$420",
                        "typeString": "contract Amacoin"
                      }
                    },
                    "src": "706:51:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Amacoin_$420",
                      "typeString": "contract Amacoin"
                    }
                  },
                  "id": 83,
                  "nodeType": "ExpressionStatement",
                  "src": "706:51:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 87,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "789:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 88,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "789:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 84,
                        "name": "amacoin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6,
                        "src": "763:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Amacoin_$420",
                          "typeString": "contract Amacoin"
                        }
                      },
                      "id": 86,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferOwnership",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 581,
                      "src": "763:25:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 89,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "763:37:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 90,
                  "nodeType": "ExpressionStatement",
                  "src": "763:37:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_rational_19990000000000000000_by_1",
                              "typeString": "int_const 19990000000000000000"
                            },
                            "id": 99,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "leftExpression": {
                              "hexValue": "31392e3939",
                              "id": 95,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "862:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1999_by_100",
                                "typeString": "rational_const 1999 / 100"
                              },
                              "value": "19.99"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "commonType": {
                                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                "typeString": "int_const 1000000000000000000"
                              },
                              "id": 98,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "leftExpression": {
                                "hexValue": "3130",
                                "id": 96,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "870:2:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_10_by_1",
                                  "typeString": "int_const 10"
                                },
                                "value": "10"
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "**",
                              "rightExpression": {
                                "hexValue": "3138",
                                "id": 97,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "874:2:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_18_by_1",
                                  "typeString": "int_const 18"
                                },
                                "value": "18"
                              },
                              "src": "870:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                "typeString": "int_const 1000000000000000000"
                              }
                            },
                            "src": "862:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_19990000000000000000_by_1",
                              "typeString": "int_const 19990000000000000000"
                            }
                          },
                          {
                            "commonType": {
                              "typeIdentifier": "t_rational_100000000000000000_by_1",
                              "typeString": "int_const 100000000000000000"
                            },
                            "id": 104,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "leftExpression": {
                              "hexValue": "302e31",
                              "id": 100,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "878:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_10",
                                "typeString": "rational_const 1 / 10"
                              },
                              "value": "0.1"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "commonType": {
                                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                "typeString": "int_const 1000000000000000000"
                              },
                              "id": 103,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "leftExpression": {
                                "hexValue": "3130",
                                "id": 101,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "884:2:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_10_by_1",
                                  "typeString": "int_const 10"
                                },
                                "value": "10"
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "**",
                              "rightExpression": {
                                "hexValue": "3138",
                                "id": 102,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "888:2:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_18_by_1",
                                  "typeString": "int_const 18"
                                },
                                "value": "18"
                              },
                              "src": "884:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                "typeString": "int_const 1000000000000000000"
                              }
                            },
                            "src": "878:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_100000000000000000_by_1",
                              "typeString": "int_const 100000000000000000"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_19990000000000000000_by_1",
                              "typeString": "int_const 19990000000000000000"
                            },
                            {
                              "typeIdentifier": "t_rational_100000000000000000_by_1",
                              "typeString": "int_const 100000000000000000"
                            }
                          ],
                          "id": 94,
                          "name": "upgrade",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 460,
                          "src": "854:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_upgrade_$460_storage_ptr_$",
                            "typeString": "type(struct upgrade storage pointer)"
                          }
                        },
                        "id": 105,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "854:37:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_upgrade_$460_memory_ptr",
                          "typeString": "struct upgrade memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_upgrade_$460_memory_ptr",
                          "typeString": "struct upgrade memory"
                        }
                      ],
                      "expression": {
                        "id": 91,
                        "name": "upgradesInfo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30,
                        "src": "836:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_upgrade_$460_storage_$dyn_storage",
                          "typeString": "struct upgrade storage ref[] storage ref"
                        }
                      },
                      "id": 93,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "836:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_upgrade_$460_storage_$dyn_storage_ptr_$_t_struct$_upgrade_$460_storage_$returns$__$bound_to$_t_array$_t_struct$_upgrade_$460_storage_$dyn_storage_ptr_$",
                        "typeString": "function (struct upgrade storage ref[] storage pointer,struct upgrade storage ref)"
                      }
                    },
                    "id": 106,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "836:56:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 107,
                  "nodeType": "ExpressionStatement",
                  "src": "836:56:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000000"
                            },
                            "id": 116,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "leftExpression": {
                              "hexValue": "31303030",
                              "id": 112,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "924:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1000_by_1",
                                "typeString": "int_const 1000"
                              },
                              "value": "1000"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "commonType": {
                                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                "typeString": "int_const 1000000000000000000"
                              },
                              "id": 115,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "leftExpression": {
                                "hexValue": "3130",
                                "id": 113,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "931:2:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_10_by_1",
                                  "typeString": "int_const 10"
                                },
                                "value": "10"
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "**",
                              "rightExpression": {
                                "hexValue": "3138",
                                "id": 114,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "935:2:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_18_by_1",
                                  "typeString": "int_const 18"
                                },
                                "value": "18"
                              },
                              "src": "931:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                "typeString": "int_const 1000000000000000000"
                              }
                            },
                            "src": "924:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000000"
                            }
                          },
                          {
                            "commonType": {
                              "typeIdentifier": "t_rational_10000000000000000000_by_1",
                              "typeString": "int_const 10000000000000000000"
                            },
                            "id": 121,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "leftExpression": {
                              "hexValue": "3130",
                              "id": 117,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "939:2:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_10_by_1",
                                "typeString": "int_const 10"
                              },
                              "value": "10"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "commonType": {
                                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                "typeString": "int_const 1000000000000000000"
                              },
                              "id": 120,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "leftExpression": {
                                "hexValue": "3130",
                                "id": 118,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "944:2:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_10_by_1",
                                  "typeString": "int_const 10"
                                },
                                "value": "10"
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "**",
                              "rightExpression": {
                                "hexValue": "3138",
                                "id": 119,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "948:2:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_18_by_1",
                                  "typeString": "int_const 18"
                                },
                                "value": "18"
                              },
                              "src": "944:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                "typeString": "int_const 1000000000000000000"
                              }
                            },
                            "src": "939:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10000000000000000000_by_1",
                              "typeString": "int_const 10000000000000000000"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000000"
                            },
                            {
                              "typeIdentifier": "t_rational_10000000000000000000_by_1",
                              "typeString": "int_const 10000000000000000000"
                            }
                          ],
                          "id": 111,
                          "name": "upgrade",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 460,
                          "src": "916:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_upgrade_$460_storage_ptr_$",
                            "typeString": "type(struct upgrade storage pointer)"
                          }
                        },
                        "id": 122,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "916:35:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_upgrade_$460_memory_ptr",
                          "typeString": "struct upgrade memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_upgrade_$460_memory_ptr",
                          "typeString": "struct upgrade memory"
                        }
                      ],
                      "expression": {
                        "id": 108,
                        "name": "upgradesInfo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30,
                        "src": "898:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_upgrade_$460_storage_$dyn_storage",
                          "typeString": "struct upgrade storage ref[] storage ref"
                        }
                      },
                      "id": 110,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "898:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_upgrade_$460_storage_$dyn_storage_ptr_$_t_struct$_upgrade_$460_storage_$returns$__$bound_to$_t_array$_t_struct$_upgrade_$460_storage_$dyn_storage_ptr_$",
                        "typeString": "function (struct upgrade storage ref[] storage pointer,struct upgrade storage ref)"
                      }
                    },
                    "id": 123,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "898:54:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 124,
                  "nodeType": "ExpressionStatement",
                  "src": "898:54:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_rational_10000000000000000000_by_1",
                              "typeString": "int_const 10000000000000000000"
                            },
                            "id": 133,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "leftExpression": {
                              "hexValue": "3130",
                              "id": 129,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "990:2:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_10_by_1",
                                "typeString": "int_const 10"
                              },
                              "value": "10"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "commonType": {
                                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                "typeString": "int_const 1000000000000000000"
                              },
                              "id": 132,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "leftExpression": {
                                "hexValue": "3130",
                                "id": 130,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "995:2:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_10_by_1",
                                  "typeString": "int_const 10"
                                },
                                "value": "10"
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "**",
                              "rightExpression": {
                                "hexValue": "3138",
                                "id": 131,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "999:2:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_18_by_1",
                                  "typeString": "int_const 18"
                                },
                                "value": "18"
                              },
                              "src": "995:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                "typeString": "int_const 1000000000000000000"
                              }
                            },
                            "src": "990:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10000000000000000000_by_1",
                              "typeString": "int_const 10000000000000000000"
                            }
                          },
                          {
                            "commonType": {
                              "typeIdentifier": "t_rational_40000000000000000000_by_1",
                              "typeString": "int_const 40000000000000000000"
                            },
                            "id": 138,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "leftExpression": {
                              "hexValue": "3430",
                              "id": 134,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1003:2:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_40_by_1",
                                "typeString": "int_const 40"
                              },
                              "value": "40"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "commonType": {
                                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                "typeString": "int_const 1000000000000000000"
                              },
                              "id": 137,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "leftExpression": {
                                "hexValue": "3130",
                                "id": 135,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1008:2:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_10_by_1",
                                  "typeString": "int_const 10"
                                },
                                "value": "10"
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "**",
                              "rightExpression": {
                                "hexValue": "3138",
                                "id": 136,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1012:2:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_18_by_1",
                                  "typeString": "int_const 18"
                                },
                                "value": "18"
                              },
                              "src": "1008:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                "typeString": "int_const 1000000000000000000"
                              }
                            },
                            "src": "1003:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_40000000000000000000_by_1",
                              "typeString": "int_const 40000000000000000000"
                            }
                          },
                          {
                            "hexValue": "3732",
                            "id": 139,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1016:2:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_72_by_1",
                              "typeString": "int_const 72"
                            },
                            "value": "72"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_10000000000000000000_by_1",
                              "typeString": "int_const 10000000000000000000"
                            },
                            {
                              "typeIdentifier": "t_rational_40000000000000000000_by_1",
                              "typeString": "int_const 40000000000000000000"
                            },
                            {
                              "typeIdentifier": "t_rational_72_by_1",
                              "typeString": "int_const 72"
                            }
                          ],
                          "id": 128,
                          "name": "investment",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 467,
                          "src": "979:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_investment_$467_storage_ptr_$",
                            "typeString": "type(struct investment storage pointer)"
                          }
                        },
                        "id": 140,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "979:40:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_investment_$467_memory_ptr",
                          "typeString": "struct investment memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_investment_$467_memory_ptr",
                          "typeString": "struct investment memory"
                        }
                      ],
                      "expression": {
                        "id": 125,
                        "name": "investmentsInfo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34,
                        "src": "958:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_investment_$467_storage_$dyn_storage",
                          "typeString": "struct investment storage ref[] storage ref"
                        }
                      },
                      "id": 127,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "958:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_investment_$467_storage_$dyn_storage_ptr_$_t_struct$_investment_$467_storage_$returns$__$bound_to$_t_array$_t_struct$_investment_$467_storage_$dyn_storage_ptr_$",
                        "typeString": "function (struct investment storage ref[] storage pointer,struct investment storage ref)"
                      }
                    },
                    "id": 141,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "958:62:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 142,
                  "nodeType": "ExpressionStatement",
                  "src": "958:62:0"
                }
              ]
            },
            "id": 144,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 53,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 52,
                  "mutability": "mutable",
                  "name": "cheemscoin",
                  "nameLocation": "589:10:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 144,
                  "src": "582:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$660",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 51,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 50,
                      "name": "IERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 660,
                      "src": "582:6:0"
                    },
                    "referencedDeclaration": 660,
                    "src": "582:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$660",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "581:19:0"
            },
            "returnParameters": {
              "id": 54,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "601:0:0"
            },
            "scope": 321,
            "src": "570:455:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 162,
              "nodeType": "Block",
              "src": "1055:70:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 150,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1074:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 151,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1074:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 159,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 152,
                            "name": "clickRewards",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10,
                            "src": "1086:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 155,
                          "indexExpression": {
                            "expression": {
                              "id": 153,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "1099:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 154,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "1099:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1086:24:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "id": 158,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "3130",
                            "id": 156,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1113:2:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10_by_1",
                              "typeString": "int_const 10"
                            },
                            "value": "10"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "**",
                          "rightExpression": {
                            "hexValue": "3138",
                            "id": 157,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1117:2:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_18_by_1",
                              "typeString": "int_const 18"
                            },
                            "value": "18"
                          },
                          "src": "1113:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          }
                        },
                        "src": "1086:33:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 147,
                        "name": "amacoin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6,
                        "src": "1061:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Amacoin_$420",
                          "typeString": "contract Amacoin"
                        }
                      },
                      "id": 149,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 397,
                      "src": "1061:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 160,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1061:59:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 161,
                  "nodeType": "ExpressionStatement",
                  "src": "1061:59:0"
                }
              ]
            },
            "functionSelector": "7d55923d",
            "id": 163,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "click",
            "nameLocation": "1038:5:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 145,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1043:2:0"
            },
            "returnParameters": {
              "id": 146,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1055:0:0"
            },
            "scope": 321,
            "src": "1029:96:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 189,
              "nodeType": "Block",
              "src": "1161:139:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 174,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 170,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "1193:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 171,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "1193:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 168,
                              "name": "amacoin",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6,
                              "src": "1175:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Amacoin_$420",
                                "typeString": "contract Amacoin"
                              }
                            },
                            "id": 169,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 874,
                            "src": "1175:17:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 172,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1175:29:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 173,
                          "name": "cost",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 165,
                          "src": "1208:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1175:37:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420656e6f75676820616d61636f696e73",
                        "id": 175,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1214:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e789fa5da66c520babfe6647147fb3f2218ada4a0bc389f7b31e5ca1f5cdb6d0",
                          "typeString": "literal_string \"Not enough amacoins\""
                        },
                        "value": "Not enough amacoins"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e789fa5da66c520babfe6647147fb3f2218ada4a0bc389f7b31e5ca1f5cdb6d0",
                          "typeString": "literal_string \"Not enough amacoins\""
                        }
                      ],
                      "id": 167,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1167:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 176,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1167:69:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 177,
                  "nodeType": "ExpressionStatement",
                  "src": "1167:69:0"
                },
                {
                  "id": 178,
                  "nodeType": "PlaceholderStatement",
                  "src": "1242:1:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 182,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1270:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 183,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1270:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 184,
                        "name": "cost",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 165,
                        "src": "1282:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "",
                        "id": 185,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1288:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      },
                      {
                        "hexValue": "",
                        "id": 186,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1292:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "expression": {
                        "id": 179,
                        "name": "amacoin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6,
                        "src": "1249:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Amacoin_$420",
                          "typeString": "contract Amacoin"
                        }
                      },
                      "id": 181,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "operatorBurn",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1170,
                      "src": "1249:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256,bytes memory,bytes memory) external"
                      }
                    },
                    "id": 187,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1249:46:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 188,
                  "nodeType": "ExpressionStatement",
                  "src": "1249:46:0"
                }
              ]
            },
            "id": 190,
            "name": "purchase",
            "nameLocation": "1138:8:0",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 166,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 165,
                  "mutability": "mutable",
                  "name": "cost",
                  "nameLocation": "1155:4:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 190,
                  "src": "1147:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 164,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1147:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1146:14:0"
            },
            "src": "1129:171:0",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 225,
              "nodeType": "Block",
              "src": "1397:145:0",
              "statements": [
                {
                  "assignments": [
                    203
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 203,
                      "mutability": "mutable",
                      "name": "up",
                      "nameLocation": "1418:2:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 225,
                      "src": "1403:17:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_upgrade_$460_memory_ptr",
                        "typeString": "struct upgrade"
                      },
                      "typeName": {
                        "id": 202,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 201,
                          "name": "upgrade",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 460,
                          "src": "1403:7:0"
                        },
                        "referencedDeclaration": 460,
                        "src": "1403:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_upgrade_$460_storage_ptr",
                          "typeString": "struct upgrade"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 207,
                  "initialValue": {
                    "baseExpression": {
                      "id": 204,
                      "name": "upgradesInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30,
                      "src": "1423:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_upgrade_$460_storage_$dyn_storage",
                        "typeString": "struct upgrade storage ref[] storage ref"
                      }
                    },
                    "id": 206,
                    "indexExpression": {
                      "id": 205,
                      "name": "upgradeIndex",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 192,
                      "src": "1436:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1423:26:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_upgrade_$460_storage",
                      "typeString": "struct upgrade storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1403:46:0"
                },
                {
                  "expression": {
                    "id": 215,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 208,
                          "name": "upgrades",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15,
                          "src": "1456:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
                            "typeString": "mapping(address => uint256[] storage ref)"
                          }
                        },
                        "id": 212,
                        "indexExpression": {
                          "expression": {
                            "id": 209,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1465:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 210,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1465:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1456:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                          "typeString": "uint256[] storage ref"
                        }
                      },
                      "id": 213,
                      "indexExpression": {
                        "id": 211,
                        "name": "upgradeIndex",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 192,
                        "src": "1477:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1456:34:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 214,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1494:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "1456:39:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 216,
                  "nodeType": "ExpressionStatement",
                  "src": "1456:39:0"
                },
                {
                  "expression": {
                    "id": 223,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 217,
                        "name": "clickRewards",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10,
                        "src": "1501:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 220,
                      "indexExpression": {
                        "expression": {
                          "id": 218,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1514:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 219,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1514:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1501:24:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "expression": {
                        "id": 221,
                        "name": "up",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 203,
                        "src": "1529:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_upgrade_$460_memory_ptr",
                          "typeString": "struct upgrade memory"
                        }
                      },
                      "id": 222,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "boost",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 459,
                      "src": "1529:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1501:36:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 224,
                  "nodeType": "ExpressionStatement",
                  "src": "1501:36:0"
                }
              ]
            },
            "functionSelector": "a5a2cb19",
            "id": 226,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "expression": {
                      "baseExpression": {
                        "id": 195,
                        "name": "upgradesInfo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30,
                        "src": "1364:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_upgrade_$460_storage_$dyn_storage",
                          "typeString": "struct upgrade storage ref[] storage ref"
                        }
                      },
                      "id": 197,
                      "indexExpression": {
                        "id": 196,
                        "name": "upgradeIndex",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 192,
                        "src": "1377:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "1364:26:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_upgrade_$460_storage",
                        "typeString": "struct upgrade storage ref"
                      }
                    },
                    "id": 198,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "cost",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 457,
                    "src": "1364:31:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 199,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 194,
                  "name": "purchase",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 190,
                  "src": "1355:8:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "1355:41:0"
              }
            ],
            "name": "buyUpgrade",
            "nameLocation": "1313:10:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 193,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 192,
                  "mutability": "mutable",
                  "name": "upgradeIndex",
                  "nameLocation": "1332:12:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 226,
                  "src": "1324:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 191,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1324:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1323:22:0"
            },
            "returnParameters": {
              "id": 200,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1397:0:0"
            },
            "scope": 321,
            "src": "1304:238:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 254,
              "nodeType": "Block",
              "src": "1661:140:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 249,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 243,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967292,
                                "src": "1720:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 244,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "number",
                              "nodeType": "MemberAccess",
                              "src": "1720:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "expression": {
                                "baseExpression": {
                                  "id": 245,
                                  "name": "investmentsInfo",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 34,
                                  "src": "1735:15:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_investment_$467_storage_$dyn_storage",
                                    "typeString": "struct investment storage ref[] storage ref"
                                  }
                                },
                                "id": 247,
                                "indexExpression": {
                                  "id": 246,
                                  "name": "investmentIndex",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 228,
                                  "src": "1751:15:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "1735:32:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_investment_$467_storage",
                                  "typeString": "struct investment storage ref"
                                }
                              },
                              "id": 248,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "time",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 466,
                              "src": "1735:37:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "1720:52:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 250,
                            "name": "investmentIndex",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 228,
                            "src": "1774:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 242,
                          "name": "boughtInvestment",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 472,
                          "src": "1703:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_boughtInvestment_$472_storage_ptr_$",
                            "typeString": "type(struct boughtInvestment storage pointer)"
                          }
                        },
                        "id": 251,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1703:87:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_boughtInvestment_$472_memory_ptr",
                          "typeString": "struct boughtInvestment memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_boughtInvestment_$472_memory_ptr",
                          "typeString": "struct boughtInvestment memory"
                        }
                      ],
                      "expression": {
                        "baseExpression": {
                          "id": 237,
                          "name": "investments",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 21,
                          "src": "1667:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_boughtInvestment_$472_storage_$dyn_storage_$",
                            "typeString": "mapping(address => struct boughtInvestment storage ref[] storage ref)"
                          }
                        },
                        "id": 240,
                        "indexExpression": {
                          "expression": {
                            "id": 238,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1679:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 239,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1679:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1667:23:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_boughtInvestment_$472_storage_$dyn_storage",
                          "typeString": "struct boughtInvestment storage ref[] storage ref"
                        }
                      },
                      "id": 241,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "1667:28:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_boughtInvestment_$472_storage_$dyn_storage_ptr_$_t_struct$_boughtInvestment_$472_storage_$returns$__$bound_to$_t_array$_t_struct$_boughtInvestment_$472_storage_$dyn_storage_ptr_$",
                        "typeString": "function (struct boughtInvestment storage ref[] storage pointer,struct boughtInvestment storage ref)"
                      }
                    },
                    "id": 252,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1667:129:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 253,
                  "nodeType": "ExpressionStatement",
                  "src": "1667:129:0"
                }
              ]
            },
            "functionSelector": "57a1c389",
            "id": 255,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "expression": {
                      "baseExpression": {
                        "id": 231,
                        "name": "investmentsInfo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34,
                        "src": "1620:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_investment_$467_storage_$dyn_storage",
                          "typeString": "struct investment storage ref[] storage ref"
                        }
                      },
                      "id": 233,
                      "indexExpression": {
                        "id": 232,
                        "name": "investmentIndex",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 228,
                        "src": "1636:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "1620:32:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_investment_$467_storage",
                        "typeString": "struct investment storage ref"
                      }
                    },
                    "id": 234,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "cost",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 462,
                    "src": "1620:37:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 235,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 230,
                  "name": "purchase",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 190,
                  "src": "1611:8:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "1611:47:0"
              }
            ],
            "name": "buyInvestment",
            "nameLocation": "1555:13:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 229,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 228,
                  "mutability": "mutable",
                  "name": "investmentIndex",
                  "nameLocation": "1577:15:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 255,
                  "src": "1569:23:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 227,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1569:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1568:25:0"
            },
            "returnParameters": {
              "id": 236,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1661:0:0"
            },
            "scope": 321,
            "src": "1546:255:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 274,
              "nodeType": "Block",
              "src": "1877:44:0",
              "statements": [
                {
                  "expression": {
                    "id": 272,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 265,
                          "name": "skins",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 26,
                          "src": "1883:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_bool_$dyn_storage_$",
                            "typeString": "mapping(address => bool[] storage ref)"
                          }
                        },
                        "id": 269,
                        "indexExpression": {
                          "expression": {
                            "id": 266,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1889:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 267,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1889:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1883:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bool_$dyn_storage",
                          "typeString": "bool[] storage ref"
                        }
                      },
                      "id": 270,
                      "indexExpression": {
                        "id": 268,
                        "name": "skindex",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 257,
                        "src": "1901:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1883:26:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 271,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1912:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1883:33:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 273,
                  "nodeType": "ExpressionStatement",
                  "src": "1883:33:0"
                }
              ]
            },
            "functionSelector": "9d235de7",
            "id": 275,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "baseExpression": {
                      "id": 260,
                      "name": "skinsInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 49,
                      "src": "1857:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                        "typeString": "uint256[] storage ref"
                      }
                    },
                    "id": 262,
                    "indexExpression": {
                      "id": 261,
                      "name": "skindex",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 257,
                      "src": "1867:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1857:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 263,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 259,
                  "name": "purchase",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 190,
                  "src": "1848:8:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "1848:28:0"
              }
            ],
            "name": "buySkin",
            "nameLocation": "1814:7:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 258,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 257,
                  "mutability": "mutable",
                  "name": "skindex",
                  "nameLocation": "1830:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 275,
                  "src": "1822:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 256,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1822:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1821:17:0"
            },
            "returnParameters": {
              "id": 264,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1877:0:0"
            },
            "scope": 321,
            "src": "1805:116:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 319,
              "nodeType": "Block",
              "src": "1988:249:0",
              "statements": [
                {
                  "assignments": [
                    282
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 282,
                      "mutability": "mutable",
                      "name": "inv",
                      "nameLocation": "2018:3:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 319,
                      "src": "1994:27:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_boughtInvestment_$472_memory_ptr",
                        "typeString": "struct boughtInvestment"
                      },
                      "typeName": {
                        "id": 281,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 280,
                          "name": "boughtInvestment",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 472,
                          "src": "1994:16:0"
                        },
                        "referencedDeclaration": 472,
                        "src": "1994:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_boughtInvestment_$472_storage_ptr",
                          "typeString": "struct boughtInvestment"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 289,
                  "initialValue": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 283,
                        "name": "investments",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21,
                        "src": "2024:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_boughtInvestment_$472_storage_$dyn_storage_$",
                          "typeString": "mapping(address => struct boughtInvestment storage ref[] storage ref)"
                        }
                      },
                      "id": 286,
                      "indexExpression": {
                        "expression": {
                          "id": 284,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2036:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 285,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2036:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "2024:23:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_boughtInvestment_$472_storage_$dyn_storage",
                        "typeString": "struct boughtInvestment storage ref[] storage ref"
                      }
                    },
                    "id": 288,
                    "indexExpression": {
                      "id": 287,
                      "name": "index",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 277,
                      "src": "2048:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2024:30:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_boughtInvestment_$472_storage",
                      "typeString": "struct boughtInvestment storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1994:60:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 295,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 291,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967292,
                            "src": "2068:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 292,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "number",
                          "nodeType": "MemberAccess",
                          "src": "2068:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "expression": {
                            "id": 293,
                            "name": "inv",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 282,
                            "src": "2084:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_boughtInvestment_$472_memory_ptr",
                              "typeString": "struct boughtInvestment memory"
                            }
                          },
                          "id": 294,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "redeemBlock",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 469,
                          "src": "2084:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2068:31:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e766573746d656e74206e6f74206d617475726564",
                        "id": 296,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2101:24:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_09cf4c7ecd8bf22d3034c0b6865c6c197e12741e4aa02e3bcf0a28539a3fe580",
                          "typeString": "literal_string \"Investment not matured\""
                        },
                        "value": "Investment not matured"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_09cf4c7ecd8bf22d3034c0b6865c6c197e12741e4aa02e3bcf0a28539a3fe580",
                          "typeString": "literal_string \"Investment not matured\""
                        }
                      ],
                      "id": 290,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2060:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 297,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2060:66:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 298,
                  "nodeType": "ExpressionStatement",
                  "src": "2060:66:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 302,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2146:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 303,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2146:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 304,
                            "name": "investmentsInfo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34,
                            "src": "2158:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_investment_$467_storage_$dyn_storage",
                              "typeString": "struct investment storage ref[] storage ref"
                            }
                          },
                          "id": 307,
                          "indexExpression": {
                            "expression": {
                              "id": 305,
                              "name": "inv",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 282,
                              "src": "2174:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_boughtInvestment_$472_memory_ptr",
                                "typeString": "struct boughtInvestment memory"
                              }
                            },
                            "id": 306,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "id",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 471,
                            "src": "2174:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2158:23:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_investment_$467_storage",
                            "typeString": "struct investment storage ref"
                          }
                        },
                        "id": 308,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "reward",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 464,
                        "src": "2158:30:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 299,
                        "name": "amacoin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6,
                        "src": "2133:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Amacoin_$420",
                          "typeString": "contract Amacoin"
                        }
                      },
                      "id": 301,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 397,
                      "src": "2133:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 309,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2133:56:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 310,
                  "nodeType": "ExpressionStatement",
                  "src": "2133:56:0"
                },
                {
                  "expression": {
                    "id": 317,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "2195:37:0",
                    "subExpression": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 311,
                          "name": "investments",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 21,
                          "src": "2202:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_boughtInvestment_$472_storage_$dyn_storage_$",
                            "typeString": "mapping(address => struct boughtInvestment storage ref[] storage ref)"
                          }
                        },
                        "id": 314,
                        "indexExpression": {
                          "expression": {
                            "id": 312,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "2214:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 313,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2214:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2202:23:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_boughtInvestment_$472_storage_$dyn_storage",
                          "typeString": "struct boughtInvestment storage ref[] storage ref"
                        }
                      },
                      "id": 316,
                      "indexExpression": {
                        "id": 315,
                        "name": "index",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 277,
                        "src": "2226:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2202:30:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_boughtInvestment_$472_storage",
                        "typeString": "struct boughtInvestment storage ref"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 318,
                  "nodeType": "ExpressionStatement",
                  "src": "2195:37:0"
                }
              ]
            },
            "functionSelector": "db006a75",
            "id": 320,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "redeem",
            "nameLocation": "1957:6:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 278,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 277,
                  "mutability": "mutable",
                  "name": "index",
                  "nameLocation": "1972:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 320,
                  "src": "1964:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 276,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1964:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1963:15:0"
            },
            "returnParameters": {
              "id": 279,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1988:0:0"
            },
            "scope": 321,
            "src": "1948:289:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 322,
        "src": "119:2120:0"
      }
    ],
    "src": "45:2195:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.3+commit.8d00100c.Emscripten.clang"
  },
  "networks": {
    "100": {
      "events": {},
      "links": {},
      "address": "0x18D9b6a9797D728989547F9d7d82250e4A830cA8",
      "transactionHash": "0x55d6bfe0e841215c35e5caec2d6e3c4ed8a4c9cf28e59a87e649897e5afbbe18"
    },
    "5777": {
      "events": {},
      "links": {},
      "address": "0x043F27D3925C79D3BE87B6a316fe82d53d2Eb0E9",
      "transactionHash": "0xadecd99759c5f6ff6fc49dbf78558b541fca3dc04ed2d1e23ec2dd79bfd45299"
    }
  },
  "schemaVersion": "3.3.3",
  "updatedAt": "2021-04-03T04:56:00.380Z",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}