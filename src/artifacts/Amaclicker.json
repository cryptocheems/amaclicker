{
  "contractName": "Amaclicker",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "cheemscoin",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "amacoin",
      "outputs": [
        {
          "internalType": "contract Amacoin",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "clickRewards",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "investmentsInfo",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "cost",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "reward",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "time",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "skinsInfo",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "upgradesInfo",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "cost",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "boost",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "click",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "upgradeIndex",
          "type": "uint256"
        }
      ],
      "name": "buyUpgrade",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "investmentIndex",
          "type": "uint256"
        }
      ],
      "name": "buyInvestment",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "skindex",
          "type": "uint256"
        }
      ],
      "name": "buySkin",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "redeem",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.3+commit.8d00100c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"cheemscoin\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"amacoin\",\"outputs\":[{\"internalType\":\"contract Amacoin\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"investmentIndex\",\"type\":\"uint256\"}],\"name\":\"buyInvestment\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"skindex\",\"type\":\"uint256\"}],\"name\":\"buySkin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"upgradeIndex\",\"type\":\"uint256\"}],\"name\":\"buyUpgrade\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"click\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"clickRewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"investmentsInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"cost\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"redeem\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"skinsInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"upgradesInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"cost\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"boost\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/kaikurosawa/Desktop/code/amaclicker/contracts/Amaclicker.sol\":\"Amaclicker\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/kaikurosawa/Desktop/code/amaclicker/contracts/Amaclicker.sol\":{\"keccak256\":\"0xdbe054bd59ccd4506daa5406a0fb218ba53dc200cf439880f53936e15455911c\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://e50a859d7c518bf0857ac0f33dd0c5e3464da2adf6499fbe12b25631e5d3b20c\",\"dweb:/ipfs/QmZwoMZbN18Vshrp5qfTPoYayrKZBSnonGyBKCcaRgBYu6\"]},\"/Users/kaikurosawa/Desktop/code/amaclicker/contracts/Amacoin.sol\":{\"keccak256\":\"0x9a3b1226e00859283776b1c24d9df8c6d1e6cf2d6750d3ebe6431801666b66ce\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://b2381275627b0d4af4aa813cc03c95ca00a530e6e0dab0cb4040fad47a54b22a\",\"dweb:/ipfs/QmUsyRSieBAwt7HwDyTmrBWLzCpPd137qjaYjtrqQda7Uz\"]},\"/Users/kaikurosawa/Desktop/code/amaclicker/contracts/Structs.sol\":{\"keccak256\":\"0xc00af344b9776a878e2fb5eb57127dac6fc110c38c490167d6d1419906bdcd39\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://538a30bfba13824604f95a137d2c169378a6a78b35362dd3097b4346cd842c70\",\"dweb:/ipfs/QmXJaM11Bx1ERSX1ka1ZsCWxuRppseUDmbuYiCmV5Zcz5P\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x1cae4f85f114ff17b90414f5da67365b1d00337abb5bce9bf944eb78a2c0673c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d5ff16b336ce8f906478d5f2eecc6435e00833bdc0b92f6b209cf9e92cb5b2b7\",\"dweb:/ipfs/QmRD1rAZEqQ73C33cdA3QoUyBDMEWnNKNMc6PNkAZWHeQQ\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xf8e8d118a7a8b2e134181f7da655f6266aa3a0f9134b2605747139fcb0c5d835\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9ec48567e7ad06acb670980d5cdf3fd7f3949bf12894f02d68c3bb43e75aa84f\",\"dweb:/ipfs/QmaG3R2J9cz92YT77vFjYrjMNU2wHp4ypwYD62HqDUqS5U\"]},\"@openzeppelin/contracts/token/ERC777/ERC777.sol\":{\"keccak256\":\"0xe4cdf1840b9130627d6db46d4544aa9dbd1e500255d0b46394e43d2ea18fd7fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9a422348fcf511266a8aa961f58475984ee41ee647ab4d82364c88b70fdb56c7\",\"dweb:/ipfs/Qmb4fm75Jmef8C8FRD2uCBhSGprbrXqHvFKdXYcJxBZeGE\"]},\"@openzeppelin/contracts/token/ERC777/IERC777.sol\":{\"keccak256\":\"0x180af7df8832ffcba53dae0c5450b062d2c571a8eaec22619fcaef5758503d7d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6232d44d9a11c9764c655bb481213a0a92afd27f6b5a1083343d512f04063735\",\"dweb:/ipfs/QmSfSAzCgcMMaXVc7EnoC98opUjizqx6svmJNotiBWaGbc\"]},\"@openzeppelin/contracts/token/ERC777/IERC777Recipient.sol\":{\"keccak256\":\"0x0fd59f83d16f090c27a8105db0f4ad05b0f5d127f9878b82ebf0ad2bbc4e3f03\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b0f20fa38853a7b046933b0c905b6e021b081712032ee395c3ecca01998047ff\",\"dweb:/ipfs/QmRDRgthGgc9XTfQKKN29KZF8BYanfcE5XP9cvAdh1E146\"]},\"@openzeppelin/contracts/token/ERC777/IERC777Sender.sol\":{\"keccak256\":\"0x54230ad917ef5075db47e57ac43655f1197ac913686d5ced13062c2da0cce857\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e198d3b0abb92a8ac98583349c07a653714a581dbd587f17ea7bff17b460e09\",\"dweb:/ipfs/QmR1TtTSFZkTAH6QdXj4eFCtfMnThmBKhroDqsWtzU65SJ\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x069b2631bb5b5193a58ccf7a06266c7361bd2c20095667af4402817605627f45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a4c96fafff76deda5697c3c5c98cade6e6e1b178254544c106bf360c079ce4e\",\"dweb:/ipfs/QmXmxubE3jnatFgZuN8ay1VV6hZ8WRmhvUjNpeVjki15HX\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xf930d2df426bfcfc1f7415be724f04081c96f4fb9ec8d0e3a521c07692dface0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc2bfdea0d2562c76fb3c4cf70a86c6ba25c5a30e8f8515c95aafdf8383f8395\",\"dweb:/ipfs/QmTbFya18786ckJfLYUoWau9jBTKfmWnWm5XSViWvB7PXN\"]},\"@openzeppelin/contracts/utils/introspection/IERC1820Registry.sol\":{\"keccak256\":\"0x49f0bb79f8a5c60b2a8779d0b501f16bd3110814b9e72498caad3bc339e33def\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fd70c7bf78e7ae03e35553620057e2c719e50f91b6bb657927c0544e76b37ff8\",\"dweb:/ipfs/QmYPvnkh3VqU3zgMNnoSVuUZjwmd7QrmjjoDc5QA5UPx16\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061009e5760003560e01c80638a3e059a116100665780638a3e059a146101495780639d235de714610179578063a5a2cb1914610195578063b6b7d933146101b1578063db006a75146101e25761009e565b806331629f78146100a35780633eedd49b146100c157806357a1c389146100f35780637ab682631461010f5780637d55923d1461013f575b600080fd5b6100ab6101fe565b6040516100b89190611032565b60405180910390f35b6100db60048036038101906100d69190610eb7565b610222565b6040516100ea939291906110d1565b60405180910390f35b61010d60048036038101906101089190610eb7565b61025c565b005b61012960048036038101906101249190610e8e565b61050d565b604051610136919061108d565b60405180910390f35b610147610525565b005b610163600480360381019061015e9190610eb7565b610606565b604051610170919061108d565b60405180910390f35b610193600480360381019061018e9190610eb7565b61062a565b005b6101af60048036038101906101aa9190610eb7565b61088d565b005b6101cb60048036038101906101c69190610eb7565b610bb4565b6040516101d99291906110a8565b60405180910390f35b6101fc60048036038101906101f79190610eb7565b610be8565b005b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6006818154811061023257600080fd5b90600052602060002090600302016000915090508060000154908060010154908060020154905083565b60068181548110610296577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000209060030201600001548060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b81526004016103029190610f9f565b60206040518083038186803b15801561031a57600080fd5b505afa15801561032e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103529190610ee0565b1015610393576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161038a9061106d565b60405180910390fd5b600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020604051806040016040528060068581548110610417577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002090600302016002015443610434919061112a565b81526020018481525090806001815401808255809150506001900390600052602060002090600202016000909190919091506000820151816000015560208201518160010155505060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663fc673c4f33836040518363ffffffff1660e01b81526004016104d7929190610fe3565b600060405180830381600087803b1580156104f157600080fd5b505af1158015610505573d6000803e3d6000fd5b505050505050565b60016020528060005260406000206000915090505481565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166340c10f1933670de0b6b3a7640000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546105b5919061112a565b6040518363ffffffff1660e01b81526004016105d2929190610fba565b600060405180830381600087803b1580156105ec57600080fd5b505af1158015610600573d6000803e3d6000fd5b50505050565b6007818154811061061657600080fd5b906000526020600020016000915090505481565b60078181548110610664577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002001548060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b81526004016106c99190610f9f565b60206040518083038186803b1580156106e157600080fd5b505afa1580156106f5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107199190610ee0565b101561075a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107519061106d565b60405180910390fd5b6001600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002083815481106107d3577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002090602091828204019190066101000a81548160ff02191690831515021790555060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663fc673c4f33836040518363ffffffff1660e01b8152600401610857929190610fe3565b600060405180830381600087803b15801561087157600080fd5b505af1158015610885573d6000803e3d6000fd5b505050505050565b600581815481106108c7577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000209060020201600001548060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b81526004016109339190610f9f565b60206040518083038186803b15801561094b57600080fd5b505afa15801561095f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109839190610ee0565b10156109c4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109bb9061106d565b60405180910390fd5b600060058381548110610a00577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002090600202016040518060400160405290816000820154815260200160018201548152505090506001600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208481548110610aa8577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b906000526020600020016000828254610ac1919061112a565b925050819055508060200151600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610b1b919061112a565b925050819055505060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663fc673c4f33836040518363ffffffff1660e01b8152600401610b7e929190610fe3565b600060405180830381600087803b158015610b9857600080fd5b505af1158015610bac573d6000803e3d6000fd5b505050505050565b60058181548110610bc457600080fd5b90600052602060002090600202016000915090508060000154908060010154905082565b6000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208281548110610c61577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002090600202016040518060400160405290816000820154815260200160018201548152505090508060000151431015610cd7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cce9061104d565b60405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166340c10f19336006846020015181548110610d52577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000209060030201600101546040518363ffffffff1660e01b8152600401610d81929190610fba565b600060405180830381600087803b158015610d9b57600080fd5b505af1158015610daf573d6000803e3d6000fd5b50505050600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208281548110610e2a577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000209060020201600080820160009055600182016000905550505050565b600081359050610e5e81611264565b92915050565b600081359050610e738161127b565b92915050565b600081519050610e888161127b565b92915050565b600060208284031215610ea057600080fd5b6000610eae84828501610e4f565b91505092915050565b600060208284031215610ec957600080fd5b6000610ed784828501610e64565b91505092915050565b600060208284031215610ef257600080fd5b6000610f0084828501610e79565b91505092915050565b610f1281611180565b82525050565b610f21816111bc565b82525050565b6000610f34601683611119565b9150610f3f8261120f565b602082019050919050565b6000610f57600083611108565b9150610f6282611238565b600082019050919050565b6000610f7a601383611119565b9150610f858261123b565b602082019050919050565b610f99816111b2565b82525050565b6000602082019050610fb46000830184610f09565b92915050565b6000604082019050610fcf6000830185610f09565b610fdc6020830184610f90565b9392505050565b6000608082019050610ff86000830185610f09565b6110056020830184610f90565b818103604083015261101681610f4a565b9050818103606083015261102981610f4a565b90509392505050565b60006020820190506110476000830184610f18565b92915050565b6000602082019050818103600083015261106681610f27565b9050919050565b6000602082019050818103600083015261108681610f6d565b9050919050565b60006020820190506110a26000830184610f90565b92915050565b60006040820190506110bd6000830185610f90565b6110ca6020830184610f90565b9392505050565b60006060820190506110e66000830186610f90565b6110f36020830185610f90565b6111006040830184610f90565b949350505050565b600082825260208201905092915050565b600082825260208201905092915050565b6000611135826111b2565b9150611140836111b2565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611175576111746111e0565b5b828201905092915050565b600061118b82611192565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006111c7826111ce565b9050919050565b60006111d982611192565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f496e766573746d656e74206e6f74206d61747572656400000000000000000000600082015250565b50565b7f4e6f7420656e6f75676820616d61636f696e7300000000000000000000000000600082015250565b61126d81611180565b811461127857600080fd5b50565b611284816111b2565b811461128f57600080fd5b5056fea2646970667358221220dd8c49ac08ba982789cf33a849041de959efe6d040a493cac0eff613c3ff3d7264736f6c63430008030033",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:4572:13",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "84:94:13",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "94:22:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "109:6:13"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "103:5:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "103:13:13"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "94:5:13"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "166:5:13"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_contract$_IERC20_$656",
                      "nodeType": "YulIdentifier",
                      "src": "125:40:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "125:47:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "125:47:13"
                }
              ]
            },
            "name": "abi_decode_t_contract$_IERC20_$656_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "62:6:13",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "70:3:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "78:5:13",
                "type": ""
              }
            ],
            "src": "7:171:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "275:221:13",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "321:16:13",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "330:1:13",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "333:1:13",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "323:6:13"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "323:12:13"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "323:12:13"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "296:7:13"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "305:9:13"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "292:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "292:23:13"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "317:2:13",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "288:3:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "288:32:13"
                  },
                  "nodeType": "YulIf",
                  "src": "285:2:13"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "347:142:13",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "362:15:13",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "376:1:13",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "366:6:13",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "391:88:13",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "451:9:13"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "462:6:13"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "447:3:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "447:22:13"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "471:7:13"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_contract$_IERC20_$656_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "401:45:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "401:78:13"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "391:6:13"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_contract$_IERC20_$656_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "245:9:13",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "256:7:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "268:6:13",
                "type": ""
              }
            ],
            "src": "184:312:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "582:99:13",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "626:6:13"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "634:3:13"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "592:33:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "592:46:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "592:46:13"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "647:28:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "665:3:13"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "670:4:13",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "661:3:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "661:14:13"
                  },
                  "variableNames": [
                    {
                      "name": "updatedPos",
                      "nodeType": "YulIdentifier",
                      "src": "647:10:13"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encodeUpdatedPos_t_address_to_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "555:6:13",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "563:3:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updatedPos",
                "nodeType": "YulTypedName",
                "src": "571:10:13",
                "type": ""
              }
            ],
            "src": "502:179:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "742:53:13",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "759:3:13"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "782:5:13"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "764:17:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "764:24:13"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "752:6:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "752:37:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "752:37:13"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "730:5:13",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "737:3:13",
                "type": ""
              }
            ],
            "src": "687:108:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "866:53:13",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "883:3:13"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "906:5:13"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "888:17:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "888:24:13"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "876:6:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "876:37:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "876:37:13"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "854:5:13",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "861:3:13",
                "type": ""
              }
            ],
            "src": "801:118:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1076:630:13",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1086:65:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1145:5:13"
                      }
                    ],
                    "functionName": {
                      "name": "array_length_t_array$_t_address_$dyn_storage",
                      "nodeType": "YulIdentifier",
                      "src": "1100:44:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1100:51:13"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "1090:6:13",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1160:93:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1241:3:13"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "1246:6:13"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1167:73:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1167:86:13"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "1160:3:13"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1262:68:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1324:5:13"
                      }
                    ],
                    "functionName": {
                      "name": "array_dataslot_t_array$_t_address_$dyn_storage",
                      "nodeType": "YulIdentifier",
                      "src": "1277:46:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1277:53:13"
                  },
                  "variables": [
                    {
                      "name": "baseRef",
                      "nodeType": "YulTypedName",
                      "src": "1266:7:13",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1339:21:13",
                  "value": {
                    "name": "baseRef",
                    "nodeType": "YulIdentifier",
                    "src": "1353:7:13"
                  },
                  "variables": [
                    {
                      "name": "srcPtr",
                      "nodeType": "YulTypedName",
                      "src": "1343:6:13",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1429:252:13",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "1443:65:13",
                        "value": {
                          "arguments": [
                            {
                              "name": "srcPtr",
                              "nodeType": "YulIdentifier",
                              "src": "1501:6:13"
                            }
                          ],
                          "functionName": {
                            "name": "read_from_storage_offset_0_t_address",
                            "nodeType": "YulIdentifier",
                            "src": "1464:36:13"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1464:44:13"
                        },
                        "variables": [
                          {
                            "name": "elementValue0",
                            "nodeType": "YulTypedName",
                            "src": "1447:13:13",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "1521:70:13",
                        "value": {
                          "arguments": [
                            {
                              "name": "elementValue0",
                              "nodeType": "YulIdentifier",
                              "src": "1572:13:13"
                            },
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "1587:3:13"
                            }
                          ],
                          "functionName": {
                            "name": "abi_encodeUpdatedPos_t_address_to_t_address",
                            "nodeType": "YulIdentifier",
                            "src": "1528:43:13"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1528:63:13"
                        },
                        "variableNames": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "1521:3:13"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "1604:67:13",
                        "value": {
                          "arguments": [
                            {
                              "name": "srcPtr",
                              "nodeType": "YulIdentifier",
                              "src": "1664:6:13"
                            }
                          ],
                          "functionName": {
                            "name": "array_nextElement_t_array$_t_address_$dyn_storage",
                            "nodeType": "YulIdentifier",
                            "src": "1614:49:13"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1614:57:13"
                        },
                        "variableNames": [
                          {
                            "name": "srcPtr",
                            "nodeType": "YulIdentifier",
                            "src": "1604:6:13"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "1391:1:13"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "1394:6:13"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "1388:2:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1388:13:13"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "1402:18:13",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "1404:14:13",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "1413:1:13"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1416:1:13",
                              "type": "",
                              "value": "1"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "1409:3:13"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1409:9:13"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "1404:1:13"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "1373:14:13",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "1375:10:13",
                        "value": {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "1384:1:13",
                          "type": "",
                          "value": "0"
                        },
                        "variables": [
                          {
                            "name": "i",
                            "nodeType": "YulTypedName",
                            "src": "1379:1:13",
                            "type": ""
                          }
                        ]
                      }
                    ]
                  },
                  "src": "1369:312:13"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1690:10:13",
                  "value": {
                    "name": "pos",
                    "nodeType": "YulIdentifier",
                    "src": "1697:3:13"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "1690:3:13"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_array$_t_address_$dyn_storage_to_t_array$_t_address_$dyn_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1055:5:13",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1062:3:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "1071:3:13",
                "type": ""
              }
            ],
            "src": "955:751:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1791:80:13",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1808:3:13"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1858:5:13"
                          }
                        ],
                        "functionName": {
                          "name": "convert_t_contract$_IERC20_$656_to_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "1813:44:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1813:51:13"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1801:6:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1801:64:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1801:64:13"
                }
              ]
            },
            "name": "abi_encode_t_contract$_IERC20_$656_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1779:5:13",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1786:3:13",
                "type": ""
              }
            ],
            "src": "1712:159:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1975:124:13",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1985:26:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1997:9:13"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2008:2:13",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1993:3:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1993:18:13"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1985:4:13"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "2065:6:13"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2078:9:13"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2089:1:13",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2074:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2074:17:13"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2021:43:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2021:71:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2021:71:13"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1947:9:13",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1959:6:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1970:4:13",
                "type": ""
              }
            ],
            "src": "1877:222:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2292:318:13",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2302:26:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2314:9:13"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2325:2:13",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2310:3:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2310:18:13"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2302:4:13"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2349:9:13"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2360:1:13",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2345:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2345:17:13"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "2368:4:13"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2374:9:13"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2364:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2364:20:13"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2338:6:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2338:47:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2338:47:13"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2394:113:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "2493:6:13"
                      },
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "2502:4:13"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_array$_t_address_$dyn_storage_to_t_array$_t_address_$dyn_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2402:90:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2402:105:13"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2394:4:13"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "2575:6:13"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2588:9:13"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2599:2:13",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2584:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2584:18:13"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_contract$_IERC20_$656_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2517:57:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2517:86:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2517:86:13"
                }
              ]
            },
            "name": "abi_encode_tuple_t_array$_t_address_$dyn_storage_t_contract$_IERC20_$656__to_t_array$_t_address_$dyn_memory_ptr_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2256:9:13",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2268:6:13",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2276:6:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2287:4:13",
                "type": ""
              }
            ],
            "src": "2105:505:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2685:87:13",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2695:11:13",
                  "value": {
                    "name": "ptr",
                    "nodeType": "YulIdentifier",
                    "src": "2703:3:13"
                  },
                  "variableNames": [
                    {
                      "name": "data",
                      "nodeType": "YulIdentifier",
                      "src": "2695:4:13"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2723:1:13",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "name": "ptr",
                        "nodeType": "YulIdentifier",
                        "src": "2726:3:13"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2716:6:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2716:14:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2716:14:13"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2739:26:13",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2757:1:13",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2760:4:13",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "keccak256",
                      "nodeType": "YulIdentifier",
                      "src": "2747:9:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2747:18:13"
                  },
                  "variableNames": [
                    {
                      "name": "data",
                      "nodeType": "YulIdentifier",
                      "src": "2739:4:13"
                    }
                  ]
                }
              ]
            },
            "name": "array_dataslot_t_array$_t_address_$dyn_storage",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "ptr",
                "nodeType": "YulTypedName",
                "src": "2672:3:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "data",
                "nodeType": "YulTypedName",
                "src": "2680:4:13",
                "type": ""
              }
            ],
            "src": "2616:156:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2849:40:13",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2860:22:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2876:5:13"
                      }
                    ],
                    "functionName": {
                      "name": "sload",
                      "nodeType": "YulIdentifier",
                      "src": "2870:5:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2870:12:13"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "2860:6:13"
                    }
                  ]
                }
              ]
            },
            "name": "array_length_t_array$_t_address_$dyn_storage",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2832:5:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "2842:6:13",
                "type": ""
              }
            ],
            "src": "2778:111:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2967:38:13",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2977:22:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "ptr",
                        "nodeType": "YulIdentifier",
                        "src": "2989:3:13"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2994:4:13",
                        "type": "",
                        "value": "0x01"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2985:3:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2985:14:13"
                  },
                  "variableNames": [
                    {
                      "name": "next",
                      "nodeType": "YulIdentifier",
                      "src": "2977:4:13"
                    }
                  ]
                }
              ]
            },
            "name": "array_nextElement_t_array$_t_address_$dyn_storage",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "ptr",
                "nodeType": "YulTypedName",
                "src": "2954:3:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "next",
                "nodeType": "YulTypedName",
                "src": "2962:4:13",
                "type": ""
              }
            ],
            "src": "2895:110:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3122:73:13",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3139:3:13"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "3144:6:13"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3132:6:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3132:19:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3132:19:13"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3160:29:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3179:3:13"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3184:4:13",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3175:3:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3175:14:13"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "3160:11:13"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3094:3:13",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "3099:6:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "3110:11:13",
                "type": ""
              }
            ],
            "src": "3011:184:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3259:81:13",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3269:65:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "3284:5:13"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3291:42:13",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "3280:3:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3280:54:13"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "3269:7:13"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_from_storage_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3241:5:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "3251:7:13",
                "type": ""
              }
            ],
            "src": "3201:139:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3391:51:13",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3401:35:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "3430:5:13"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "3412:17:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3412:24:13"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "3401:7:13"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3373:5:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "3383:7:13",
                "type": ""
              }
            ],
            "src": "3346:96:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3507:51:13",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3517:35:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "3546:5:13"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "3528:17:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3528:24:13"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "3517:7:13"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_contract$_IERC20_$656",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3489:5:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "3499:7:13",
                "type": ""
              }
            ],
            "src": "3448:110:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3609:81:13",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3619:65:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "3634:5:13"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3641:42:13",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "3630:3:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3630:54:13"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "3619:7:13"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3591:5:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "3601:7:13",
                "type": ""
              }
            ],
            "src": "3564:126:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3770:80:13",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3780:64:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "3838:5:13"
                      }
                    ],
                    "functionName": {
                      "name": "convert_t_contract$_IERC20_$656_to_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "3793:44:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3793:51:13"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "3780:9:13"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_contract$_IERC20_$656_to_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3750:5:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "3760:9:13",
                "type": ""
              }
            ],
            "src": "3696:154:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3930:53:13",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3940:37:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "3971:5:13"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "3953:17:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3953:24:13"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "3940:9:13"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_contract$_IERC20_$656_to_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3910:5:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "3920:9:13",
                "type": ""
              }
            ],
            "src": "3856:127:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4064:91:13",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4074:75:13",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "slot_value",
                            "nodeType": "YulIdentifier",
                            "src": "4137:10:13"
                          }
                        ],
                        "functionName": {
                          "name": "shift_right_0_unsigned",
                          "nodeType": "YulIdentifier",
                          "src": "4114:22:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4114:34:13"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_from_storage_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "4083:30:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4083:66:13"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "4074:5:13"
                    }
                  ]
                }
              ]
            },
            "name": "extract_from_storage_value_offset_0t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "slot_value",
                "nodeType": "YulTypedName",
                "src": "4043:10:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "4058:5:13",
                "type": ""
              }
            ],
            "src": "3989:166:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4222:83:13",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4232:66:13",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "slot",
                            "nodeType": "YulIdentifier",
                            "src": "4292:4:13"
                          }
                        ],
                        "functionName": {
                          "name": "sload",
                          "nodeType": "YulIdentifier",
                          "src": "4286:5:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4286:11:13"
                      }
                    ],
                    "functionName": {
                      "name": "extract_from_storage_value_offset_0t_address",
                      "nodeType": "YulIdentifier",
                      "src": "4241:44:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4241:57:13"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "4232:5:13"
                    }
                  ]
                }
              ]
            },
            "name": "read_from_storage_offset_0_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "slot",
                "nodeType": "YulTypedName",
                "src": "4207:4:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "4216:5:13",
                "type": ""
              }
            ],
            "src": "4161:144:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4362:51:13",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4372:34:13",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4397:1:13",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "4400:5:13"
                      }
                    ],
                    "functionName": {
                      "name": "shr",
                      "nodeType": "YulIdentifier",
                      "src": "4393:3:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4393:13:13"
                  },
                  "variableNames": [
                    {
                      "name": "newValue",
                      "nodeType": "YulIdentifier",
                      "src": "4372:8:13"
                    }
                  ]
                }
              ]
            },
            "name": "shift_right_0_unsigned",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "4343:5:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "newValue",
                "nodeType": "YulTypedName",
                "src": "4353:8:13",
                "type": ""
              }
            ],
            "src": "4311:102:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4476:93:13",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4547:16:13",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4556:1:13",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4559:1:13",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4549:6:13"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4549:12:13"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4549:12:13"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "4499:5:13"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "4538:5:13"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_contract$_IERC20_$656",
                              "nodeType": "YulIdentifier",
                              "src": "4506:31:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4506:38:13"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "4496:2:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4496:49:13"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "4489:6:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4489:57:13"
                  },
                  "nodeType": "YulIf",
                  "src": "4486:2:13"
                }
              ]
            },
            "name": "validator_revert_t_contract$_IERC20_$656",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "4469:5:13",
                "type": ""
              }
            ],
            "src": "4419:150:13"
          }
        ]
      },
      "contents": "{\n\n    function abi_decode_t_contract$_IERC20_$656_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_contract$_IERC20_$656(value)\n    }\n\n    function abi_decode_tuple_t_contract$_IERC20_$656_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_IERC20_$656_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encodeUpdatedPos_t_address_to_t_address(value0, pos) -> updatedPos {\n        abi_encode_t_address_to_t_address(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_address_to_t_address(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    // address[] -> address[]\n    function abi_encode_t_array$_t_address_$dyn_storage_to_t_array$_t_address_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_address_$dyn_storage(value)\n        pos := array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_address_$dyn_storage(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := read_from_storage_offset_0_t_address(srcPtr)\n            pos := abi_encodeUpdatedPos_t_address_to_t_address(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_address_$dyn_storage(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_t_contract$_IERC20_$656_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$656_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_array$_t_address_$dyn_storage_t_contract$_IERC20_$656__to_t_array$_t_address_$dyn_memory_ptr_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_address_$dyn_storage_to_t_array$_t_address_$dyn_memory_ptr_fromStack(value0,  tail)\n\n        abi_encode_t_contract$_IERC20_$656_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function array_dataslot_t_array$_t_address_$dyn_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function array_length_t_array$_t_address_$dyn_storage(value) -> length {\n\n        length := sload(value)\n\n    }\n\n    function array_nextElement_t_array$_t_address_$dyn_storage(ptr) -> next {\n        next := add(ptr, 0x01)\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function cleanup_from_storage_t_address(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_contract$_IERC20_$656(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function convert_t_contract$_IERC20_$656_to_t_address(value) -> converted {\n        converted := convert_t_contract$_IERC20_$656_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IERC20_$656_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(value)\n    }\n\n    function extract_from_storage_value_offset_0t_address(slot_value) -> value {\n        value := cleanup_from_storage_t_address(shift_right_0_unsigned(slot_value))\n    }\n\n    function read_from_storage_offset_0_t_address(slot) -> value {\n        value := extract_from_storage_value_offset_0t_address(sload(slot))\n\n    }\n\n    function shift_right_0_unsigned(value) -> newValue {\n        newValue :=\n\n        shr(0, value)\n\n    }\n\n    function validator_revert_t_contract$_IERC20_$656(value) {\n        if iszero(eq(value, cleanup_t_contract$_IERC20_$656(value))) { revert(0, 0) }\n    }\n\n}\n",
      "id": 13,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:8621:13",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "59:87:13",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "69:29:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "91:6:13"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "78:12:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "78:20:13"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "69:5:13"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "134:5:13"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "107:26:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "107:33:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "107:33:13"
                }
              ]
            },
            "name": "abi_decode_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "37:6:13",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "45:3:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "53:5:13",
                "type": ""
              }
            ],
            "src": "7:139:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "204:87:13",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "214:29:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "236:6:13"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "223:12:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "223:20:13"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "214:5:13"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "279:5:13"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "252:26:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "252:33:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "252:33:13"
                }
              ]
            },
            "name": "abi_decode_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "182:6:13",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "190:3:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "198:5:13",
                "type": ""
              }
            ],
            "src": "152:139:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "360:80:13",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "370:22:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "385:6:13"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "379:5:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "379:13:13"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "370:5:13"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "428:5:13"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "401:26:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "401:33:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "401:33:13"
                }
              ]
            },
            "name": "abi_decode_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "338:6:13",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "346:3:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "354:5:13",
                "type": ""
              }
            ],
            "src": "297:143:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "512:196:13",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "558:16:13",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "567:1:13",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "570:1:13",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "560:6:13"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "560:12:13"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "560:12:13"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "533:7:13"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "542:9:13"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "529:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "529:23:13"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "554:2:13",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "525:3:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "525:32:13"
                  },
                  "nodeType": "YulIf",
                  "src": "522:2:13"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "584:117:13",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "599:15:13",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "613:1:13",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "603:6:13",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "628:63:13",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "663:9:13"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "674:6:13"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "659:3:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "659:22:13"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "683:7:13"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "638:20:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "638:53:13"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "628:6:13"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "482:9:13",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "493:7:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "505:6:13",
                "type": ""
              }
            ],
            "src": "446:262:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "780:196:13",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "826:16:13",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "835:1:13",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "838:1:13",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "828:6:13"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "828:12:13"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "828:12:13"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "801:7:13"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "810:9:13"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "797:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "797:23:13"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "822:2:13",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "793:3:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "793:32:13"
                  },
                  "nodeType": "YulIf",
                  "src": "790:2:13"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "852:117:13",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "867:15:13",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "881:1:13",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "871:6:13",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "896:63:13",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "931:9:13"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "942:6:13"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "927:3:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "927:22:13"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "951:7:13"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "906:20:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "906:53:13"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "896:6:13"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "750:9:13",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "761:7:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "773:6:13",
                "type": ""
              }
            ],
            "src": "714:262:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1059:207:13",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1105:16:13",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1114:1:13",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1117:1:13",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1107:6:13"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1107:12:13"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1107:12:13"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1080:7:13"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1089:9:13"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1076:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1076:23:13"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1101:2:13",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1072:3:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1072:32:13"
                  },
                  "nodeType": "YulIf",
                  "src": "1069:2:13"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1131:128:13",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1146:15:13",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1160:1:13",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1150:6:13",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1175:74:13",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1221:9:13"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1232:6:13"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1217:3:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1217:22:13"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1241:7:13"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "1185:31:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1185:64:13"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1175:6:13"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1029:9:13",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1040:7:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1052:6:13",
                "type": ""
              }
            ],
            "src": "982:284:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1337:53:13",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1354:3:13"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1377:5:13"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "1359:17:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1359:24:13"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1347:6:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1347:37:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1347:37:13"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1325:5:13",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1332:3:13",
                "type": ""
              }
            ],
            "src": "1272:118:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1476:81:13",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1493:3:13"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1544:5:13"
                          }
                        ],
                        "functionName": {
                          "name": "convert_t_contract$_Amacoin_$416_to_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "1498:45:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1498:52:13"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1486:6:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1486:65:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1486:65:13"
                }
              ]
            },
            "name": "abi_encode_t_contract$_Amacoin_$416_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1464:5:13",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1471:3:13",
                "type": ""
              }
            ],
            "src": "1396:161:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1709:220:13",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1719:74:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1785:3:13"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1790:2:13",
                        "type": "",
                        "value": "22"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1726:58:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1726:67:13"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "1719:3:13"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1891:3:13"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_09cf4c7ecd8bf22d3034c0b6865c6c197e12741e4aa02e3bcf0a28539a3fe580",
                      "nodeType": "YulIdentifier",
                      "src": "1802:88:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1802:93:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1802:93:13"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1904:19:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1915:3:13"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1920:2:13",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1911:3:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1911:12:13"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "1904:3:13"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_09cf4c7ecd8bf22d3034c0b6865c6c197e12741e4aa02e3bcf0a28539a3fe580_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1697:3:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "1705:3:13",
                "type": ""
              }
            ],
            "src": "1563:366:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2080:217:13",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2090:72:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2155:3:13"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2160:1:13",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2097:57:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2097:65:13"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "2090:3:13"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2260:3:13"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                      "nodeType": "YulIdentifier",
                      "src": "2171:88:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2171:93:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2171:93:13"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2273:18:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2284:3:13"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2289:1:13",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2280:3:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2280:11:13"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "2273:3:13"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2068:3:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "2076:3:13",
                "type": ""
              }
            ],
            "src": "1935:362:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2449:220:13",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2459:74:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2525:3:13"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2530:2:13",
                        "type": "",
                        "value": "19"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2466:58:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2466:67:13"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "2459:3:13"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2631:3:13"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_e789fa5da66c520babfe6647147fb3f2218ada4a0bc389f7b31e5ca1f5cdb6d0",
                      "nodeType": "YulIdentifier",
                      "src": "2542:88:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2542:93:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2542:93:13"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2644:19:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2655:3:13"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2660:2:13",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2651:3:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2651:12:13"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "2644:3:13"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_e789fa5da66c520babfe6647147fb3f2218ada4a0bc389f7b31e5ca1f5cdb6d0_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2437:3:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "2445:3:13",
                "type": ""
              }
            ],
            "src": "2303:366:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2740:53:13",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2757:3:13"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2780:5:13"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "2762:17:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2762:24:13"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2750:6:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2750:37:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2750:37:13"
                }
              ]
            },
            "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2728:5:13",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2735:3:13",
                "type": ""
              }
            ],
            "src": "2675:118:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2897:124:13",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2907:26:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2919:9:13"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2930:2:13",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2915:3:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2915:18:13"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2907:4:13"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "2987:6:13"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3000:9:13"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3011:1:13",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2996:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2996:17:13"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2943:43:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2943:71:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2943:71:13"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2869:9:13",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2881:6:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2892:4:13",
                "type": ""
              }
            ],
            "src": "2799:222:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3153:206:13",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3163:26:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3175:9:13"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3186:2:13",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3171:3:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3171:18:13"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3163:4:13"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "3243:6:13"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3256:9:13"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3267:1:13",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3252:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3252:17:13"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3199:43:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3199:71:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3199:71:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "3324:6:13"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3337:9:13"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3348:2:13",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3333:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3333:18:13"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3280:43:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3280:72:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3280:72:13"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3117:9:13",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "3129:6:13",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3137:6:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3148:4:13",
                "type": ""
              }
            ],
            "src": "3027:332:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3691:617:13",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3701:27:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3713:9:13"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3724:3:13",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3709:3:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3709:19:13"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3701:4:13"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "3782:6:13"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3795:9:13"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3806:1:13",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3791:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3791:17:13"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3738:43:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3738:71:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3738:71:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "3863:6:13"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3876:9:13"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3887:2:13",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3872:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3872:18:13"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3819:43:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3819:72:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3819:72:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3912:9:13"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3923:2:13",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3908:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3908:18:13"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "3932:4:13"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3938:9:13"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3928:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3928:20:13"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3901:6:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3901:48:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3901:48:13"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3958:138:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "4091:4:13"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3966:123:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3966:130:13"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3958:4:13"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4117:9:13"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4128:2:13",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4113:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4113:18:13"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "4137:4:13"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4143:9:13"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4133:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4133:20:13"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4106:6:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4106:48:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4106:48:13"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4163:138:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "4296:4:13"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4171:123:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4171:130:13"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4163:4:13"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_address_t_uint256_t_bytes_memory_ptr_t_bytes_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3655:9:13",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "3667:6:13",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3675:6:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3686:4:13",
                "type": ""
              }
            ],
            "src": "3365:943:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4427:139:13",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4437:26:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4449:9:13"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4460:2:13",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4445:3:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4445:18:13"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4437:4:13"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "4532:6:13"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4545:9:13"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4556:1:13",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4541:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4541:17:13"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_contract$_Amacoin_$416_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4473:58:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4473:86:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4473:86:13"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_Amacoin_$416__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4399:9:13",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4411:6:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4422:4:13",
                "type": ""
              }
            ],
            "src": "4314:252:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4743:248:13",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4753:26:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4765:9:13"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4776:2:13",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4761:3:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4761:18:13"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4753:4:13"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4800:9:13"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4811:1:13",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4796:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4796:17:13"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "4819:4:13"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4825:9:13"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4815:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4815:20:13"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4789:6:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4789:47:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4789:47:13"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4845:139:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "4979:4:13"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_09cf4c7ecd8bf22d3034c0b6865c6c197e12741e4aa02e3bcf0a28539a3fe580_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4853:124:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4853:131:13"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4845:4:13"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_09cf4c7ecd8bf22d3034c0b6865c6c197e12741e4aa02e3bcf0a28539a3fe580__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4723:9:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4738:4:13",
                "type": ""
              }
            ],
            "src": "4572:419:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5168:248:13",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5178:26:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5190:9:13"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5201:2:13",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5186:3:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5186:18:13"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5178:4:13"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5225:9:13"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5236:1:13",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5221:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5221:17:13"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "5244:4:13"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5250:9:13"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "5240:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5240:20:13"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5214:6:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5214:47:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5214:47:13"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5270:139:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "5404:4:13"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_e789fa5da66c520babfe6647147fb3f2218ada4a0bc389f7b31e5ca1f5cdb6d0_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5278:124:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5278:131:13"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5270:4:13"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_e789fa5da66c520babfe6647147fb3f2218ada4a0bc389f7b31e5ca1f5cdb6d0__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5148:9:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5163:4:13",
                "type": ""
              }
            ],
            "src": "4997:419:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5520:124:13",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5530:26:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5542:9:13"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5553:2:13",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5538:3:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5538:18:13"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5530:4:13"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "5610:6:13"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5623:9:13"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5634:1:13",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5619:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5619:17:13"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5566:43:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5566:71:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5566:71:13"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5492:9:13",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5504:6:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5515:4:13",
                "type": ""
              }
            ],
            "src": "5422:222:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5776:206:13",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5786:26:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5798:9:13"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5809:2:13",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5794:3:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5794:18:13"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5786:4:13"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "5866:6:13"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5879:9:13"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5890:1:13",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5875:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5875:17:13"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5822:43:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5822:71:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5822:71:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "5947:6:13"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5960:9:13"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5971:2:13",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5956:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5956:18:13"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5903:43:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5903:72:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5903:72:13"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5740:9:13",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "5752:6:13",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5760:6:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5771:4:13",
                "type": ""
              }
            ],
            "src": "5650:332:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6142:288:13",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6152:26:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6164:9:13"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6175:2:13",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6160:3:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6160:18:13"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6152:4:13"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "6232:6:13"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6245:9:13"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6256:1:13",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6241:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6241:17:13"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6188:43:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6188:71:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6188:71:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "6313:6:13"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6326:9:13"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6337:2:13",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6322:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6322:18:13"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6269:43:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6269:72:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6269:72:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "6395:6:13"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6408:9:13"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6419:2:13",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6404:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6404:18:13"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6351:43:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6351:72:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6351:72:13"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6098:9:13",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "6110:6:13",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "6118:6:13",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6126:6:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6137:4:13",
                "type": ""
              }
            ],
            "src": "5988:442:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6531:73:13",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6548:3:13"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "6553:6:13"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6541:6:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6541:19:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6541:19:13"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6569:29:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6588:3:13"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6593:4:13",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6584:3:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6584:14:13"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "6569:11:13"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "6503:3:13",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "6508:6:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "6519:11:13",
                "type": ""
              }
            ],
            "src": "6436:168:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6706:73:13",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6723:3:13"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "6728:6:13"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6716:6:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6716:19:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6716:19:13"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6744:29:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6763:3:13"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6768:4:13",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6759:3:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6759:14:13"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "6744:11:13"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "6678:3:13",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "6683:6:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "6694:11:13",
                "type": ""
              }
            ],
            "src": "6610:169:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6829:261:13",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6839:25:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "6862:1:13"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "6844:17:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6844:20:13"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "6839:1:13"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6873:25:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "6896:1:13"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "6878:17:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6878:20:13"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "6873:1:13"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7036:22:13",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "7038:16:13"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7038:18:13"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7038:18:13"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "6957:1:13"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6964:66:13",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                          },
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "7032:1:13"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "6960:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6960:74:13"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "6954:2:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6954:81:13"
                  },
                  "nodeType": "YulIf",
                  "src": "6951:2:13"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7068:16:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "7079:1:13"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "7082:1:13"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7075:3:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7075:9:13"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "7068:3:13"
                    }
                  ]
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "6816:1:13",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "6819:1:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "6825:3:13",
                "type": ""
              }
            ],
            "src": "6785:305:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7141:51:13",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7151:35:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "7180:5:13"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "7162:17:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7162:24:13"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "7151:7:13"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "7123:5:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "7133:7:13",
                "type": ""
              }
            ],
            "src": "7096:96:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7243:81:13",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7253:65:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "7268:5:13"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7275:42:13",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "7264:3:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7264:54:13"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "7253:7:13"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "7225:5:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "7235:7:13",
                "type": ""
              }
            ],
            "src": "7198:126:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7375:32:13",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7385:16:13",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "7396:5:13"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "7385:7:13"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "7357:5:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "7367:7:13",
                "type": ""
              }
            ],
            "src": "7330:77:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7488:81:13",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7498:65:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "7557:5:13"
                      }
                    ],
                    "functionName": {
                      "name": "convert_t_contract$_Amacoin_$416_to_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "7511:45:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7511:52:13"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "7498:9:13"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_contract$_Amacoin_$416_to_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "7468:5:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "7478:9:13",
                "type": ""
              }
            ],
            "src": "7413:156:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7650:53:13",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7660:37:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "7691:5:13"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "7673:17:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7673:24:13"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "7660:9:13"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_contract$_Amacoin_$416_to_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "7630:5:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "7640:9:13",
                "type": ""
              }
            ],
            "src": "7575:128:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7737:152:13",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7754:1:13",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7757:77:13",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7747:6:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7747:88:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7747:88:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7851:1:13",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7854:4:13",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7844:6:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7844:15:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7844:15:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7875:1:13",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7878:4:13",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "7868:6:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7868:15:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7868:15:13"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "7709:180:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8001:66:13",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "8023:6:13"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8031:1:13",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8019:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8019:14:13"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8035:24:13",
                        "type": "",
                        "value": "Investment not matured"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8012:6:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8012:48:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8012:48:13"
                }
              ]
            },
            "name": "store_literal_in_memory_09cf4c7ecd8bf22d3034c0b6865c6c197e12741e4aa02e3bcf0a28539a3fe580",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "7993:6:13",
                "type": ""
              }
            ],
            "src": "7895:172:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8179:8:13",
              "statements": []
            },
            "name": "store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "8171:6:13",
                "type": ""
              }
            ],
            "src": "8073:114:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8299:63:13",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "8321:6:13"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8329:1:13",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8317:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8317:14:13"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8333:21:13",
                        "type": "",
                        "value": "Not enough amacoins"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8310:6:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8310:45:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8310:45:13"
                }
              ]
            },
            "name": "store_literal_in_memory_e789fa5da66c520babfe6647147fb3f2218ada4a0bc389f7b31e5ca1f5cdb6d0",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "8291:6:13",
                "type": ""
              }
            ],
            "src": "8193:169:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8411:79:13",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "8468:16:13",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8477:1:13",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8480:1:13",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "8470:6:13"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8470:12:13"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8470:12:13"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "8434:5:13"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "8459:5:13"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "8441:17:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8441:24:13"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "8431:2:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8431:35:13"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "8424:6:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8424:43:13"
                  },
                  "nodeType": "YulIf",
                  "src": "8421:2:13"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "8404:5:13",
                "type": ""
              }
            ],
            "src": "8368:122:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8539:79:13",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "8596:16:13",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8605:1:13",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8608:1:13",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "8598:6:13"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8598:12:13"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8598:12:13"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "8562:5:13"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "8587:5:13"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint256",
                              "nodeType": "YulIdentifier",
                              "src": "8569:17:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8569:24:13"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "8559:2:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8559:35:13"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "8552:6:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8552:43:13"
                  },
                  "nodeType": "YulIf",
                  "src": "8549:2:13"
                }
              ]
            },
            "name": "validator_revert_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "8532:5:13",
                "type": ""
              }
            ],
            "src": "8496:122:13"
          }
        ]
      },
      "contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_contract$_Amacoin_$416_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_Amacoin_$416_to_t_address(value))\n    }\n\n    function abi_encode_t_stringliteral_09cf4c7ecd8bf22d3034c0b6865c6c197e12741e4aa02e3bcf0a28539a3fe580_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_09cf4c7ecd8bf22d3034c0b6865c6c197e12741e4aa02e3bcf0a28539a3fe580(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, 0)\n        store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(pos)\n        end := add(pos, 0)\n    }\n\n    function abi_encode_t_stringliteral_e789fa5da66c520babfe6647147fb3f2218ada4a0bc389f7b31e5ca1f5cdb6d0_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 19)\n        store_literal_in_memory_e789fa5da66c520babfe6647147fb3f2218ada4a0bc389f7b31e5ca1f5cdb6d0(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_address_t_uint256_t_bytes_memory_ptr_t_bytes_memory_ptr__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_fromStack( tail)\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_contract$_Amacoin_$416__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_Amacoin_$416_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_09cf4c7ecd8bf22d3034c0b6865c6c197e12741e4aa02e3bcf0a28539a3fe580__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_09cf4c7ecd8bf22d3034c0b6865c6c197e12741e4aa02e3bcf0a28539a3fe580_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_e789fa5da66c520babfe6647147fb3f2218ada4a0bc389f7b31e5ca1f5cdb6d0__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e789fa5da66c520babfe6647147fb3f2218ada4a0bc389f7b31e5ca1f5cdb6d0_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function convert_t_contract$_Amacoin_$416_to_t_address(value) -> converted {\n        converted := convert_t_contract$_Amacoin_$416_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_Amacoin_$416_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(value)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function store_literal_in_memory_09cf4c7ecd8bf22d3034c0b6865c6c197e12741e4aa02e3bcf0a28539a3fe580(memPtr) {\n\n        mstore(add(memPtr, 0), \"Investment not matured\")\n\n    }\n\n    function store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(memPtr) {\n\n    }\n\n    function store_literal_in_memory_e789fa5da66c520babfe6647147fb3f2218ada4a0bc389f7b31e5ca1f5cdb6d0(memPtr) {\n\n        mstore(add(memPtr, 0), \"Not enough amacoins\")\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
      "id": 13,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "119:2193:0:-:0;;;481:63;;;;;;;;511:1;481:63;;;;;;514:13;481:63;;;;;;529:14;481:63;;;;;;;;;;;;;:::i;:::-;;627:427;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;664:16;694:4;664:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;728:16;746:10;716:41;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;706:7;;:51;;;;;;;;;;;;;;;;;;770:16;;763:23;;;;:::i;:::-;792:7;;;;;;;;;;:25;;;818:10;792:37;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;865:12;883:37;;;;;;;;891:14;883:37;;;;907:12;883:37;;;865:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;927:12;945:35;;;;;;;;953:13;945:35;;;;968:11;945:35;;;927:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;987:15;1008:40;;;;;;;;1019:11;1008:40;;;;1032:11;1008:40;;;;1045:2;1008:40;;;987:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;627:427;119:2193;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:171:13:-;;109:6;103:13;94:22;;125:47;166:5;125:47;:::i;:::-;84:94;;;;:::o;184:312::-;;317:2;305:9;296:7;292:23;288:32;285:2;;;333:1;330;323:12;285:2;376:1;401:78;471:7;462:6;451:9;447:22;401:78;:::i;:::-;391:88;;347:142;275:221;;;;:::o;502:179::-;;592:46;634:3;626:6;592:46;:::i;:::-;670:4;665:3;661:14;647:28;;582:99;;;;:::o;687:108::-;764:24;782:5;764:24;:::i;:::-;759:3;752:37;742:53;;:::o;801:118::-;888:24;906:5;888:24;:::i;:::-;883:3;876:37;866:53;;:::o;955:751::-;;1100:51;1145:5;1100:51;:::i;:::-;1167:86;1246:6;1241:3;1167:86;:::i;:::-;1160:93;;1277:53;1324:5;1277:53;:::i;:::-;1353:7;1384:1;1369:312;1394:6;1391:1;1388:13;1369:312;;;1464:44;1501:6;1464:44;:::i;:::-;1528:63;1587:3;1572:13;1528:63;:::i;:::-;1521:70;;1614:57;1664:6;1614:57;:::i;:::-;1604:67;;1429:252;1416:1;1413;1409:9;1404:14;;1369:312;;;1373:14;1697:3;1690:10;;1076:630;;;;;;;:::o;1712:159::-;1813:51;1858:5;1813:51;:::i;:::-;1808:3;1801:64;1791:80;;:::o;1877:222::-;;2008:2;1997:9;1993:18;1985:26;;2021:71;2089:1;2078:9;2074:17;2065:6;2021:71;:::i;:::-;1975:124;;;;:::o;2105:505::-;;2325:2;2314:9;2310:18;2302:26;;2374:9;2368:4;2364:20;2360:1;2349:9;2345:17;2338:47;2402:105;2502:4;2493:6;2402:105;:::i;:::-;2394:113;;2517:86;2599:2;2588:9;2584:18;2575:6;2517:86;:::i;:::-;2292:318;;;;;:::o;2616:156::-;;2703:3;2695:11;;2726:3;2723:1;2716:14;2760:4;2757:1;2747:18;2739:26;;2685:87;;;:::o;2778:111::-;;2876:5;2870:12;2860:22;;2849:40;;;:::o;2895:110::-;;2994:4;2989:3;2985:14;2977:22;;2967:38;;;:::o;3011:184::-;;3144:6;3139:3;3132:19;3184:4;3179:3;3175:14;3160:29;;3122:73;;;;:::o;3201:139::-;;3291:42;3284:5;3280:54;3269:65;;3259:81;;;:::o;3346:96::-;;3412:24;3430:5;3412:24;:::i;:::-;3401:35;;3391:51;;;:::o;3448:110::-;;3528:24;3546:5;3528:24;:::i;:::-;3517:35;;3507:51;;;:::o;3564:126::-;;3641:42;3634:5;3630:54;3619:65;;3609:81;;;:::o;3696:154::-;;3793:51;3838:5;3793:51;:::i;:::-;3780:64;;3770:80;;;:::o;3856:127::-;;3953:24;3971:5;3953:24;:::i;:::-;3940:37;;3930:53;;;:::o;3989:166::-;;4083:66;4114:34;4137:10;4114:34;:::i;:::-;4083:66;:::i;:::-;4074:75;;4064:91;;;:::o;4161:144::-;;4241:57;4292:4;4286:11;4241:57;:::i;:::-;4232:66;;4222:83;;;:::o;4311:102::-;;4400:5;4397:1;4393:13;4372:34;;4362:51;;;:::o;4419:150::-;4506:38;4538:5;4506:38;:::i;:::-;4499:5;4496:49;4486:2;;4559:1;4556;4549:12;4486:2;4476:93;:::o;119:2193:0:-;;;;;;;",
  "deployedSourceMap": "119:2193:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;143:22;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;442:35;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;1619:255;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;185:47;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1102:96;;;:::i;:::-;;481:63;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1878:116;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1377:238;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;409:29;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;2021:289;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;143:22;;;;;;;;;;;;:::o;442:35::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1619:255::-;1693:15;1709;1693:32;;;;;;;;;;;;;;;;;;;;;;;;;;:37;;;1281:4;1248:7;;;;;;;;;;:17;;;1266:10;1248:29;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:37;;1240:69;;;;;;;;;;;;:::i;:::-;;;;;;;;;1740:11:::1;:23;1752:10;1740:23;;;;;;;;;;;;;;;1776:87;;;;;;;;1808:15;1824;1808:32;;;;;;;;;;;;;;;;;;;;;;;;;;:37;;;1793:12;:52;;;;:::i;:::-;1776:87;;;;1847:15;1776:87;;::::0;1740:129:::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1322:7:::0;;;;;;;;;;:20;;;1343:10;1355:4;1322:46;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1619:255;;:::o;185:47::-;;;;;;;;;;;;;;;;;:::o;1102:96::-;1134:7;;;;;;;;;;:12;;;1147:10;1186:6;1159:12;:24;1172:10;1159:24;;;;;;;;;;;;;;;;:33;;;;:::i;:::-;1134:59;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1102:96::o;481:63::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1878:116::-;1930:9;1940:7;1930:18;;;;;;;;;;;;;;;;;;;;;;;;1281:4;1248:7;;;;;;;;;;:17;;;1266:10;1248:29;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:37;;1240:69;;;;;;;;;;;;:::i;:::-;;;;;;;;;1985:4:::1;1956:5;:17;1962:10;1956:17;;;;;;;;;;;;;;;1974:7;1956:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:33;;;;;;;;;;;;;;;;;;1322:7:::0;;;;;;;;;;:20;;;1343:10;1355:4;1322:46;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1878:116;;:::o;1377:238::-;1437:12;1450;1437:26;;;;;;;;;;;;;;;;;;;;;;;;;;:31;;;1281:4;1248:7;;;;;;;;;;:17;;;1266:10;1248:29;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:37;;1240:69;;;;;;;;;;;;:::i;:::-;;;;;;;;;1476:17:::1;1496:12;1509;1496:26;;;;;;;;;;;;;;;;;;;;;;;;;;1476:46;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;1567:1;1529:8;:20;1538:10;1529:20;;;;;;;;;;;;;;;1550:12;1529:34;;;;;;;;;;;;;;;;;;;;;;;;:39;;;;;;;:::i;:::-;;;;;;;;1602:2;:8;;;1574:12;:24;1587:10;1574:24;;;;;;;;;;;;;;;;:36;;;;;;;:::i;:::-;;;;;;;;1315:1;1322:7:::0;;;;;;;;;;:20;;;1343:10;1355:4;1322:46;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1377:238;;:::o;409:29::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2021:289::-;2067:27;2097:11;:23;2109:10;2097:23;;;;;;;;;;;;;;;2121:5;2097:30;;;;;;;;;;;;;;;;;;;;;;;;;;2067:60;;;;;;;;;;;;;;;;;;;;;;;;;;;2157:3;:15;;;2141:12;:31;;2133:66;;;;;;;;;;;;:::i;:::-;;;;;;;;;2206:7;;;;;;;;;;:12;;;2219:10;2231:15;2247:3;:6;;;2231:23;;;;;;;;;;;;;;;;;;;;;;;;;;:30;;;2206:56;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2275:11;:23;2287:10;2275:23;;;;;;;;;;;;;;;2299:5;2275:30;;;;;;;;;;;;;;;;;;;;;;;;;;;2268:37;;;;;;;;;;;;;;2021:289;;:::o;7:139:13:-;;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;59:87;;;;:::o;152:139::-;;236:6;223:20;214:29;;252:33;279:5;252:33;:::i;:::-;204:87;;;;:::o;297:143::-;;385:6;379:13;370:22;;401:33;428:5;401:33;:::i;:::-;360:80;;;;:::o;446:262::-;;554:2;542:9;533:7;529:23;525:32;522:2;;;570:1;567;560:12;522:2;613:1;638:53;683:7;674:6;663:9;659:22;638:53;:::i;:::-;628:63;;584:117;512:196;;;;:::o;714:262::-;;822:2;810:9;801:7;797:23;793:32;790:2;;;838:1;835;828:12;790:2;881:1;906:53;951:7;942:6;931:9;927:22;906:53;:::i;:::-;896:63;;852:117;780:196;;;;:::o;982:284::-;;1101:2;1089:9;1080:7;1076:23;1072:32;1069:2;;;1117:1;1114;1107:12;1069:2;1160:1;1185:64;1241:7;1232:6;1221:9;1217:22;1185:64;:::i;:::-;1175:74;;1131:128;1059:207;;;;:::o;1272:118::-;1359:24;1377:5;1359:24;:::i;:::-;1354:3;1347:37;1337:53;;:::o;1396:161::-;1498:52;1544:5;1498:52;:::i;:::-;1493:3;1486:65;1476:81;;:::o;1563:366::-;;1726:67;1790:2;1785:3;1726:67;:::i;:::-;1719:74;;1802:93;1891:3;1802:93;:::i;:::-;1920:2;1915:3;1911:12;1904:19;;1709:220;;;:::o;1935:362::-;;2097:65;2160:1;2155:3;2097:65;:::i;:::-;2090:72;;2171:93;2260:3;2171:93;:::i;:::-;2289:1;2284:3;2280:11;2273:18;;2080:217;;;:::o;2303:366::-;;2466:67;2530:2;2525:3;2466:67;:::i;:::-;2459:74;;2542:93;2631:3;2542:93;:::i;:::-;2660:2;2655:3;2651:12;2644:19;;2449:220;;;:::o;2675:118::-;2762:24;2780:5;2762:24;:::i;:::-;2757:3;2750:37;2740:53;;:::o;2799:222::-;;2930:2;2919:9;2915:18;2907:26;;2943:71;3011:1;3000:9;2996:17;2987:6;2943:71;:::i;:::-;2897:124;;;;:::o;3027:332::-;;3186:2;3175:9;3171:18;3163:26;;3199:71;3267:1;3256:9;3252:17;3243:6;3199:71;:::i;:::-;3280:72;3348:2;3337:9;3333:18;3324:6;3280:72;:::i;:::-;3153:206;;;;;:::o;3365:943::-;;3724:3;3713:9;3709:19;3701:27;;3738:71;3806:1;3795:9;3791:17;3782:6;3738:71;:::i;:::-;3819:72;3887:2;3876:9;3872:18;3863:6;3819:72;:::i;:::-;3938:9;3932:4;3928:20;3923:2;3912:9;3908:18;3901:48;3966:130;4091:4;3966:130;:::i;:::-;3958:138;;4143:9;4137:4;4133:20;4128:2;4117:9;4113:18;4106:48;4171:130;4296:4;4171:130;:::i;:::-;4163:138;;3691:617;;;;;:::o;4314:252::-;;4460:2;4449:9;4445:18;4437:26;;4473:86;4556:1;4545:9;4541:17;4532:6;4473:86;:::i;:::-;4427:139;;;;:::o;4572:419::-;;4776:2;4765:9;4761:18;4753:26;;4825:9;4819:4;4815:20;4811:1;4800:9;4796:17;4789:47;4853:131;4979:4;4853:131;:::i;:::-;4845:139;;4743:248;;;:::o;4997:419::-;;5201:2;5190:9;5186:18;5178:26;;5250:9;5244:4;5240:20;5236:1;5225:9;5221:17;5214:47;5278:131;5404:4;5278:131;:::i;:::-;5270:139;;5168:248;;;:::o;5422:222::-;;5553:2;5542:9;5538:18;5530:26;;5566:71;5634:1;5623:9;5619:17;5610:6;5566:71;:::i;:::-;5520:124;;;;:::o;5650:332::-;;5809:2;5798:9;5794:18;5786:26;;5822:71;5890:1;5879:9;5875:17;5866:6;5822:71;:::i;:::-;5903:72;5971:2;5960:9;5956:18;5947:6;5903:72;:::i;:::-;5776:206;;;;;:::o;5988:442::-;;6175:2;6164:9;6160:18;6152:26;;6188:71;6256:1;6245:9;6241:17;6232:6;6188:71;:::i;:::-;6269:72;6337:2;6326:9;6322:18;6313:6;6269:72;:::i;:::-;6351;6419:2;6408:9;6404:18;6395:6;6351:72;:::i;:::-;6142:288;;;;;;:::o;6436:168::-;;6553:6;6548:3;6541:19;6593:4;6588:3;6584:14;6569:29;;6531:73;;;;:::o;6610:169::-;;6728:6;6723:3;6716:19;6768:4;6763:3;6759:14;6744:29;;6706:73;;;;:::o;6785:305::-;;6844:20;6862:1;6844:20;:::i;:::-;6839:25;;6878:20;6896:1;6878:20;:::i;:::-;6873:25;;7032:1;6964:66;6960:74;6957:1;6954:81;6951:2;;;7038:18;;:::i;:::-;6951:2;7082:1;7079;7075:9;7068:16;;6829:261;;;;:::o;7096:96::-;;7162:24;7180:5;7162:24;:::i;:::-;7151:35;;7141:51;;;:::o;7198:126::-;;7275:42;7268:5;7264:54;7253:65;;7243:81;;;:::o;7330:77::-;;7396:5;7385:16;;7375:32;;;:::o;7413:156::-;;7511:52;7557:5;7511:52;:::i;:::-;7498:65;;7488:81;;;:::o;7575:128::-;;7673:24;7691:5;7673:24;:::i;:::-;7660:37;;7650:53;;;:::o;7709:180::-;7757:77;7754:1;7747:88;7854:4;7851:1;7844:15;7878:4;7875:1;7868:15;7895:172;8035:24;8031:1;8023:6;8019:14;8012:48;8001:66;:::o;8073:114::-;8179:8;:::o;8193:169::-;8333:21;8329:1;8321:6;8317:14;8310:45;8299:63;:::o;8368:122::-;8441:24;8459:5;8441:24;:::i;:::-;8434:5;8431:35;8421:2;;8480:1;8477;8470:12;8421:2;8411:79;:::o;8496:122::-;8569:24;8587:5;8569:24;:::i;:::-;8562:5;8559:35;8549:2;;8608:1;8605;8598:12;8549:2;8539:79;:::o",
  "source": "// SPDX-License-Identifier: GPL-3.0-or-later\npragma solidity ^0.8.3;\n\nimport \"./Amacoin.sol\";\nimport \"./Structs.sol\";\n\ncontract Amaclicker {\n  Amacoin public amacoin;\n\n  // User info\n  mapping(address => uint256) public clickRewards;\n  mapping(address => uint256[]) upgrades;\n  mapping(address => boughtInvestment[]) investments;\n  mapping(address => bool[]) skins;\n\n  // TODO: Finish these\n  // Items info\n  upgrade[] public upgradesInfo;\n  investment[] public investmentsInfo;\n  uint256[] public skinsInfo = [0, 1000 * 10**18, 10000 * 10**18];\n\n  // TODO: Make this in memory instead\n  address[] private defaultOperators;\n\n  constructor(IERC20 cheemscoin) {\n    defaultOperators.push(address(this));\n    amacoin = new Amacoin(defaultOperators, cheemscoin);\n    delete defaultOperators;\n    amacoin.transferOwnership(msg.sender);\n\n    // Initialise items info\n    upgradesInfo.push(upgrade(19.99 * 10**18, 0.1 * 10**18));\n    upgradesInfo.push(upgrade(1000 * 10**18, 10 * 10**18));\n    investmentsInfo.push(investment(10 * 10**18, 40 * 10**18, 72));\n  }\n\n  // TODO: require caller to own cheemscoin\n  function click() external {\n    amacoin.mint(msg.sender, clickRewards[msg.sender] + 10**18);\n  }\n\n  modifier purchase(uint256 cost) {\n    require(amacoin.balanceOf(msg.sender) >= cost, \"Not enough amacoins\");\n    _;\n    amacoin.operatorBurn(msg.sender, cost, \"\", \"\");\n  }\n\n  function buyUpgrade(uint256 upgradeIndex) external purchase(upgradesInfo[upgradeIndex].cost) {\n    upgrade memory up = upgradesInfo[upgradeIndex];\n\n    upgrades[msg.sender][upgradeIndex] += 1;\n    clickRewards[msg.sender] += up.boost;\n  }\n\n  function buyInvestment(uint256 investmentIndex)\n    external\n    purchase(investmentsInfo[investmentIndex].cost)\n  {\n    investments[msg.sender].push(\n      boughtInvestment(block.number + investmentsInfo[investmentIndex].time, investmentIndex)\n    );\n  }\n\n  function buySkin(uint256 skindex) external purchase(skinsInfo[skindex]) {\n    skins[msg.sender][skindex] = true;\n  }\n\n  // boughtInvestments\n  function redeem(uint256 index) external {\n    boughtInvestment memory inv = investments[msg.sender][index];\n    require(block.number >= inv.redeemBlock, \"Investment not matured\");\n\n    amacoin.mint(msg.sender, investmentsInfo[inv.id].reward);\n    delete investments[msg.sender][index];\n  }\n}\n",
  "sourcePath": "/Users/kaikurosawa/Desktop/code/amaclicker/contracts/Amaclicker.sol",
  "ast": {
    "absolutePath": "/Users/kaikurosawa/Desktop/code/amaclicker/contracts/Amaclicker.sol",
    "exportedSymbols": {
      "Address": [
        2263
      ],
      "Amaclicker": [
        316
      ],
      "Amacoin": [
        416
      ],
      "Context": [
        2286
      ],
      "ERC777": [
        1768
      ],
      "IERC1820Registry": [
        2376
      ],
      "IERC20": [
        656
      ],
      "IERC777": [
        1927
      ],
      "IERC777Recipient": [
        1947
      ],
      "IERC777Sender": [
        1967
      ],
      "Ownable": [
        578
      ],
      "boughtInvestment": [
        468
      ],
      "investment": [
        463
      ],
      "upgrade": [
        456
      ]
    },
    "id": 317,
    "license": "GPL-3.0-or-later",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".3"
        ],
        "nodeType": "PragmaDirective",
        "src": "45:23:0"
      },
      {
        "absolutePath": "/Users/kaikurosawa/Desktop/code/amaclicker/contracts/Amacoin.sol",
        "file": "./Amacoin.sol",
        "id": 2,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 317,
        "sourceUnit": 417,
        "src": "70:23:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/kaikurosawa/Desktop/code/amaclicker/contracts/Structs.sol",
        "file": "./Structs.sol",
        "id": 3,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 317,
        "sourceUnit": 469,
        "src": "94:23:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [
          416
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 316,
        "linearizedBaseContracts": [
          316
        ],
        "name": "Amaclicker",
        "nameLocation": "128:10:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "31629f78",
            "id": 6,
            "mutability": "mutable",
            "name": "amacoin",
            "nameLocation": "158:7:0",
            "nodeType": "VariableDeclaration",
            "scope": 316,
            "src": "143:22:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Amacoin_$416",
              "typeString": "contract Amacoin"
            },
            "typeName": {
              "id": 5,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 4,
                "name": "Amacoin",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 416,
                "src": "143:7:0"
              },
              "referencedDeclaration": 416,
              "src": "143:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Amacoin_$416",
                "typeString": "contract Amacoin"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "7ab68263",
            "id": 10,
            "mutability": "mutable",
            "name": "clickRewards",
            "nameLocation": "220:12:0",
            "nodeType": "VariableDeclaration",
            "scope": 316,
            "src": "185:47:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 9,
              "keyType": {
                "id": 7,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "193:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "185:27:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 8,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "204:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 15,
            "mutability": "mutable",
            "name": "upgrades",
            "nameLocation": "266:8:0",
            "nodeType": "VariableDeclaration",
            "scope": 316,
            "src": "236:38:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
              "typeString": "mapping(address => uint256[])"
            },
            "typeName": {
              "id": 14,
              "keyType": {
                "id": 11,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "244:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "236:29:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
                "typeString": "mapping(address => uint256[])"
              },
              "valueType": {
                "baseType": {
                  "id": 12,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "255:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "id": 13,
                "nodeType": "ArrayTypeName",
                "src": "255:9:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                  "typeString": "uint256[]"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 21,
            "mutability": "mutable",
            "name": "investments",
            "nameLocation": "317:11:0",
            "nodeType": "VariableDeclaration",
            "scope": 316,
            "src": "278:50:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_boughtInvestment_$468_storage_$dyn_storage_$",
              "typeString": "mapping(address => struct boughtInvestment[])"
            },
            "typeName": {
              "id": 20,
              "keyType": {
                "id": 16,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "286:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "278:38:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_boughtInvestment_$468_storage_$dyn_storage_$",
                "typeString": "mapping(address => struct boughtInvestment[])"
              },
              "valueType": {
                "baseType": {
                  "id": 18,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 17,
                    "name": "boughtInvestment",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 468,
                    "src": "297:16:0"
                  },
                  "referencedDeclaration": 468,
                  "src": "297:16:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_boughtInvestment_$468_storage_ptr",
                    "typeString": "struct boughtInvestment"
                  }
                },
                "id": 19,
                "nodeType": "ArrayTypeName",
                "src": "297:18:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_struct$_boughtInvestment_$468_storage_$dyn_storage_ptr",
                  "typeString": "struct boughtInvestment[]"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 26,
            "mutability": "mutable",
            "name": "skins",
            "nameLocation": "359:5:0",
            "nodeType": "VariableDeclaration",
            "scope": 316,
            "src": "332:32:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_bool_$dyn_storage_$",
              "typeString": "mapping(address => bool[])"
            },
            "typeName": {
              "id": 25,
              "keyType": {
                "id": 22,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "340:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "332:26:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_bool_$dyn_storage_$",
                "typeString": "mapping(address => bool[])"
              },
              "valueType": {
                "baseType": {
                  "id": 23,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "351:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "id": 24,
                "nodeType": "ArrayTypeName",
                "src": "351:6:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_bool_$dyn_storage_ptr",
                  "typeString": "bool[]"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "b6b7d933",
            "id": 30,
            "mutability": "mutable",
            "name": "upgradesInfo",
            "nameLocation": "426:12:0",
            "nodeType": "VariableDeclaration",
            "scope": 316,
            "src": "409:29:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_struct$_upgrade_$456_storage_$dyn_storage",
              "typeString": "struct upgrade[]"
            },
            "typeName": {
              "baseType": {
                "id": 28,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 27,
                  "name": "upgrade",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 456,
                  "src": "409:7:0"
                },
                "referencedDeclaration": 456,
                "src": "409:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_upgrade_$456_storage_ptr",
                  "typeString": "struct upgrade"
                }
              },
              "id": 29,
              "nodeType": "ArrayTypeName",
              "src": "409:9:0",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_upgrade_$456_storage_$dyn_storage_ptr",
                "typeString": "struct upgrade[]"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "3eedd49b",
            "id": 34,
            "mutability": "mutable",
            "name": "investmentsInfo",
            "nameLocation": "462:15:0",
            "nodeType": "VariableDeclaration",
            "scope": 316,
            "src": "442:35:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_struct$_investment_$463_storage_$dyn_storage",
              "typeString": "struct investment[]"
            },
            "typeName": {
              "baseType": {
                "id": 32,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 31,
                  "name": "investment",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 463,
                  "src": "442:10:0"
                },
                "referencedDeclaration": 463,
                "src": "442:10:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_investment_$463_storage_ptr",
                  "typeString": "struct investment"
                }
              },
              "id": 33,
              "nodeType": "ArrayTypeName",
              "src": "442:12:0",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_investment_$463_storage_$dyn_storage_ptr",
                "typeString": "struct investment[]"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "8a3e059a",
            "id": 49,
            "mutability": "mutable",
            "name": "skinsInfo",
            "nameLocation": "498:9:0",
            "nodeType": "VariableDeclaration",
            "scope": 316,
            "src": "481:63:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
              "typeString": "uint256[]"
            },
            "typeName": {
              "baseType": {
                "id": 35,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "481:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "id": 36,
              "nodeType": "ArrayTypeName",
              "src": "481:9:0",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                "typeString": "uint256[]"
              }
            },
            "value": {
              "components": [
                {
                  "hexValue": "30",
                  "id": 37,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "511:1:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_0_by_1",
                    "typeString": "int_const 0"
                  },
                  "value": "0"
                },
                {
                  "commonType": {
                    "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                    "typeString": "int_const 1000000000000000000000"
                  },
                  "id": 42,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "lValueRequested": false,
                  "leftExpression": {
                    "hexValue": "31303030",
                    "id": 38,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "514:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1000_by_1",
                      "typeString": "int_const 1000"
                    },
                    "value": "1000"
                  },
                  "nodeType": "BinaryOperation",
                  "operator": "*",
                  "rightExpression": {
                    "commonType": {
                      "typeIdentifier": "t_rational_1000000000000000000_by_1",
                      "typeString": "int_const 1000000000000000000"
                    },
                    "id": 41,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "leftExpression": {
                      "hexValue": "3130",
                      "id": 39,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "521:2:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_10_by_1",
                        "typeString": "int_const 10"
                      },
                      "value": "10"
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "**",
                    "rightExpression": {
                      "hexValue": "3138",
                      "id": 40,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "525:2:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_18_by_1",
                        "typeString": "int_const 18"
                      },
                      "value": "18"
                    },
                    "src": "521:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1000000000000000000_by_1",
                      "typeString": "int_const 1000000000000000000"
                    }
                  },
                  "src": "514:13:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                    "typeString": "int_const 1000000000000000000000"
                  }
                },
                {
                  "commonType": {
                    "typeIdentifier": "t_rational_10000000000000000000000_by_1",
                    "typeString": "int_const 10000000000000000000000"
                  },
                  "id": 47,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "lValueRequested": false,
                  "leftExpression": {
                    "hexValue": "3130303030",
                    "id": 43,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "529:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_10000_by_1",
                      "typeString": "int_const 10000"
                    },
                    "value": "10000"
                  },
                  "nodeType": "BinaryOperation",
                  "operator": "*",
                  "rightExpression": {
                    "commonType": {
                      "typeIdentifier": "t_rational_1000000000000000000_by_1",
                      "typeString": "int_const 1000000000000000000"
                    },
                    "id": 46,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "leftExpression": {
                      "hexValue": "3130",
                      "id": 44,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "537:2:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_10_by_1",
                        "typeString": "int_const 10"
                      },
                      "value": "10"
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "**",
                    "rightExpression": {
                      "hexValue": "3138",
                      "id": 45,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "541:2:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_18_by_1",
                        "typeString": "int_const 18"
                      },
                      "value": "18"
                    },
                    "src": "537:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1000000000000000000_by_1",
                      "typeString": "int_const 1000000000000000000"
                    }
                  },
                  "src": "529:14:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_10000000000000000000000_by_1",
                    "typeString": "int_const 10000000000000000000000"
                  }
                }
              ],
              "id": 48,
              "isConstant": false,
              "isInlineArray": true,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "nodeType": "TupleExpression",
              "src": "510:34:0",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_uint80_$3_memory_ptr",
                "typeString": "uint80[3] memory"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 52,
            "mutability": "mutable",
            "name": "defaultOperators",
            "nameLocation": "606:16:0",
            "nodeType": "VariableDeclaration",
            "scope": 316,
            "src": "588:34:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 50,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "588:7:0",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 51,
              "nodeType": "ArrayTypeName",
              "src": "588:9:0",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 138,
              "nodeType": "Block",
              "src": "658:396:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 63,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "694:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Amaclicker_$316",
                              "typeString": "contract Amaclicker"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Amaclicker_$316",
                              "typeString": "contract Amaclicker"
                            }
                          ],
                          "id": 62,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "686:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 61,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "686:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 64,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "686:13:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 58,
                        "name": "defaultOperators",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 52,
                        "src": "664:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 60,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "664:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                        "typeString": "function (address[] storage pointer,address)"
                      }
                    },
                    "id": 65,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "664:36:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 66,
                  "nodeType": "ExpressionStatement",
                  "src": "664:36:0"
                },
                {
                  "expression": {
                    "id": 74,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 67,
                      "name": "amacoin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6,
                      "src": "706:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Amacoin_$416",
                        "typeString": "contract Amacoin"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 71,
                          "name": "defaultOperators",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 52,
                          "src": "728:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage",
                            "typeString": "address[] storage ref"
                          }
                        },
                        {
                          "id": 72,
                          "name": "cheemscoin",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 55,
                          "src": "746:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$656",
                            "typeString": "contract IERC20"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage",
                            "typeString": "address[] storage ref"
                          },
                          {
                            "typeIdentifier": "t_contract$_IERC20_$656",
                            "typeString": "contract IERC20"
                          }
                        ],
                        "id": 70,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "716:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_array$_t_address_$dyn_memory_ptr_$_t_contract$_IERC20_$656_$returns$_t_contract$_Amacoin_$416_$",
                          "typeString": "function (address[] memory,contract IERC20) returns (contract Amacoin)"
                        },
                        "typeName": {
                          "id": 69,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 68,
                            "name": "Amacoin",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 416,
                            "src": "720:7:0"
                          },
                          "referencedDeclaration": 416,
                          "src": "720:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Amacoin_$416",
                            "typeString": "contract Amacoin"
                          }
                        }
                      },
                      "id": 73,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "716:41:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Amacoin_$416",
                        "typeString": "contract Amacoin"
                      }
                    },
                    "src": "706:51:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Amacoin_$416",
                      "typeString": "contract Amacoin"
                    }
                  },
                  "id": 75,
                  "nodeType": "ExpressionStatement",
                  "src": "706:51:0"
                },
                {
                  "expression": {
                    "id": 77,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "763:23:0",
                    "subExpression": {
                      "id": 76,
                      "name": "defaultOperators",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 52,
                      "src": "770:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                        "typeString": "address[] storage ref"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 78,
                  "nodeType": "ExpressionStatement",
                  "src": "763:23:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 82,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "818:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 83,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "818:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 79,
                        "name": "amacoin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6,
                        "src": "792:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Amacoin_$416",
                          "typeString": "contract Amacoin"
                        }
                      },
                      "id": 81,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferOwnership",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 577,
                      "src": "792:25:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 84,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "792:37:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 85,
                  "nodeType": "ExpressionStatement",
                  "src": "792:37:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_rational_19990000000000000000_by_1",
                              "typeString": "int_const 19990000000000000000"
                            },
                            "id": 94,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "leftExpression": {
                              "hexValue": "31392e3939",
                              "id": 90,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "891:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1999_by_100",
                                "typeString": "rational_const 1999 / 100"
                              },
                              "value": "19.99"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "commonType": {
                                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                "typeString": "int_const 1000000000000000000"
                              },
                              "id": 93,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "leftExpression": {
                                "hexValue": "3130",
                                "id": 91,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "899:2:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_10_by_1",
                                  "typeString": "int_const 10"
                                },
                                "value": "10"
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "**",
                              "rightExpression": {
                                "hexValue": "3138",
                                "id": 92,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "903:2:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_18_by_1",
                                  "typeString": "int_const 18"
                                },
                                "value": "18"
                              },
                              "src": "899:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                "typeString": "int_const 1000000000000000000"
                              }
                            },
                            "src": "891:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_19990000000000000000_by_1",
                              "typeString": "int_const 19990000000000000000"
                            }
                          },
                          {
                            "commonType": {
                              "typeIdentifier": "t_rational_100000000000000000_by_1",
                              "typeString": "int_const 100000000000000000"
                            },
                            "id": 99,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "leftExpression": {
                              "hexValue": "302e31",
                              "id": 95,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "907:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_10",
                                "typeString": "rational_const 1 / 10"
                              },
                              "value": "0.1"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "commonType": {
                                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                "typeString": "int_const 1000000000000000000"
                              },
                              "id": 98,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "leftExpression": {
                                "hexValue": "3130",
                                "id": 96,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "913:2:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_10_by_1",
                                  "typeString": "int_const 10"
                                },
                                "value": "10"
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "**",
                              "rightExpression": {
                                "hexValue": "3138",
                                "id": 97,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "917:2:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_18_by_1",
                                  "typeString": "int_const 18"
                                },
                                "value": "18"
                              },
                              "src": "913:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                "typeString": "int_const 1000000000000000000"
                              }
                            },
                            "src": "907:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_100000000000000000_by_1",
                              "typeString": "int_const 100000000000000000"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_19990000000000000000_by_1",
                              "typeString": "int_const 19990000000000000000"
                            },
                            {
                              "typeIdentifier": "t_rational_100000000000000000_by_1",
                              "typeString": "int_const 100000000000000000"
                            }
                          ],
                          "id": 89,
                          "name": "upgrade",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 456,
                          "src": "883:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_upgrade_$456_storage_ptr_$",
                            "typeString": "type(struct upgrade storage pointer)"
                          }
                        },
                        "id": 100,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "883:37:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_upgrade_$456_memory_ptr",
                          "typeString": "struct upgrade memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_upgrade_$456_memory_ptr",
                          "typeString": "struct upgrade memory"
                        }
                      ],
                      "expression": {
                        "id": 86,
                        "name": "upgradesInfo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30,
                        "src": "865:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_upgrade_$456_storage_$dyn_storage",
                          "typeString": "struct upgrade storage ref[] storage ref"
                        }
                      },
                      "id": 88,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "865:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_upgrade_$456_storage_$dyn_storage_ptr_$_t_struct$_upgrade_$456_storage_$returns$__$bound_to$_t_array$_t_struct$_upgrade_$456_storage_$dyn_storage_ptr_$",
                        "typeString": "function (struct upgrade storage ref[] storage pointer,struct upgrade storage ref)"
                      }
                    },
                    "id": 101,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "865:56:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 102,
                  "nodeType": "ExpressionStatement",
                  "src": "865:56:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000000"
                            },
                            "id": 111,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "leftExpression": {
                              "hexValue": "31303030",
                              "id": 107,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "953:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1000_by_1",
                                "typeString": "int_const 1000"
                              },
                              "value": "1000"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "commonType": {
                                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                "typeString": "int_const 1000000000000000000"
                              },
                              "id": 110,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "leftExpression": {
                                "hexValue": "3130",
                                "id": 108,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "960:2:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_10_by_1",
                                  "typeString": "int_const 10"
                                },
                                "value": "10"
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "**",
                              "rightExpression": {
                                "hexValue": "3138",
                                "id": 109,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "964:2:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_18_by_1",
                                  "typeString": "int_const 18"
                                },
                                "value": "18"
                              },
                              "src": "960:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                "typeString": "int_const 1000000000000000000"
                              }
                            },
                            "src": "953:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000000"
                            }
                          },
                          {
                            "commonType": {
                              "typeIdentifier": "t_rational_10000000000000000000_by_1",
                              "typeString": "int_const 10000000000000000000"
                            },
                            "id": 116,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "leftExpression": {
                              "hexValue": "3130",
                              "id": 112,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "968:2:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_10_by_1",
                                "typeString": "int_const 10"
                              },
                              "value": "10"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "commonType": {
                                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                "typeString": "int_const 1000000000000000000"
                              },
                              "id": 115,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "leftExpression": {
                                "hexValue": "3130",
                                "id": 113,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "973:2:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_10_by_1",
                                  "typeString": "int_const 10"
                                },
                                "value": "10"
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "**",
                              "rightExpression": {
                                "hexValue": "3138",
                                "id": 114,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "977:2:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_18_by_1",
                                  "typeString": "int_const 18"
                                },
                                "value": "18"
                              },
                              "src": "973:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                "typeString": "int_const 1000000000000000000"
                              }
                            },
                            "src": "968:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10000000000000000000_by_1",
                              "typeString": "int_const 10000000000000000000"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000000"
                            },
                            {
                              "typeIdentifier": "t_rational_10000000000000000000_by_1",
                              "typeString": "int_const 10000000000000000000"
                            }
                          ],
                          "id": 106,
                          "name": "upgrade",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 456,
                          "src": "945:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_upgrade_$456_storage_ptr_$",
                            "typeString": "type(struct upgrade storage pointer)"
                          }
                        },
                        "id": 117,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "945:35:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_upgrade_$456_memory_ptr",
                          "typeString": "struct upgrade memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_upgrade_$456_memory_ptr",
                          "typeString": "struct upgrade memory"
                        }
                      ],
                      "expression": {
                        "id": 103,
                        "name": "upgradesInfo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30,
                        "src": "927:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_upgrade_$456_storage_$dyn_storage",
                          "typeString": "struct upgrade storage ref[] storage ref"
                        }
                      },
                      "id": 105,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "927:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_upgrade_$456_storage_$dyn_storage_ptr_$_t_struct$_upgrade_$456_storage_$returns$__$bound_to$_t_array$_t_struct$_upgrade_$456_storage_$dyn_storage_ptr_$",
                        "typeString": "function (struct upgrade storage ref[] storage pointer,struct upgrade storage ref)"
                      }
                    },
                    "id": 118,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "927:54:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 119,
                  "nodeType": "ExpressionStatement",
                  "src": "927:54:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_rational_10000000000000000000_by_1",
                              "typeString": "int_const 10000000000000000000"
                            },
                            "id": 128,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "leftExpression": {
                              "hexValue": "3130",
                              "id": 124,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1019:2:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_10_by_1",
                                "typeString": "int_const 10"
                              },
                              "value": "10"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "commonType": {
                                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                "typeString": "int_const 1000000000000000000"
                              },
                              "id": 127,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "leftExpression": {
                                "hexValue": "3130",
                                "id": 125,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1024:2:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_10_by_1",
                                  "typeString": "int_const 10"
                                },
                                "value": "10"
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "**",
                              "rightExpression": {
                                "hexValue": "3138",
                                "id": 126,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1028:2:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_18_by_1",
                                  "typeString": "int_const 18"
                                },
                                "value": "18"
                              },
                              "src": "1024:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                "typeString": "int_const 1000000000000000000"
                              }
                            },
                            "src": "1019:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10000000000000000000_by_1",
                              "typeString": "int_const 10000000000000000000"
                            }
                          },
                          {
                            "commonType": {
                              "typeIdentifier": "t_rational_40000000000000000000_by_1",
                              "typeString": "int_const 40000000000000000000"
                            },
                            "id": 133,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "leftExpression": {
                              "hexValue": "3430",
                              "id": 129,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1032:2:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_40_by_1",
                                "typeString": "int_const 40"
                              },
                              "value": "40"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "commonType": {
                                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                "typeString": "int_const 1000000000000000000"
                              },
                              "id": 132,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "leftExpression": {
                                "hexValue": "3130",
                                "id": 130,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1037:2:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_10_by_1",
                                  "typeString": "int_const 10"
                                },
                                "value": "10"
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "**",
                              "rightExpression": {
                                "hexValue": "3138",
                                "id": 131,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1041:2:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_18_by_1",
                                  "typeString": "int_const 18"
                                },
                                "value": "18"
                              },
                              "src": "1037:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                "typeString": "int_const 1000000000000000000"
                              }
                            },
                            "src": "1032:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_40000000000000000000_by_1",
                              "typeString": "int_const 40000000000000000000"
                            }
                          },
                          {
                            "hexValue": "3732",
                            "id": 134,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1045:2:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_72_by_1",
                              "typeString": "int_const 72"
                            },
                            "value": "72"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_10000000000000000000_by_1",
                              "typeString": "int_const 10000000000000000000"
                            },
                            {
                              "typeIdentifier": "t_rational_40000000000000000000_by_1",
                              "typeString": "int_const 40000000000000000000"
                            },
                            {
                              "typeIdentifier": "t_rational_72_by_1",
                              "typeString": "int_const 72"
                            }
                          ],
                          "id": 123,
                          "name": "investment",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 463,
                          "src": "1008:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_investment_$463_storage_ptr_$",
                            "typeString": "type(struct investment storage pointer)"
                          }
                        },
                        "id": 135,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1008:40:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_investment_$463_memory_ptr",
                          "typeString": "struct investment memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_investment_$463_memory_ptr",
                          "typeString": "struct investment memory"
                        }
                      ],
                      "expression": {
                        "id": 120,
                        "name": "investmentsInfo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34,
                        "src": "987:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_investment_$463_storage_$dyn_storage",
                          "typeString": "struct investment storage ref[] storage ref"
                        }
                      },
                      "id": 122,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "987:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_investment_$463_storage_$dyn_storage_ptr_$_t_struct$_investment_$463_storage_$returns$__$bound_to$_t_array$_t_struct$_investment_$463_storage_$dyn_storage_ptr_$",
                        "typeString": "function (struct investment storage ref[] storage pointer,struct investment storage ref)"
                      }
                    },
                    "id": 136,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "987:62:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 137,
                  "nodeType": "ExpressionStatement",
                  "src": "987:62:0"
                }
              ]
            },
            "id": 139,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 56,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 55,
                  "mutability": "mutable",
                  "name": "cheemscoin",
                  "nameLocation": "646:10:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 139,
                  "src": "639:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$656",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 54,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 53,
                      "name": "IERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 656,
                      "src": "639:6:0"
                    },
                    "referencedDeclaration": 656,
                    "src": "639:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$656",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "638:19:0"
            },
            "returnParameters": {
              "id": 57,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "658:0:0"
            },
            "scope": 316,
            "src": "627:427:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 157,
              "nodeType": "Block",
              "src": "1128:70:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 145,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1147:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 146,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1147:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 154,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 147,
                            "name": "clickRewards",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10,
                            "src": "1159:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 150,
                          "indexExpression": {
                            "expression": {
                              "id": 148,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "1172:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 149,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "1172:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1159:24:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "id": 153,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "3130",
                            "id": 151,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1186:2:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10_by_1",
                              "typeString": "int_const 10"
                            },
                            "value": "10"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "**",
                          "rightExpression": {
                            "hexValue": "3138",
                            "id": 152,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1190:2:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_18_by_1",
                              "typeString": "int_const 18"
                            },
                            "value": "18"
                          },
                          "src": "1186:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          }
                        },
                        "src": "1159:33:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 142,
                        "name": "amacoin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6,
                        "src": "1134:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Amacoin_$416",
                          "typeString": "contract Amacoin"
                        }
                      },
                      "id": 144,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 393,
                      "src": "1134:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 155,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1134:59:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 156,
                  "nodeType": "ExpressionStatement",
                  "src": "1134:59:0"
                }
              ]
            },
            "functionSelector": "7d55923d",
            "id": 158,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "click",
            "nameLocation": "1111:5:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 140,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1116:2:0"
            },
            "returnParameters": {
              "id": 141,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1128:0:0"
            },
            "scope": 316,
            "src": "1102:96:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 184,
              "nodeType": "Block",
              "src": "1234:139:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 169,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 165,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "1266:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 166,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "1266:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 163,
                              "name": "amacoin",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6,
                              "src": "1248:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Amacoin_$416",
                                "typeString": "contract Amacoin"
                              }
                            },
                            "id": 164,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 870,
                            "src": "1248:17:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 167,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1248:29:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 168,
                          "name": "cost",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 160,
                          "src": "1281:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1248:37:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420656e6f75676820616d61636f696e73",
                        "id": 170,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1287:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e789fa5da66c520babfe6647147fb3f2218ada4a0bc389f7b31e5ca1f5cdb6d0",
                          "typeString": "literal_string \"Not enough amacoins\""
                        },
                        "value": "Not enough amacoins"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e789fa5da66c520babfe6647147fb3f2218ada4a0bc389f7b31e5ca1f5cdb6d0",
                          "typeString": "literal_string \"Not enough amacoins\""
                        }
                      ],
                      "id": 162,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1240:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 171,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1240:69:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 172,
                  "nodeType": "ExpressionStatement",
                  "src": "1240:69:0"
                },
                {
                  "id": 173,
                  "nodeType": "PlaceholderStatement",
                  "src": "1315:1:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 177,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1343:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 178,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1343:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 179,
                        "name": "cost",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 160,
                        "src": "1355:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "",
                        "id": 180,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1361:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      },
                      {
                        "hexValue": "",
                        "id": 181,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1365:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "expression": {
                        "id": 174,
                        "name": "amacoin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6,
                        "src": "1322:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Amacoin_$416",
                          "typeString": "contract Amacoin"
                        }
                      },
                      "id": 176,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "operatorBurn",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1166,
                      "src": "1322:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256,bytes memory,bytes memory) external"
                      }
                    },
                    "id": 182,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1322:46:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 183,
                  "nodeType": "ExpressionStatement",
                  "src": "1322:46:0"
                }
              ]
            },
            "id": 185,
            "name": "purchase",
            "nameLocation": "1211:8:0",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 161,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 160,
                  "mutability": "mutable",
                  "name": "cost",
                  "nameLocation": "1228:4:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 185,
                  "src": "1220:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 159,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1220:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1219:14:0"
            },
            "src": "1202:171:0",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 220,
              "nodeType": "Block",
              "src": "1470:145:0",
              "statements": [
                {
                  "assignments": [
                    198
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 198,
                      "mutability": "mutable",
                      "name": "up",
                      "nameLocation": "1491:2:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 220,
                      "src": "1476:17:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_upgrade_$456_memory_ptr",
                        "typeString": "struct upgrade"
                      },
                      "typeName": {
                        "id": 197,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 196,
                          "name": "upgrade",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 456,
                          "src": "1476:7:0"
                        },
                        "referencedDeclaration": 456,
                        "src": "1476:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_upgrade_$456_storage_ptr",
                          "typeString": "struct upgrade"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 202,
                  "initialValue": {
                    "baseExpression": {
                      "id": 199,
                      "name": "upgradesInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30,
                      "src": "1496:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_upgrade_$456_storage_$dyn_storage",
                        "typeString": "struct upgrade storage ref[] storage ref"
                      }
                    },
                    "id": 201,
                    "indexExpression": {
                      "id": 200,
                      "name": "upgradeIndex",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 187,
                      "src": "1509:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1496:26:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_upgrade_$456_storage",
                      "typeString": "struct upgrade storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1476:46:0"
                },
                {
                  "expression": {
                    "id": 210,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 203,
                          "name": "upgrades",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15,
                          "src": "1529:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
                            "typeString": "mapping(address => uint256[] storage ref)"
                          }
                        },
                        "id": 207,
                        "indexExpression": {
                          "expression": {
                            "id": 204,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1538:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 205,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1538:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1529:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                          "typeString": "uint256[] storage ref"
                        }
                      },
                      "id": 208,
                      "indexExpression": {
                        "id": 206,
                        "name": "upgradeIndex",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 187,
                        "src": "1550:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1529:34:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 209,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1567:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "1529:39:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 211,
                  "nodeType": "ExpressionStatement",
                  "src": "1529:39:0"
                },
                {
                  "expression": {
                    "id": 218,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 212,
                        "name": "clickRewards",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10,
                        "src": "1574:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 215,
                      "indexExpression": {
                        "expression": {
                          "id": 213,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1587:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 214,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1587:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1574:24:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "expression": {
                        "id": 216,
                        "name": "up",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 198,
                        "src": "1602:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_upgrade_$456_memory_ptr",
                          "typeString": "struct upgrade memory"
                        }
                      },
                      "id": 217,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "boost",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 455,
                      "src": "1602:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1574:36:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 219,
                  "nodeType": "ExpressionStatement",
                  "src": "1574:36:0"
                }
              ]
            },
            "functionSelector": "a5a2cb19",
            "id": 221,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "expression": {
                      "baseExpression": {
                        "id": 190,
                        "name": "upgradesInfo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30,
                        "src": "1437:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_upgrade_$456_storage_$dyn_storage",
                          "typeString": "struct upgrade storage ref[] storage ref"
                        }
                      },
                      "id": 192,
                      "indexExpression": {
                        "id": 191,
                        "name": "upgradeIndex",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 187,
                        "src": "1450:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "1437:26:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_upgrade_$456_storage",
                        "typeString": "struct upgrade storage ref"
                      }
                    },
                    "id": 193,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "cost",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 453,
                    "src": "1437:31:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 194,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 189,
                  "name": "purchase",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 185,
                  "src": "1428:8:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "1428:41:0"
              }
            ],
            "name": "buyUpgrade",
            "nameLocation": "1386:10:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 188,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 187,
                  "mutability": "mutable",
                  "name": "upgradeIndex",
                  "nameLocation": "1405:12:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 221,
                  "src": "1397:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 186,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1397:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1396:22:0"
            },
            "returnParameters": {
              "id": 195,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1470:0:0"
            },
            "scope": 316,
            "src": "1377:238:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 249,
              "nodeType": "Block",
              "src": "1734:140:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 244,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 238,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967292,
                                "src": "1793:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 239,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "number",
                              "nodeType": "MemberAccess",
                              "src": "1793:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "expression": {
                                "baseExpression": {
                                  "id": 240,
                                  "name": "investmentsInfo",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 34,
                                  "src": "1808:15:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_investment_$463_storage_$dyn_storage",
                                    "typeString": "struct investment storage ref[] storage ref"
                                  }
                                },
                                "id": 242,
                                "indexExpression": {
                                  "id": 241,
                                  "name": "investmentIndex",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 223,
                                  "src": "1824:15:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "1808:32:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_investment_$463_storage",
                                  "typeString": "struct investment storage ref"
                                }
                              },
                              "id": 243,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "time",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 462,
                              "src": "1808:37:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "1793:52:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 245,
                            "name": "investmentIndex",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 223,
                            "src": "1847:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 237,
                          "name": "boughtInvestment",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 468,
                          "src": "1776:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_boughtInvestment_$468_storage_ptr_$",
                            "typeString": "type(struct boughtInvestment storage pointer)"
                          }
                        },
                        "id": 246,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1776:87:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_boughtInvestment_$468_memory_ptr",
                          "typeString": "struct boughtInvestment memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_boughtInvestment_$468_memory_ptr",
                          "typeString": "struct boughtInvestment memory"
                        }
                      ],
                      "expression": {
                        "baseExpression": {
                          "id": 232,
                          "name": "investments",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 21,
                          "src": "1740:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_boughtInvestment_$468_storage_$dyn_storage_$",
                            "typeString": "mapping(address => struct boughtInvestment storage ref[] storage ref)"
                          }
                        },
                        "id": 235,
                        "indexExpression": {
                          "expression": {
                            "id": 233,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1752:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 234,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1752:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1740:23:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_boughtInvestment_$468_storage_$dyn_storage",
                          "typeString": "struct boughtInvestment storage ref[] storage ref"
                        }
                      },
                      "id": 236,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "1740:28:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_boughtInvestment_$468_storage_$dyn_storage_ptr_$_t_struct$_boughtInvestment_$468_storage_$returns$__$bound_to$_t_array$_t_struct$_boughtInvestment_$468_storage_$dyn_storage_ptr_$",
                        "typeString": "function (struct boughtInvestment storage ref[] storage pointer,struct boughtInvestment storage ref)"
                      }
                    },
                    "id": 247,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1740:129:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 248,
                  "nodeType": "ExpressionStatement",
                  "src": "1740:129:0"
                }
              ]
            },
            "functionSelector": "57a1c389",
            "id": 250,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "expression": {
                      "baseExpression": {
                        "id": 226,
                        "name": "investmentsInfo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34,
                        "src": "1693:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_investment_$463_storage_$dyn_storage",
                          "typeString": "struct investment storage ref[] storage ref"
                        }
                      },
                      "id": 228,
                      "indexExpression": {
                        "id": 227,
                        "name": "investmentIndex",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 223,
                        "src": "1709:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "1693:32:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_investment_$463_storage",
                        "typeString": "struct investment storage ref"
                      }
                    },
                    "id": 229,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "cost",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 458,
                    "src": "1693:37:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 230,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 225,
                  "name": "purchase",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 185,
                  "src": "1684:8:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "1684:47:0"
              }
            ],
            "name": "buyInvestment",
            "nameLocation": "1628:13:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 224,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 223,
                  "mutability": "mutable",
                  "name": "investmentIndex",
                  "nameLocation": "1650:15:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 250,
                  "src": "1642:23:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 222,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1642:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1641:25:0"
            },
            "returnParameters": {
              "id": 231,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1734:0:0"
            },
            "scope": 316,
            "src": "1619:255:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 269,
              "nodeType": "Block",
              "src": "1950:44:0",
              "statements": [
                {
                  "expression": {
                    "id": 267,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 260,
                          "name": "skins",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 26,
                          "src": "1956:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_bool_$dyn_storage_$",
                            "typeString": "mapping(address => bool[] storage ref)"
                          }
                        },
                        "id": 264,
                        "indexExpression": {
                          "expression": {
                            "id": 261,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1962:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 262,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1962:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1956:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bool_$dyn_storage",
                          "typeString": "bool[] storage ref"
                        }
                      },
                      "id": 265,
                      "indexExpression": {
                        "id": 263,
                        "name": "skindex",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 252,
                        "src": "1974:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1956:26:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 266,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1985:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1956:33:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 268,
                  "nodeType": "ExpressionStatement",
                  "src": "1956:33:0"
                }
              ]
            },
            "functionSelector": "9d235de7",
            "id": 270,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "baseExpression": {
                      "id": 255,
                      "name": "skinsInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 49,
                      "src": "1930:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                        "typeString": "uint256[] storage ref"
                      }
                    },
                    "id": 257,
                    "indexExpression": {
                      "id": 256,
                      "name": "skindex",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 252,
                      "src": "1940:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1930:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 258,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 254,
                  "name": "purchase",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 185,
                  "src": "1921:8:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "1921:28:0"
              }
            ],
            "name": "buySkin",
            "nameLocation": "1887:7:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 253,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 252,
                  "mutability": "mutable",
                  "name": "skindex",
                  "nameLocation": "1903:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 270,
                  "src": "1895:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 251,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1895:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1894:17:0"
            },
            "returnParameters": {
              "id": 259,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1950:0:0"
            },
            "scope": 316,
            "src": "1878:116:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 314,
              "nodeType": "Block",
              "src": "2061:249:0",
              "statements": [
                {
                  "assignments": [
                    277
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 277,
                      "mutability": "mutable",
                      "name": "inv",
                      "nameLocation": "2091:3:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 314,
                      "src": "2067:27:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_boughtInvestment_$468_memory_ptr",
                        "typeString": "struct boughtInvestment"
                      },
                      "typeName": {
                        "id": 276,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 275,
                          "name": "boughtInvestment",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 468,
                          "src": "2067:16:0"
                        },
                        "referencedDeclaration": 468,
                        "src": "2067:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_boughtInvestment_$468_storage_ptr",
                          "typeString": "struct boughtInvestment"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 284,
                  "initialValue": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 278,
                        "name": "investments",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21,
                        "src": "2097:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_boughtInvestment_$468_storage_$dyn_storage_$",
                          "typeString": "mapping(address => struct boughtInvestment storage ref[] storage ref)"
                        }
                      },
                      "id": 281,
                      "indexExpression": {
                        "expression": {
                          "id": 279,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2109:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 280,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2109:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "2097:23:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_boughtInvestment_$468_storage_$dyn_storage",
                        "typeString": "struct boughtInvestment storage ref[] storage ref"
                      }
                    },
                    "id": 283,
                    "indexExpression": {
                      "id": 282,
                      "name": "index",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 272,
                      "src": "2121:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2097:30:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_boughtInvestment_$468_storage",
                      "typeString": "struct boughtInvestment storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2067:60:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 290,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 286,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967292,
                            "src": "2141:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 287,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "number",
                          "nodeType": "MemberAccess",
                          "src": "2141:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "expression": {
                            "id": 288,
                            "name": "inv",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 277,
                            "src": "2157:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_boughtInvestment_$468_memory_ptr",
                              "typeString": "struct boughtInvestment memory"
                            }
                          },
                          "id": 289,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "redeemBlock",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 465,
                          "src": "2157:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2141:31:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e766573746d656e74206e6f74206d617475726564",
                        "id": 291,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2174:24:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_09cf4c7ecd8bf22d3034c0b6865c6c197e12741e4aa02e3bcf0a28539a3fe580",
                          "typeString": "literal_string \"Investment not matured\""
                        },
                        "value": "Investment not matured"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_09cf4c7ecd8bf22d3034c0b6865c6c197e12741e4aa02e3bcf0a28539a3fe580",
                          "typeString": "literal_string \"Investment not matured\""
                        }
                      ],
                      "id": 285,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2133:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 292,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2133:66:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 293,
                  "nodeType": "ExpressionStatement",
                  "src": "2133:66:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 297,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2219:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 298,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2219:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 299,
                            "name": "investmentsInfo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34,
                            "src": "2231:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_investment_$463_storage_$dyn_storage",
                              "typeString": "struct investment storage ref[] storage ref"
                            }
                          },
                          "id": 302,
                          "indexExpression": {
                            "expression": {
                              "id": 300,
                              "name": "inv",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 277,
                              "src": "2247:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_boughtInvestment_$468_memory_ptr",
                                "typeString": "struct boughtInvestment memory"
                              }
                            },
                            "id": 301,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "id",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 467,
                            "src": "2247:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2231:23:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_investment_$463_storage",
                            "typeString": "struct investment storage ref"
                          }
                        },
                        "id": 303,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "reward",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 460,
                        "src": "2231:30:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 294,
                        "name": "amacoin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6,
                        "src": "2206:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Amacoin_$416",
                          "typeString": "contract Amacoin"
                        }
                      },
                      "id": 296,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 393,
                      "src": "2206:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 304,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2206:56:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 305,
                  "nodeType": "ExpressionStatement",
                  "src": "2206:56:0"
                },
                {
                  "expression": {
                    "id": 312,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "2268:37:0",
                    "subExpression": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 306,
                          "name": "investments",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 21,
                          "src": "2275:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_boughtInvestment_$468_storage_$dyn_storage_$",
                            "typeString": "mapping(address => struct boughtInvestment storage ref[] storage ref)"
                          }
                        },
                        "id": 309,
                        "indexExpression": {
                          "expression": {
                            "id": 307,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "2287:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 308,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2287:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2275:23:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_boughtInvestment_$468_storage_$dyn_storage",
                          "typeString": "struct boughtInvestment storage ref[] storage ref"
                        }
                      },
                      "id": 311,
                      "indexExpression": {
                        "id": 310,
                        "name": "index",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 272,
                        "src": "2299:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2275:30:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_boughtInvestment_$468_storage",
                        "typeString": "struct boughtInvestment storage ref"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 313,
                  "nodeType": "ExpressionStatement",
                  "src": "2268:37:0"
                }
              ]
            },
            "functionSelector": "db006a75",
            "id": 315,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "redeem",
            "nameLocation": "2030:6:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 273,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 272,
                  "mutability": "mutable",
                  "name": "index",
                  "nameLocation": "2045:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 315,
                  "src": "2037:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 271,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2037:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2036:15:0"
            },
            "returnParameters": {
              "id": 274,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2061:0:0"
            },
            "scope": 316,
            "src": "2021:289:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 317,
        "src": "119:2193:0"
      }
    ],
    "src": "45:2268:0"
  },
  "legacyAST": {
    "absolutePath": "/Users/kaikurosawa/Desktop/code/amaclicker/contracts/Amaclicker.sol",
    "exportedSymbols": {
      "Address": [
        2263
      ],
      "Amaclicker": [
        316
      ],
      "Amacoin": [
        416
      ],
      "Context": [
        2286
      ],
      "ERC777": [
        1768
      ],
      "IERC1820Registry": [
        2376
      ],
      "IERC20": [
        656
      ],
      "IERC777": [
        1927
      ],
      "IERC777Recipient": [
        1947
      ],
      "IERC777Sender": [
        1967
      ],
      "Ownable": [
        578
      ],
      "boughtInvestment": [
        468
      ],
      "investment": [
        463
      ],
      "upgrade": [
        456
      ]
    },
    "id": 317,
    "license": "GPL-3.0-or-later",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".3"
        ],
        "nodeType": "PragmaDirective",
        "src": "45:23:0"
      },
      {
        "absolutePath": "/Users/kaikurosawa/Desktop/code/amaclicker/contracts/Amacoin.sol",
        "file": "./Amacoin.sol",
        "id": 2,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 317,
        "sourceUnit": 417,
        "src": "70:23:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/kaikurosawa/Desktop/code/amaclicker/contracts/Structs.sol",
        "file": "./Structs.sol",
        "id": 3,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 317,
        "sourceUnit": 469,
        "src": "94:23:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [
          416
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 316,
        "linearizedBaseContracts": [
          316
        ],
        "name": "Amaclicker",
        "nameLocation": "128:10:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "31629f78",
            "id": 6,
            "mutability": "mutable",
            "name": "amacoin",
            "nameLocation": "158:7:0",
            "nodeType": "VariableDeclaration",
            "scope": 316,
            "src": "143:22:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Amacoin_$416",
              "typeString": "contract Amacoin"
            },
            "typeName": {
              "id": 5,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 4,
                "name": "Amacoin",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 416,
                "src": "143:7:0"
              },
              "referencedDeclaration": 416,
              "src": "143:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Amacoin_$416",
                "typeString": "contract Amacoin"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "7ab68263",
            "id": 10,
            "mutability": "mutable",
            "name": "clickRewards",
            "nameLocation": "220:12:0",
            "nodeType": "VariableDeclaration",
            "scope": 316,
            "src": "185:47:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 9,
              "keyType": {
                "id": 7,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "193:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "185:27:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 8,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "204:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 15,
            "mutability": "mutable",
            "name": "upgrades",
            "nameLocation": "266:8:0",
            "nodeType": "VariableDeclaration",
            "scope": 316,
            "src": "236:38:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
              "typeString": "mapping(address => uint256[])"
            },
            "typeName": {
              "id": 14,
              "keyType": {
                "id": 11,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "244:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "236:29:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
                "typeString": "mapping(address => uint256[])"
              },
              "valueType": {
                "baseType": {
                  "id": 12,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "255:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "id": 13,
                "nodeType": "ArrayTypeName",
                "src": "255:9:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                  "typeString": "uint256[]"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 21,
            "mutability": "mutable",
            "name": "investments",
            "nameLocation": "317:11:0",
            "nodeType": "VariableDeclaration",
            "scope": 316,
            "src": "278:50:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_boughtInvestment_$468_storage_$dyn_storage_$",
              "typeString": "mapping(address => struct boughtInvestment[])"
            },
            "typeName": {
              "id": 20,
              "keyType": {
                "id": 16,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "286:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "278:38:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_boughtInvestment_$468_storage_$dyn_storage_$",
                "typeString": "mapping(address => struct boughtInvestment[])"
              },
              "valueType": {
                "baseType": {
                  "id": 18,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 17,
                    "name": "boughtInvestment",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 468,
                    "src": "297:16:0"
                  },
                  "referencedDeclaration": 468,
                  "src": "297:16:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_boughtInvestment_$468_storage_ptr",
                    "typeString": "struct boughtInvestment"
                  }
                },
                "id": 19,
                "nodeType": "ArrayTypeName",
                "src": "297:18:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_struct$_boughtInvestment_$468_storage_$dyn_storage_ptr",
                  "typeString": "struct boughtInvestment[]"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 26,
            "mutability": "mutable",
            "name": "skins",
            "nameLocation": "359:5:0",
            "nodeType": "VariableDeclaration",
            "scope": 316,
            "src": "332:32:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_bool_$dyn_storage_$",
              "typeString": "mapping(address => bool[])"
            },
            "typeName": {
              "id": 25,
              "keyType": {
                "id": 22,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "340:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "332:26:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_bool_$dyn_storage_$",
                "typeString": "mapping(address => bool[])"
              },
              "valueType": {
                "baseType": {
                  "id": 23,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "351:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "id": 24,
                "nodeType": "ArrayTypeName",
                "src": "351:6:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_bool_$dyn_storage_ptr",
                  "typeString": "bool[]"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "b6b7d933",
            "id": 30,
            "mutability": "mutable",
            "name": "upgradesInfo",
            "nameLocation": "426:12:0",
            "nodeType": "VariableDeclaration",
            "scope": 316,
            "src": "409:29:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_struct$_upgrade_$456_storage_$dyn_storage",
              "typeString": "struct upgrade[]"
            },
            "typeName": {
              "baseType": {
                "id": 28,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 27,
                  "name": "upgrade",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 456,
                  "src": "409:7:0"
                },
                "referencedDeclaration": 456,
                "src": "409:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_upgrade_$456_storage_ptr",
                  "typeString": "struct upgrade"
                }
              },
              "id": 29,
              "nodeType": "ArrayTypeName",
              "src": "409:9:0",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_upgrade_$456_storage_$dyn_storage_ptr",
                "typeString": "struct upgrade[]"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "3eedd49b",
            "id": 34,
            "mutability": "mutable",
            "name": "investmentsInfo",
            "nameLocation": "462:15:0",
            "nodeType": "VariableDeclaration",
            "scope": 316,
            "src": "442:35:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_struct$_investment_$463_storage_$dyn_storage",
              "typeString": "struct investment[]"
            },
            "typeName": {
              "baseType": {
                "id": 32,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 31,
                  "name": "investment",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 463,
                  "src": "442:10:0"
                },
                "referencedDeclaration": 463,
                "src": "442:10:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_investment_$463_storage_ptr",
                  "typeString": "struct investment"
                }
              },
              "id": 33,
              "nodeType": "ArrayTypeName",
              "src": "442:12:0",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_investment_$463_storage_$dyn_storage_ptr",
                "typeString": "struct investment[]"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "8a3e059a",
            "id": 49,
            "mutability": "mutable",
            "name": "skinsInfo",
            "nameLocation": "498:9:0",
            "nodeType": "VariableDeclaration",
            "scope": 316,
            "src": "481:63:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
              "typeString": "uint256[]"
            },
            "typeName": {
              "baseType": {
                "id": 35,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "481:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "id": 36,
              "nodeType": "ArrayTypeName",
              "src": "481:9:0",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                "typeString": "uint256[]"
              }
            },
            "value": {
              "components": [
                {
                  "hexValue": "30",
                  "id": 37,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "511:1:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_0_by_1",
                    "typeString": "int_const 0"
                  },
                  "value": "0"
                },
                {
                  "commonType": {
                    "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                    "typeString": "int_const 1000000000000000000000"
                  },
                  "id": 42,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "lValueRequested": false,
                  "leftExpression": {
                    "hexValue": "31303030",
                    "id": 38,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "514:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1000_by_1",
                      "typeString": "int_const 1000"
                    },
                    "value": "1000"
                  },
                  "nodeType": "BinaryOperation",
                  "operator": "*",
                  "rightExpression": {
                    "commonType": {
                      "typeIdentifier": "t_rational_1000000000000000000_by_1",
                      "typeString": "int_const 1000000000000000000"
                    },
                    "id": 41,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "leftExpression": {
                      "hexValue": "3130",
                      "id": 39,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "521:2:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_10_by_1",
                        "typeString": "int_const 10"
                      },
                      "value": "10"
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "**",
                    "rightExpression": {
                      "hexValue": "3138",
                      "id": 40,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "525:2:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_18_by_1",
                        "typeString": "int_const 18"
                      },
                      "value": "18"
                    },
                    "src": "521:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1000000000000000000_by_1",
                      "typeString": "int_const 1000000000000000000"
                    }
                  },
                  "src": "514:13:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                    "typeString": "int_const 1000000000000000000000"
                  }
                },
                {
                  "commonType": {
                    "typeIdentifier": "t_rational_10000000000000000000000_by_1",
                    "typeString": "int_const 10000000000000000000000"
                  },
                  "id": 47,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "lValueRequested": false,
                  "leftExpression": {
                    "hexValue": "3130303030",
                    "id": 43,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "529:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_10000_by_1",
                      "typeString": "int_const 10000"
                    },
                    "value": "10000"
                  },
                  "nodeType": "BinaryOperation",
                  "operator": "*",
                  "rightExpression": {
                    "commonType": {
                      "typeIdentifier": "t_rational_1000000000000000000_by_1",
                      "typeString": "int_const 1000000000000000000"
                    },
                    "id": 46,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "leftExpression": {
                      "hexValue": "3130",
                      "id": 44,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "537:2:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_10_by_1",
                        "typeString": "int_const 10"
                      },
                      "value": "10"
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "**",
                    "rightExpression": {
                      "hexValue": "3138",
                      "id": 45,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "541:2:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_18_by_1",
                        "typeString": "int_const 18"
                      },
                      "value": "18"
                    },
                    "src": "537:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1000000000000000000_by_1",
                      "typeString": "int_const 1000000000000000000"
                    }
                  },
                  "src": "529:14:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_10000000000000000000000_by_1",
                    "typeString": "int_const 10000000000000000000000"
                  }
                }
              ],
              "id": 48,
              "isConstant": false,
              "isInlineArray": true,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "nodeType": "TupleExpression",
              "src": "510:34:0",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_uint80_$3_memory_ptr",
                "typeString": "uint80[3] memory"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 52,
            "mutability": "mutable",
            "name": "defaultOperators",
            "nameLocation": "606:16:0",
            "nodeType": "VariableDeclaration",
            "scope": 316,
            "src": "588:34:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 50,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "588:7:0",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 51,
              "nodeType": "ArrayTypeName",
              "src": "588:9:0",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 138,
              "nodeType": "Block",
              "src": "658:396:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 63,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "694:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Amaclicker_$316",
                              "typeString": "contract Amaclicker"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Amaclicker_$316",
                              "typeString": "contract Amaclicker"
                            }
                          ],
                          "id": 62,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "686:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 61,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "686:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 64,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "686:13:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 58,
                        "name": "defaultOperators",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 52,
                        "src": "664:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 60,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "664:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                        "typeString": "function (address[] storage pointer,address)"
                      }
                    },
                    "id": 65,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "664:36:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 66,
                  "nodeType": "ExpressionStatement",
                  "src": "664:36:0"
                },
                {
                  "expression": {
                    "id": 74,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 67,
                      "name": "amacoin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6,
                      "src": "706:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Amacoin_$416",
                        "typeString": "contract Amacoin"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 71,
                          "name": "defaultOperators",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 52,
                          "src": "728:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage",
                            "typeString": "address[] storage ref"
                          }
                        },
                        {
                          "id": 72,
                          "name": "cheemscoin",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 55,
                          "src": "746:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$656",
                            "typeString": "contract IERC20"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage",
                            "typeString": "address[] storage ref"
                          },
                          {
                            "typeIdentifier": "t_contract$_IERC20_$656",
                            "typeString": "contract IERC20"
                          }
                        ],
                        "id": 70,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "716:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_array$_t_address_$dyn_memory_ptr_$_t_contract$_IERC20_$656_$returns$_t_contract$_Amacoin_$416_$",
                          "typeString": "function (address[] memory,contract IERC20) returns (contract Amacoin)"
                        },
                        "typeName": {
                          "id": 69,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 68,
                            "name": "Amacoin",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 416,
                            "src": "720:7:0"
                          },
                          "referencedDeclaration": 416,
                          "src": "720:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Amacoin_$416",
                            "typeString": "contract Amacoin"
                          }
                        }
                      },
                      "id": 73,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "716:41:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Amacoin_$416",
                        "typeString": "contract Amacoin"
                      }
                    },
                    "src": "706:51:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Amacoin_$416",
                      "typeString": "contract Amacoin"
                    }
                  },
                  "id": 75,
                  "nodeType": "ExpressionStatement",
                  "src": "706:51:0"
                },
                {
                  "expression": {
                    "id": 77,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "763:23:0",
                    "subExpression": {
                      "id": 76,
                      "name": "defaultOperators",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 52,
                      "src": "770:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                        "typeString": "address[] storage ref"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 78,
                  "nodeType": "ExpressionStatement",
                  "src": "763:23:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 82,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "818:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 83,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "818:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 79,
                        "name": "amacoin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6,
                        "src": "792:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Amacoin_$416",
                          "typeString": "contract Amacoin"
                        }
                      },
                      "id": 81,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferOwnership",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 577,
                      "src": "792:25:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 84,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "792:37:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 85,
                  "nodeType": "ExpressionStatement",
                  "src": "792:37:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_rational_19990000000000000000_by_1",
                              "typeString": "int_const 19990000000000000000"
                            },
                            "id": 94,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "leftExpression": {
                              "hexValue": "31392e3939",
                              "id": 90,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "891:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1999_by_100",
                                "typeString": "rational_const 1999 / 100"
                              },
                              "value": "19.99"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "commonType": {
                                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                "typeString": "int_const 1000000000000000000"
                              },
                              "id": 93,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "leftExpression": {
                                "hexValue": "3130",
                                "id": 91,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "899:2:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_10_by_1",
                                  "typeString": "int_const 10"
                                },
                                "value": "10"
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "**",
                              "rightExpression": {
                                "hexValue": "3138",
                                "id": 92,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "903:2:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_18_by_1",
                                  "typeString": "int_const 18"
                                },
                                "value": "18"
                              },
                              "src": "899:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                "typeString": "int_const 1000000000000000000"
                              }
                            },
                            "src": "891:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_19990000000000000000_by_1",
                              "typeString": "int_const 19990000000000000000"
                            }
                          },
                          {
                            "commonType": {
                              "typeIdentifier": "t_rational_100000000000000000_by_1",
                              "typeString": "int_const 100000000000000000"
                            },
                            "id": 99,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "leftExpression": {
                              "hexValue": "302e31",
                              "id": 95,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "907:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_10",
                                "typeString": "rational_const 1 / 10"
                              },
                              "value": "0.1"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "commonType": {
                                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                "typeString": "int_const 1000000000000000000"
                              },
                              "id": 98,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "leftExpression": {
                                "hexValue": "3130",
                                "id": 96,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "913:2:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_10_by_1",
                                  "typeString": "int_const 10"
                                },
                                "value": "10"
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "**",
                              "rightExpression": {
                                "hexValue": "3138",
                                "id": 97,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "917:2:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_18_by_1",
                                  "typeString": "int_const 18"
                                },
                                "value": "18"
                              },
                              "src": "913:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                "typeString": "int_const 1000000000000000000"
                              }
                            },
                            "src": "907:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_100000000000000000_by_1",
                              "typeString": "int_const 100000000000000000"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_19990000000000000000_by_1",
                              "typeString": "int_const 19990000000000000000"
                            },
                            {
                              "typeIdentifier": "t_rational_100000000000000000_by_1",
                              "typeString": "int_const 100000000000000000"
                            }
                          ],
                          "id": 89,
                          "name": "upgrade",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 456,
                          "src": "883:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_upgrade_$456_storage_ptr_$",
                            "typeString": "type(struct upgrade storage pointer)"
                          }
                        },
                        "id": 100,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "883:37:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_upgrade_$456_memory_ptr",
                          "typeString": "struct upgrade memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_upgrade_$456_memory_ptr",
                          "typeString": "struct upgrade memory"
                        }
                      ],
                      "expression": {
                        "id": 86,
                        "name": "upgradesInfo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30,
                        "src": "865:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_upgrade_$456_storage_$dyn_storage",
                          "typeString": "struct upgrade storage ref[] storage ref"
                        }
                      },
                      "id": 88,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "865:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_upgrade_$456_storage_$dyn_storage_ptr_$_t_struct$_upgrade_$456_storage_$returns$__$bound_to$_t_array$_t_struct$_upgrade_$456_storage_$dyn_storage_ptr_$",
                        "typeString": "function (struct upgrade storage ref[] storage pointer,struct upgrade storage ref)"
                      }
                    },
                    "id": 101,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "865:56:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 102,
                  "nodeType": "ExpressionStatement",
                  "src": "865:56:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000000"
                            },
                            "id": 111,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "leftExpression": {
                              "hexValue": "31303030",
                              "id": 107,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "953:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1000_by_1",
                                "typeString": "int_const 1000"
                              },
                              "value": "1000"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "commonType": {
                                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                "typeString": "int_const 1000000000000000000"
                              },
                              "id": 110,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "leftExpression": {
                                "hexValue": "3130",
                                "id": 108,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "960:2:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_10_by_1",
                                  "typeString": "int_const 10"
                                },
                                "value": "10"
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "**",
                              "rightExpression": {
                                "hexValue": "3138",
                                "id": 109,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "964:2:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_18_by_1",
                                  "typeString": "int_const 18"
                                },
                                "value": "18"
                              },
                              "src": "960:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                "typeString": "int_const 1000000000000000000"
                              }
                            },
                            "src": "953:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000000"
                            }
                          },
                          {
                            "commonType": {
                              "typeIdentifier": "t_rational_10000000000000000000_by_1",
                              "typeString": "int_const 10000000000000000000"
                            },
                            "id": 116,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "leftExpression": {
                              "hexValue": "3130",
                              "id": 112,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "968:2:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_10_by_1",
                                "typeString": "int_const 10"
                              },
                              "value": "10"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "commonType": {
                                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                "typeString": "int_const 1000000000000000000"
                              },
                              "id": 115,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "leftExpression": {
                                "hexValue": "3130",
                                "id": 113,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "973:2:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_10_by_1",
                                  "typeString": "int_const 10"
                                },
                                "value": "10"
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "**",
                              "rightExpression": {
                                "hexValue": "3138",
                                "id": 114,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "977:2:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_18_by_1",
                                  "typeString": "int_const 18"
                                },
                                "value": "18"
                              },
                              "src": "973:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                "typeString": "int_const 1000000000000000000"
                              }
                            },
                            "src": "968:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10000000000000000000_by_1",
                              "typeString": "int_const 10000000000000000000"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000000"
                            },
                            {
                              "typeIdentifier": "t_rational_10000000000000000000_by_1",
                              "typeString": "int_const 10000000000000000000"
                            }
                          ],
                          "id": 106,
                          "name": "upgrade",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 456,
                          "src": "945:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_upgrade_$456_storage_ptr_$",
                            "typeString": "type(struct upgrade storage pointer)"
                          }
                        },
                        "id": 117,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "945:35:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_upgrade_$456_memory_ptr",
                          "typeString": "struct upgrade memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_upgrade_$456_memory_ptr",
                          "typeString": "struct upgrade memory"
                        }
                      ],
                      "expression": {
                        "id": 103,
                        "name": "upgradesInfo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30,
                        "src": "927:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_upgrade_$456_storage_$dyn_storage",
                          "typeString": "struct upgrade storage ref[] storage ref"
                        }
                      },
                      "id": 105,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "927:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_upgrade_$456_storage_$dyn_storage_ptr_$_t_struct$_upgrade_$456_storage_$returns$__$bound_to$_t_array$_t_struct$_upgrade_$456_storage_$dyn_storage_ptr_$",
                        "typeString": "function (struct upgrade storage ref[] storage pointer,struct upgrade storage ref)"
                      }
                    },
                    "id": 118,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "927:54:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 119,
                  "nodeType": "ExpressionStatement",
                  "src": "927:54:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_rational_10000000000000000000_by_1",
                              "typeString": "int_const 10000000000000000000"
                            },
                            "id": 128,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "leftExpression": {
                              "hexValue": "3130",
                              "id": 124,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1019:2:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_10_by_1",
                                "typeString": "int_const 10"
                              },
                              "value": "10"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "commonType": {
                                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                "typeString": "int_const 1000000000000000000"
                              },
                              "id": 127,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "leftExpression": {
                                "hexValue": "3130",
                                "id": 125,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1024:2:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_10_by_1",
                                  "typeString": "int_const 10"
                                },
                                "value": "10"
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "**",
                              "rightExpression": {
                                "hexValue": "3138",
                                "id": 126,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1028:2:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_18_by_1",
                                  "typeString": "int_const 18"
                                },
                                "value": "18"
                              },
                              "src": "1024:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                "typeString": "int_const 1000000000000000000"
                              }
                            },
                            "src": "1019:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10000000000000000000_by_1",
                              "typeString": "int_const 10000000000000000000"
                            }
                          },
                          {
                            "commonType": {
                              "typeIdentifier": "t_rational_40000000000000000000_by_1",
                              "typeString": "int_const 40000000000000000000"
                            },
                            "id": 133,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "leftExpression": {
                              "hexValue": "3430",
                              "id": 129,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1032:2:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_40_by_1",
                                "typeString": "int_const 40"
                              },
                              "value": "40"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "commonType": {
                                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                "typeString": "int_const 1000000000000000000"
                              },
                              "id": 132,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "leftExpression": {
                                "hexValue": "3130",
                                "id": 130,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1037:2:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_10_by_1",
                                  "typeString": "int_const 10"
                                },
                                "value": "10"
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "**",
                              "rightExpression": {
                                "hexValue": "3138",
                                "id": 131,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1041:2:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_18_by_1",
                                  "typeString": "int_const 18"
                                },
                                "value": "18"
                              },
                              "src": "1037:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                "typeString": "int_const 1000000000000000000"
                              }
                            },
                            "src": "1032:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_40000000000000000000_by_1",
                              "typeString": "int_const 40000000000000000000"
                            }
                          },
                          {
                            "hexValue": "3732",
                            "id": 134,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1045:2:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_72_by_1",
                              "typeString": "int_const 72"
                            },
                            "value": "72"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_10000000000000000000_by_1",
                              "typeString": "int_const 10000000000000000000"
                            },
                            {
                              "typeIdentifier": "t_rational_40000000000000000000_by_1",
                              "typeString": "int_const 40000000000000000000"
                            },
                            {
                              "typeIdentifier": "t_rational_72_by_1",
                              "typeString": "int_const 72"
                            }
                          ],
                          "id": 123,
                          "name": "investment",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 463,
                          "src": "1008:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_investment_$463_storage_ptr_$",
                            "typeString": "type(struct investment storage pointer)"
                          }
                        },
                        "id": 135,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1008:40:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_investment_$463_memory_ptr",
                          "typeString": "struct investment memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_investment_$463_memory_ptr",
                          "typeString": "struct investment memory"
                        }
                      ],
                      "expression": {
                        "id": 120,
                        "name": "investmentsInfo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34,
                        "src": "987:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_investment_$463_storage_$dyn_storage",
                          "typeString": "struct investment storage ref[] storage ref"
                        }
                      },
                      "id": 122,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "987:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_investment_$463_storage_$dyn_storage_ptr_$_t_struct$_investment_$463_storage_$returns$__$bound_to$_t_array$_t_struct$_investment_$463_storage_$dyn_storage_ptr_$",
                        "typeString": "function (struct investment storage ref[] storage pointer,struct investment storage ref)"
                      }
                    },
                    "id": 136,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "987:62:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 137,
                  "nodeType": "ExpressionStatement",
                  "src": "987:62:0"
                }
              ]
            },
            "id": 139,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 56,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 55,
                  "mutability": "mutable",
                  "name": "cheemscoin",
                  "nameLocation": "646:10:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 139,
                  "src": "639:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$656",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 54,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 53,
                      "name": "IERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 656,
                      "src": "639:6:0"
                    },
                    "referencedDeclaration": 656,
                    "src": "639:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$656",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "638:19:0"
            },
            "returnParameters": {
              "id": 57,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "658:0:0"
            },
            "scope": 316,
            "src": "627:427:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 157,
              "nodeType": "Block",
              "src": "1128:70:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 145,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1147:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 146,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1147:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 154,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 147,
                            "name": "clickRewards",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10,
                            "src": "1159:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 150,
                          "indexExpression": {
                            "expression": {
                              "id": 148,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "1172:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 149,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "1172:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1159:24:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "id": 153,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "3130",
                            "id": 151,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1186:2:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10_by_1",
                              "typeString": "int_const 10"
                            },
                            "value": "10"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "**",
                          "rightExpression": {
                            "hexValue": "3138",
                            "id": 152,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1190:2:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_18_by_1",
                              "typeString": "int_const 18"
                            },
                            "value": "18"
                          },
                          "src": "1186:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          }
                        },
                        "src": "1159:33:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 142,
                        "name": "amacoin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6,
                        "src": "1134:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Amacoin_$416",
                          "typeString": "contract Amacoin"
                        }
                      },
                      "id": 144,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 393,
                      "src": "1134:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 155,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1134:59:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 156,
                  "nodeType": "ExpressionStatement",
                  "src": "1134:59:0"
                }
              ]
            },
            "functionSelector": "7d55923d",
            "id": 158,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "click",
            "nameLocation": "1111:5:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 140,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1116:2:0"
            },
            "returnParameters": {
              "id": 141,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1128:0:0"
            },
            "scope": 316,
            "src": "1102:96:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 184,
              "nodeType": "Block",
              "src": "1234:139:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 169,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 165,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "1266:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 166,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "1266:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 163,
                              "name": "amacoin",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6,
                              "src": "1248:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Amacoin_$416",
                                "typeString": "contract Amacoin"
                              }
                            },
                            "id": 164,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 870,
                            "src": "1248:17:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 167,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1248:29:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 168,
                          "name": "cost",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 160,
                          "src": "1281:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1248:37:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420656e6f75676820616d61636f696e73",
                        "id": 170,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1287:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e789fa5da66c520babfe6647147fb3f2218ada4a0bc389f7b31e5ca1f5cdb6d0",
                          "typeString": "literal_string \"Not enough amacoins\""
                        },
                        "value": "Not enough amacoins"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e789fa5da66c520babfe6647147fb3f2218ada4a0bc389f7b31e5ca1f5cdb6d0",
                          "typeString": "literal_string \"Not enough amacoins\""
                        }
                      ],
                      "id": 162,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1240:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 171,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1240:69:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 172,
                  "nodeType": "ExpressionStatement",
                  "src": "1240:69:0"
                },
                {
                  "id": 173,
                  "nodeType": "PlaceholderStatement",
                  "src": "1315:1:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 177,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1343:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 178,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1343:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 179,
                        "name": "cost",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 160,
                        "src": "1355:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "",
                        "id": 180,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1361:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      },
                      {
                        "hexValue": "",
                        "id": 181,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1365:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "expression": {
                        "id": 174,
                        "name": "amacoin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6,
                        "src": "1322:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Amacoin_$416",
                          "typeString": "contract Amacoin"
                        }
                      },
                      "id": 176,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "operatorBurn",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1166,
                      "src": "1322:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256,bytes memory,bytes memory) external"
                      }
                    },
                    "id": 182,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1322:46:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 183,
                  "nodeType": "ExpressionStatement",
                  "src": "1322:46:0"
                }
              ]
            },
            "id": 185,
            "name": "purchase",
            "nameLocation": "1211:8:0",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 161,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 160,
                  "mutability": "mutable",
                  "name": "cost",
                  "nameLocation": "1228:4:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 185,
                  "src": "1220:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 159,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1220:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1219:14:0"
            },
            "src": "1202:171:0",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 220,
              "nodeType": "Block",
              "src": "1470:145:0",
              "statements": [
                {
                  "assignments": [
                    198
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 198,
                      "mutability": "mutable",
                      "name": "up",
                      "nameLocation": "1491:2:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 220,
                      "src": "1476:17:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_upgrade_$456_memory_ptr",
                        "typeString": "struct upgrade"
                      },
                      "typeName": {
                        "id": 197,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 196,
                          "name": "upgrade",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 456,
                          "src": "1476:7:0"
                        },
                        "referencedDeclaration": 456,
                        "src": "1476:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_upgrade_$456_storage_ptr",
                          "typeString": "struct upgrade"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 202,
                  "initialValue": {
                    "baseExpression": {
                      "id": 199,
                      "name": "upgradesInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30,
                      "src": "1496:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_upgrade_$456_storage_$dyn_storage",
                        "typeString": "struct upgrade storage ref[] storage ref"
                      }
                    },
                    "id": 201,
                    "indexExpression": {
                      "id": 200,
                      "name": "upgradeIndex",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 187,
                      "src": "1509:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1496:26:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_upgrade_$456_storage",
                      "typeString": "struct upgrade storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1476:46:0"
                },
                {
                  "expression": {
                    "id": 210,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 203,
                          "name": "upgrades",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15,
                          "src": "1529:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
                            "typeString": "mapping(address => uint256[] storage ref)"
                          }
                        },
                        "id": 207,
                        "indexExpression": {
                          "expression": {
                            "id": 204,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1538:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 205,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1538:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1529:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                          "typeString": "uint256[] storage ref"
                        }
                      },
                      "id": 208,
                      "indexExpression": {
                        "id": 206,
                        "name": "upgradeIndex",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 187,
                        "src": "1550:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1529:34:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 209,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1567:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "1529:39:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 211,
                  "nodeType": "ExpressionStatement",
                  "src": "1529:39:0"
                },
                {
                  "expression": {
                    "id": 218,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 212,
                        "name": "clickRewards",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10,
                        "src": "1574:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 215,
                      "indexExpression": {
                        "expression": {
                          "id": 213,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1587:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 214,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1587:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1574:24:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "expression": {
                        "id": 216,
                        "name": "up",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 198,
                        "src": "1602:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_upgrade_$456_memory_ptr",
                          "typeString": "struct upgrade memory"
                        }
                      },
                      "id": 217,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "boost",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 455,
                      "src": "1602:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1574:36:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 219,
                  "nodeType": "ExpressionStatement",
                  "src": "1574:36:0"
                }
              ]
            },
            "functionSelector": "a5a2cb19",
            "id": 221,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "expression": {
                      "baseExpression": {
                        "id": 190,
                        "name": "upgradesInfo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30,
                        "src": "1437:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_upgrade_$456_storage_$dyn_storage",
                          "typeString": "struct upgrade storage ref[] storage ref"
                        }
                      },
                      "id": 192,
                      "indexExpression": {
                        "id": 191,
                        "name": "upgradeIndex",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 187,
                        "src": "1450:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "1437:26:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_upgrade_$456_storage",
                        "typeString": "struct upgrade storage ref"
                      }
                    },
                    "id": 193,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "cost",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 453,
                    "src": "1437:31:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 194,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 189,
                  "name": "purchase",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 185,
                  "src": "1428:8:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "1428:41:0"
              }
            ],
            "name": "buyUpgrade",
            "nameLocation": "1386:10:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 188,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 187,
                  "mutability": "mutable",
                  "name": "upgradeIndex",
                  "nameLocation": "1405:12:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 221,
                  "src": "1397:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 186,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1397:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1396:22:0"
            },
            "returnParameters": {
              "id": 195,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1470:0:0"
            },
            "scope": 316,
            "src": "1377:238:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 249,
              "nodeType": "Block",
              "src": "1734:140:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 244,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 238,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967292,
                                "src": "1793:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 239,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "number",
                              "nodeType": "MemberAccess",
                              "src": "1793:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "expression": {
                                "baseExpression": {
                                  "id": 240,
                                  "name": "investmentsInfo",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 34,
                                  "src": "1808:15:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_investment_$463_storage_$dyn_storage",
                                    "typeString": "struct investment storage ref[] storage ref"
                                  }
                                },
                                "id": 242,
                                "indexExpression": {
                                  "id": 241,
                                  "name": "investmentIndex",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 223,
                                  "src": "1824:15:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "1808:32:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_investment_$463_storage",
                                  "typeString": "struct investment storage ref"
                                }
                              },
                              "id": 243,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "time",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 462,
                              "src": "1808:37:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "1793:52:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 245,
                            "name": "investmentIndex",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 223,
                            "src": "1847:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 237,
                          "name": "boughtInvestment",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 468,
                          "src": "1776:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_boughtInvestment_$468_storage_ptr_$",
                            "typeString": "type(struct boughtInvestment storage pointer)"
                          }
                        },
                        "id": 246,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1776:87:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_boughtInvestment_$468_memory_ptr",
                          "typeString": "struct boughtInvestment memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_boughtInvestment_$468_memory_ptr",
                          "typeString": "struct boughtInvestment memory"
                        }
                      ],
                      "expression": {
                        "baseExpression": {
                          "id": 232,
                          "name": "investments",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 21,
                          "src": "1740:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_boughtInvestment_$468_storage_$dyn_storage_$",
                            "typeString": "mapping(address => struct boughtInvestment storage ref[] storage ref)"
                          }
                        },
                        "id": 235,
                        "indexExpression": {
                          "expression": {
                            "id": 233,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1752:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 234,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1752:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1740:23:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_boughtInvestment_$468_storage_$dyn_storage",
                          "typeString": "struct boughtInvestment storage ref[] storage ref"
                        }
                      },
                      "id": 236,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "1740:28:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_boughtInvestment_$468_storage_$dyn_storage_ptr_$_t_struct$_boughtInvestment_$468_storage_$returns$__$bound_to$_t_array$_t_struct$_boughtInvestment_$468_storage_$dyn_storage_ptr_$",
                        "typeString": "function (struct boughtInvestment storage ref[] storage pointer,struct boughtInvestment storage ref)"
                      }
                    },
                    "id": 247,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1740:129:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 248,
                  "nodeType": "ExpressionStatement",
                  "src": "1740:129:0"
                }
              ]
            },
            "functionSelector": "57a1c389",
            "id": 250,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "expression": {
                      "baseExpression": {
                        "id": 226,
                        "name": "investmentsInfo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34,
                        "src": "1693:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_investment_$463_storage_$dyn_storage",
                          "typeString": "struct investment storage ref[] storage ref"
                        }
                      },
                      "id": 228,
                      "indexExpression": {
                        "id": 227,
                        "name": "investmentIndex",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 223,
                        "src": "1709:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "1693:32:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_investment_$463_storage",
                        "typeString": "struct investment storage ref"
                      }
                    },
                    "id": 229,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "cost",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 458,
                    "src": "1693:37:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 230,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 225,
                  "name": "purchase",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 185,
                  "src": "1684:8:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "1684:47:0"
              }
            ],
            "name": "buyInvestment",
            "nameLocation": "1628:13:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 224,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 223,
                  "mutability": "mutable",
                  "name": "investmentIndex",
                  "nameLocation": "1650:15:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 250,
                  "src": "1642:23:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 222,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1642:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1641:25:0"
            },
            "returnParameters": {
              "id": 231,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1734:0:0"
            },
            "scope": 316,
            "src": "1619:255:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 269,
              "nodeType": "Block",
              "src": "1950:44:0",
              "statements": [
                {
                  "expression": {
                    "id": 267,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 260,
                          "name": "skins",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 26,
                          "src": "1956:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_bool_$dyn_storage_$",
                            "typeString": "mapping(address => bool[] storage ref)"
                          }
                        },
                        "id": 264,
                        "indexExpression": {
                          "expression": {
                            "id": 261,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1962:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 262,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1962:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1956:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bool_$dyn_storage",
                          "typeString": "bool[] storage ref"
                        }
                      },
                      "id": 265,
                      "indexExpression": {
                        "id": 263,
                        "name": "skindex",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 252,
                        "src": "1974:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1956:26:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 266,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1985:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1956:33:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 268,
                  "nodeType": "ExpressionStatement",
                  "src": "1956:33:0"
                }
              ]
            },
            "functionSelector": "9d235de7",
            "id": 270,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "baseExpression": {
                      "id": 255,
                      "name": "skinsInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 49,
                      "src": "1930:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                        "typeString": "uint256[] storage ref"
                      }
                    },
                    "id": 257,
                    "indexExpression": {
                      "id": 256,
                      "name": "skindex",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 252,
                      "src": "1940:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1930:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 258,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 254,
                  "name": "purchase",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 185,
                  "src": "1921:8:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "1921:28:0"
              }
            ],
            "name": "buySkin",
            "nameLocation": "1887:7:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 253,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 252,
                  "mutability": "mutable",
                  "name": "skindex",
                  "nameLocation": "1903:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 270,
                  "src": "1895:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 251,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1895:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1894:17:0"
            },
            "returnParameters": {
              "id": 259,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1950:0:0"
            },
            "scope": 316,
            "src": "1878:116:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 314,
              "nodeType": "Block",
              "src": "2061:249:0",
              "statements": [
                {
                  "assignments": [
                    277
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 277,
                      "mutability": "mutable",
                      "name": "inv",
                      "nameLocation": "2091:3:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 314,
                      "src": "2067:27:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_boughtInvestment_$468_memory_ptr",
                        "typeString": "struct boughtInvestment"
                      },
                      "typeName": {
                        "id": 276,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 275,
                          "name": "boughtInvestment",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 468,
                          "src": "2067:16:0"
                        },
                        "referencedDeclaration": 468,
                        "src": "2067:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_boughtInvestment_$468_storage_ptr",
                          "typeString": "struct boughtInvestment"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 284,
                  "initialValue": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 278,
                        "name": "investments",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21,
                        "src": "2097:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_boughtInvestment_$468_storage_$dyn_storage_$",
                          "typeString": "mapping(address => struct boughtInvestment storage ref[] storage ref)"
                        }
                      },
                      "id": 281,
                      "indexExpression": {
                        "expression": {
                          "id": 279,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2109:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 280,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2109:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "2097:23:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_boughtInvestment_$468_storage_$dyn_storage",
                        "typeString": "struct boughtInvestment storage ref[] storage ref"
                      }
                    },
                    "id": 283,
                    "indexExpression": {
                      "id": 282,
                      "name": "index",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 272,
                      "src": "2121:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2097:30:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_boughtInvestment_$468_storage",
                      "typeString": "struct boughtInvestment storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2067:60:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 290,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 286,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967292,
                            "src": "2141:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 287,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "number",
                          "nodeType": "MemberAccess",
                          "src": "2141:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "expression": {
                            "id": 288,
                            "name": "inv",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 277,
                            "src": "2157:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_boughtInvestment_$468_memory_ptr",
                              "typeString": "struct boughtInvestment memory"
                            }
                          },
                          "id": 289,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "redeemBlock",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 465,
                          "src": "2157:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2141:31:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e766573746d656e74206e6f74206d617475726564",
                        "id": 291,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2174:24:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_09cf4c7ecd8bf22d3034c0b6865c6c197e12741e4aa02e3bcf0a28539a3fe580",
                          "typeString": "literal_string \"Investment not matured\""
                        },
                        "value": "Investment not matured"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_09cf4c7ecd8bf22d3034c0b6865c6c197e12741e4aa02e3bcf0a28539a3fe580",
                          "typeString": "literal_string \"Investment not matured\""
                        }
                      ],
                      "id": 285,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2133:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 292,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2133:66:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 293,
                  "nodeType": "ExpressionStatement",
                  "src": "2133:66:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 297,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2219:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 298,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2219:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 299,
                            "name": "investmentsInfo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34,
                            "src": "2231:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_investment_$463_storage_$dyn_storage",
                              "typeString": "struct investment storage ref[] storage ref"
                            }
                          },
                          "id": 302,
                          "indexExpression": {
                            "expression": {
                              "id": 300,
                              "name": "inv",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 277,
                              "src": "2247:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_boughtInvestment_$468_memory_ptr",
                                "typeString": "struct boughtInvestment memory"
                              }
                            },
                            "id": 301,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "id",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 467,
                            "src": "2247:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2231:23:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_investment_$463_storage",
                            "typeString": "struct investment storage ref"
                          }
                        },
                        "id": 303,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "reward",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 460,
                        "src": "2231:30:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 294,
                        "name": "amacoin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6,
                        "src": "2206:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Amacoin_$416",
                          "typeString": "contract Amacoin"
                        }
                      },
                      "id": 296,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 393,
                      "src": "2206:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 304,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2206:56:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 305,
                  "nodeType": "ExpressionStatement",
                  "src": "2206:56:0"
                },
                {
                  "expression": {
                    "id": 312,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "2268:37:0",
                    "subExpression": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 306,
                          "name": "investments",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 21,
                          "src": "2275:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_boughtInvestment_$468_storage_$dyn_storage_$",
                            "typeString": "mapping(address => struct boughtInvestment storage ref[] storage ref)"
                          }
                        },
                        "id": 309,
                        "indexExpression": {
                          "expression": {
                            "id": 307,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "2287:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 308,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2287:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2275:23:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_boughtInvestment_$468_storage_$dyn_storage",
                          "typeString": "struct boughtInvestment storage ref[] storage ref"
                        }
                      },
                      "id": 311,
                      "indexExpression": {
                        "id": 310,
                        "name": "index",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 272,
                        "src": "2299:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2275:30:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_boughtInvestment_$468_storage",
                        "typeString": "struct boughtInvestment storage ref"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 313,
                  "nodeType": "ExpressionStatement",
                  "src": "2268:37:0"
                }
              ]
            },
            "functionSelector": "db006a75",
            "id": 315,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "redeem",
            "nameLocation": "2030:6:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 273,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 272,
                  "mutability": "mutable",
                  "name": "index",
                  "nameLocation": "2045:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 315,
                  "src": "2037:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 271,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2037:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2036:15:0"
            },
            "returnParameters": {
              "id": 274,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2061:0:0"
            },
            "scope": 316,
            "src": "2021:289:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 317,
        "src": "119:2193:0"
      }
    ],
    "src": "45:2268:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.3+commit.8d00100c.Emscripten.clang"
  },
  "networks": {
    "100": {
      "events": {},
      "links": {},
      "address": "0x18D9b6a9797D728989547F9d7d82250e4A830cA8",
      "transactionHash": "0x55d6bfe0e841215c35e5caec2d6e3c4ed8a4c9cf28e59a87e649897e5afbbe18"
    },
    "5777": {
      "events": {},
      "links": {},
      "address": "0xa814fcCEBBb324522d6085f4c83822c66A320b17",
      "transactionHash": "0x674edca771b17c8791238c0e55727601568c72f09c8484a9f9afcaa9f0c3f64e"
    }
  },
  "schemaVersion": "3.3.3",
  "updatedAt": "2021-04-02T12:22:35.724Z",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}